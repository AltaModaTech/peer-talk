### YamlMime:XRefMap
sorted: true
references:
- uid: PeerTalk
  name: PeerTalk
  href: api/PeerTalk.html
  commentId: N:PeerTalk
  fullName: PeerTalk
  nameWithType: PeerTalk
- uid: PeerTalk.BlackList`1
  name: BlackList<T>
  href: api/PeerTalk.BlackList-1.html
  commentId: T:PeerTalk.BlackList`1
  name.vb: BlackList(Of T)
  fullName: PeerTalk.BlackList<T>
  fullName.vb: PeerTalk.BlackList(Of T)
  nameWithType: BlackList<T>
  nameWithType.vb: BlackList(Of T)
- uid: PeerTalk.BlackList`1.IsAllowedAsync(`0,System.Threading.CancellationToken)
  name: IsAllowedAsync(T, CancellationToken)
  href: api/PeerTalk.BlackList-1.html#PeerTalk_BlackList_1_IsAllowedAsync__0_System_Threading_CancellationToken_
  commentId: M:PeerTalk.BlackList`1.IsAllowedAsync(`0,System.Threading.CancellationToken)
  fullName: PeerTalk.BlackList<T>.IsAllowedAsync(T, System.Threading.CancellationToken)
  fullName.vb: PeerTalk.BlackList(Of T).IsAllowedAsync(T, System.Threading.CancellationToken)
  nameWithType: BlackList<T>.IsAllowedAsync(T, CancellationToken)
  nameWithType.vb: BlackList(Of T).IsAllowedAsync(T, CancellationToken)
- uid: PeerTalk.BlackList`1.IsAllowedAsync*
  name: IsAllowedAsync
  href: api/PeerTalk.BlackList-1.html#PeerTalk_BlackList_1_IsAllowedAsync_
  commentId: Overload:PeerTalk.BlackList`1.IsAllowedAsync
  isSpec: "True"
  fullName: PeerTalk.BlackList<T>.IsAllowedAsync
  fullName.vb: PeerTalk.BlackList(Of T).IsAllowedAsync
  nameWithType: BlackList<T>.IsAllowedAsync
  nameWithType.vb: BlackList(Of T).IsAllowedAsync
- uid: PeerTalk.BlackList`1.IsNotAllowedAsync(`0,System.Threading.CancellationToken)
  name: IsNotAllowedAsync(T, CancellationToken)
  href: api/PeerTalk.BlackList-1.html#PeerTalk_BlackList_1_IsNotAllowedAsync__0_System_Threading_CancellationToken_
  commentId: M:PeerTalk.BlackList`1.IsNotAllowedAsync(`0,System.Threading.CancellationToken)
  fullName: PeerTalk.BlackList<T>.IsNotAllowedAsync(T, System.Threading.CancellationToken)
  fullName.vb: PeerTalk.BlackList(Of T).IsNotAllowedAsync(T, System.Threading.CancellationToken)
  nameWithType: BlackList<T>.IsNotAllowedAsync(T, CancellationToken)
  nameWithType.vb: BlackList(Of T).IsNotAllowedAsync(T, CancellationToken)
- uid: PeerTalk.BlackList`1.IsNotAllowedAsync*
  name: IsNotAllowedAsync
  href: api/PeerTalk.BlackList-1.html#PeerTalk_BlackList_1_IsNotAllowedAsync_
  commentId: Overload:PeerTalk.BlackList`1.IsNotAllowedAsync
  isSpec: "True"
  fullName: PeerTalk.BlackList<T>.IsNotAllowedAsync
  fullName.vb: PeerTalk.BlackList(Of T).IsNotAllowedAsync
  nameWithType: BlackList<T>.IsNotAllowedAsync
  nameWithType.vb: BlackList(Of T).IsNotAllowedAsync
- uid: PeerTalk.ConnectionManager
  name: ConnectionManager
  href: api/PeerTalk.ConnectionManager.html
  commentId: T:PeerTalk.ConnectionManager
  fullName: PeerTalk.ConnectionManager
  nameWithType: ConnectionManager
- uid: PeerTalk.ConnectionManager.Add(PeerTalk.PeerConnection)
  name: Add(PeerConnection)
  href: api/PeerTalk.ConnectionManager.html#PeerTalk_ConnectionManager_Add_PeerTalk_PeerConnection_
  commentId: M:PeerTalk.ConnectionManager.Add(PeerTalk.PeerConnection)
  fullName: PeerTalk.ConnectionManager.Add(PeerTalk.PeerConnection)
  nameWithType: ConnectionManager.Add(PeerConnection)
- uid: PeerTalk.ConnectionManager.Add*
  name: Add
  href: api/PeerTalk.ConnectionManager.html#PeerTalk_ConnectionManager_Add_
  commentId: Overload:PeerTalk.ConnectionManager.Add
  isSpec: "True"
  fullName: PeerTalk.ConnectionManager.Add
  nameWithType: ConnectionManager.Add
- uid: PeerTalk.ConnectionManager.Clear
  name: Clear()
  href: api/PeerTalk.ConnectionManager.html#PeerTalk_ConnectionManager_Clear
  commentId: M:PeerTalk.ConnectionManager.Clear
  fullName: PeerTalk.ConnectionManager.Clear()
  nameWithType: ConnectionManager.Clear()
- uid: PeerTalk.ConnectionManager.Clear*
  name: Clear
  href: api/PeerTalk.ConnectionManager.html#PeerTalk_ConnectionManager_Clear_
  commentId: Overload:PeerTalk.ConnectionManager.Clear
  isSpec: "True"
  fullName: PeerTalk.ConnectionManager.Clear
  nameWithType: ConnectionManager.Clear
- uid: PeerTalk.ConnectionManager.Connections
  name: Connections
  href: api/PeerTalk.ConnectionManager.html#PeerTalk_ConnectionManager_Connections
  commentId: P:PeerTalk.ConnectionManager.Connections
  fullName: PeerTalk.ConnectionManager.Connections
  nameWithType: ConnectionManager.Connections
- uid: PeerTalk.ConnectionManager.Connections*
  name: Connections
  href: api/PeerTalk.ConnectionManager.html#PeerTalk_ConnectionManager_Connections_
  commentId: Overload:PeerTalk.ConnectionManager.Connections
  isSpec: "True"
  fullName: PeerTalk.ConnectionManager.Connections
  nameWithType: ConnectionManager.Connections
- uid: PeerTalk.ConnectionManager.IsConnected(Ipfs.Peer)
  name: IsConnected(Peer)
  href: api/PeerTalk.ConnectionManager.html#PeerTalk_ConnectionManager_IsConnected_Ipfs_Peer_
  commentId: M:PeerTalk.ConnectionManager.IsConnected(Ipfs.Peer)
  fullName: PeerTalk.ConnectionManager.IsConnected(Ipfs.Peer)
  nameWithType: ConnectionManager.IsConnected(Peer)
- uid: PeerTalk.ConnectionManager.IsConnected*
  name: IsConnected
  href: api/PeerTalk.ConnectionManager.html#PeerTalk_ConnectionManager_IsConnected_
  commentId: Overload:PeerTalk.ConnectionManager.IsConnected
  isSpec: "True"
  fullName: PeerTalk.ConnectionManager.IsConnected
  nameWithType: ConnectionManager.IsConnected
- uid: PeerTalk.ConnectionManager.Remove(Ipfs.MultiHash)
  name: Remove(MultiHash)
  href: api/PeerTalk.ConnectionManager.html#PeerTalk_ConnectionManager_Remove_Ipfs_MultiHash_
  commentId: M:PeerTalk.ConnectionManager.Remove(Ipfs.MultiHash)
  fullName: PeerTalk.ConnectionManager.Remove(Ipfs.MultiHash)
  nameWithType: ConnectionManager.Remove(MultiHash)
- uid: PeerTalk.ConnectionManager.Remove(PeerTalk.PeerConnection)
  name: Remove(PeerConnection)
  href: api/PeerTalk.ConnectionManager.html#PeerTalk_ConnectionManager_Remove_PeerTalk_PeerConnection_
  commentId: M:PeerTalk.ConnectionManager.Remove(PeerTalk.PeerConnection)
  fullName: PeerTalk.ConnectionManager.Remove(PeerTalk.PeerConnection)
  nameWithType: ConnectionManager.Remove(PeerConnection)
- uid: PeerTalk.ConnectionManager.Remove*
  name: Remove
  href: api/PeerTalk.ConnectionManager.html#PeerTalk_ConnectionManager_Remove_
  commentId: Overload:PeerTalk.ConnectionManager.Remove
  isSpec: "True"
  fullName: PeerTalk.ConnectionManager.Remove
  nameWithType: ConnectionManager.Remove
- uid: PeerTalk.ConnectionManager.TryGet(Ipfs.Peer,PeerTalk.PeerConnection@)
  name: TryGet(Peer, out PeerConnection)
  href: api/PeerTalk.ConnectionManager.html#PeerTalk_ConnectionManager_TryGet_Ipfs_Peer_PeerTalk_PeerConnection__
  commentId: M:PeerTalk.ConnectionManager.TryGet(Ipfs.Peer,PeerTalk.PeerConnection@)
  name.vb: TryGet(Peer, ByRef PeerConnection)
  fullName: PeerTalk.ConnectionManager.TryGet(Ipfs.Peer, out PeerTalk.PeerConnection)
  fullName.vb: PeerTalk.ConnectionManager.TryGet(Ipfs.Peer, ByRef PeerTalk.PeerConnection)
  nameWithType: ConnectionManager.TryGet(Peer, out PeerConnection)
  nameWithType.vb: ConnectionManager.TryGet(Peer, ByRef PeerConnection)
- uid: PeerTalk.ConnectionManager.TryGet*
  name: TryGet
  href: api/PeerTalk.ConnectionManager.html#PeerTalk_ConnectionManager_TryGet_
  commentId: Overload:PeerTalk.ConnectionManager.TryGet
  isSpec: "True"
  fullName: PeerTalk.ConnectionManager.TryGet
  nameWithType: ConnectionManager.TryGet
- uid: PeerTalk.Cryptography
  name: PeerTalk.Cryptography
  href: api/PeerTalk.Cryptography.html
  commentId: N:PeerTalk.Cryptography
  fullName: PeerTalk.Cryptography
  nameWithType: PeerTalk.Cryptography
- uid: PeerTalk.Cryptography.CtrStreamCipher
  name: CtrStreamCipher
  href: api/PeerTalk.Cryptography.CtrStreamCipher.html
  commentId: T:PeerTalk.Cryptography.CtrStreamCipher
  fullName: PeerTalk.Cryptography.CtrStreamCipher
  nameWithType: CtrStreamCipher
- uid: PeerTalk.Cryptography.CtrStreamCipher.#ctor(Org.BouncyCastle.Crypto.IBlockCipher)
  name: CtrStreamCipher(IBlockCipher)
  href: api/PeerTalk.Cryptography.CtrStreamCipher.html#PeerTalk_Cryptography_CtrStreamCipher__ctor_Org_BouncyCastle_Crypto_IBlockCipher_
  commentId: M:PeerTalk.Cryptography.CtrStreamCipher.#ctor(Org.BouncyCastle.Crypto.IBlockCipher)
  fullName: PeerTalk.Cryptography.CtrStreamCipher.CtrStreamCipher(Org.BouncyCastle.Crypto.IBlockCipher)
  nameWithType: CtrStreamCipher.CtrStreamCipher(IBlockCipher)
- uid: PeerTalk.Cryptography.CtrStreamCipher.#ctor*
  name: CtrStreamCipher
  href: api/PeerTalk.Cryptography.CtrStreamCipher.html#PeerTalk_Cryptography_CtrStreamCipher__ctor_
  commentId: Overload:PeerTalk.Cryptography.CtrStreamCipher.#ctor
  isSpec: "True"
  fullName: PeerTalk.Cryptography.CtrStreamCipher.CtrStreamCipher
  nameWithType: CtrStreamCipher.CtrStreamCipher
- uid: PeerTalk.Cryptography.CtrStreamCipher.AlgorithmName
  name: AlgorithmName
  href: api/PeerTalk.Cryptography.CtrStreamCipher.html#PeerTalk_Cryptography_CtrStreamCipher_AlgorithmName
  commentId: P:PeerTalk.Cryptography.CtrStreamCipher.AlgorithmName
  fullName: PeerTalk.Cryptography.CtrStreamCipher.AlgorithmName
  nameWithType: CtrStreamCipher.AlgorithmName
- uid: PeerTalk.Cryptography.CtrStreamCipher.AlgorithmName*
  name: AlgorithmName
  href: api/PeerTalk.Cryptography.CtrStreamCipher.html#PeerTalk_Cryptography_CtrStreamCipher_AlgorithmName_
  commentId: Overload:PeerTalk.Cryptography.CtrStreamCipher.AlgorithmName
  isSpec: "True"
  fullName: PeerTalk.Cryptography.CtrStreamCipher.AlgorithmName
  nameWithType: CtrStreamCipher.AlgorithmName
- uid: PeerTalk.Cryptography.CtrStreamCipher.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)
  name: Init(Boolean, ICipherParameters)
  href: api/PeerTalk.Cryptography.CtrStreamCipher.html#PeerTalk_Cryptography_CtrStreamCipher_Init_System_Boolean_Org_BouncyCastle_Crypto_ICipherParameters_
  commentId: M:PeerTalk.Cryptography.CtrStreamCipher.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)
  fullName: PeerTalk.Cryptography.CtrStreamCipher.Init(System.Boolean, Org.BouncyCastle.Crypto.ICipherParameters)
  nameWithType: CtrStreamCipher.Init(Boolean, ICipherParameters)
- uid: PeerTalk.Cryptography.CtrStreamCipher.Init*
  name: Init
  href: api/PeerTalk.Cryptography.CtrStreamCipher.html#PeerTalk_Cryptography_CtrStreamCipher_Init_
  commentId: Overload:PeerTalk.Cryptography.CtrStreamCipher.Init
  isSpec: "True"
  fullName: PeerTalk.Cryptography.CtrStreamCipher.Init
  nameWithType: CtrStreamCipher.Init
- uid: PeerTalk.Cryptography.CtrStreamCipher.ProcessBytes(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)
  name: ProcessBytes(Byte[], Int32, Int32, Byte[], Int32)
  href: api/PeerTalk.Cryptography.CtrStreamCipher.html#PeerTalk_Cryptography_CtrStreamCipher_ProcessBytes_System_Byte___System_Int32_System_Int32_System_Byte___System_Int32_
  commentId: M:PeerTalk.Cryptography.CtrStreamCipher.ProcessBytes(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)
  name.vb: ProcessBytes(Byte(), Int32, Int32, Byte(), Int32)
  fullName: PeerTalk.Cryptography.CtrStreamCipher.ProcessBytes(System.Byte[], System.Int32, System.Int32, System.Byte[], System.Int32)
  fullName.vb: PeerTalk.Cryptography.CtrStreamCipher.ProcessBytes(System.Byte(), System.Int32, System.Int32, System.Byte(), System.Int32)
  nameWithType: CtrStreamCipher.ProcessBytes(Byte[], Int32, Int32, Byte[], Int32)
  nameWithType.vb: CtrStreamCipher.ProcessBytes(Byte(), Int32, Int32, Byte(), Int32)
- uid: PeerTalk.Cryptography.CtrStreamCipher.ProcessBytes*
  name: ProcessBytes
  href: api/PeerTalk.Cryptography.CtrStreamCipher.html#PeerTalk_Cryptography_CtrStreamCipher_ProcessBytes_
  commentId: Overload:PeerTalk.Cryptography.CtrStreamCipher.ProcessBytes
  isSpec: "True"
  fullName: PeerTalk.Cryptography.CtrStreamCipher.ProcessBytes
  nameWithType: CtrStreamCipher.ProcessBytes
- uid: PeerTalk.Cryptography.CtrStreamCipher.Reset
  name: Reset()
  href: api/PeerTalk.Cryptography.CtrStreamCipher.html#PeerTalk_Cryptography_CtrStreamCipher_Reset
  commentId: M:PeerTalk.Cryptography.CtrStreamCipher.Reset
  fullName: PeerTalk.Cryptography.CtrStreamCipher.Reset()
  nameWithType: CtrStreamCipher.Reset()
- uid: PeerTalk.Cryptography.CtrStreamCipher.Reset*
  name: Reset
  href: api/PeerTalk.Cryptography.CtrStreamCipher.html#PeerTalk_Cryptography_CtrStreamCipher_Reset_
  commentId: Overload:PeerTalk.Cryptography.CtrStreamCipher.Reset
  isSpec: "True"
  fullName: PeerTalk.Cryptography.CtrStreamCipher.Reset
  nameWithType: CtrStreamCipher.Reset
- uid: PeerTalk.Cryptography.CtrStreamCipher.ReturnByte(System.Byte)
  name: ReturnByte(Byte)
  href: api/PeerTalk.Cryptography.CtrStreamCipher.html#PeerTalk_Cryptography_CtrStreamCipher_ReturnByte_System_Byte_
  commentId: M:PeerTalk.Cryptography.CtrStreamCipher.ReturnByte(System.Byte)
  fullName: PeerTalk.Cryptography.CtrStreamCipher.ReturnByte(System.Byte)
  nameWithType: CtrStreamCipher.ReturnByte(Byte)
- uid: PeerTalk.Cryptography.CtrStreamCipher.ReturnByte*
  name: ReturnByte
  href: api/PeerTalk.Cryptography.CtrStreamCipher.html#PeerTalk_Cryptography_CtrStreamCipher_ReturnByte_
  commentId: Overload:PeerTalk.Cryptography.CtrStreamCipher.ReturnByte
  isSpec: "True"
  fullName: PeerTalk.Cryptography.CtrStreamCipher.ReturnByte
  nameWithType: CtrStreamCipher.ReturnByte
- uid: PeerTalk.Cryptography.EphermalKey
  name: EphermalKey
  href: api/PeerTalk.Cryptography.EphermalKey.html
  commentId: T:PeerTalk.Cryptography.EphermalKey
  fullName: PeerTalk.Cryptography.EphermalKey
  nameWithType: EphermalKey
- uid: PeerTalk.Cryptography.EphermalKey.CreatePublicKeyFromIpfs(System.String,System.Byte[])
  name: CreatePublicKeyFromIpfs(String, Byte[])
  href: api/PeerTalk.Cryptography.EphermalKey.html#PeerTalk_Cryptography_EphermalKey_CreatePublicKeyFromIpfs_System_String_System_Byte___
  commentId: M:PeerTalk.Cryptography.EphermalKey.CreatePublicKeyFromIpfs(System.String,System.Byte[])
  name.vb: CreatePublicKeyFromIpfs(String, Byte())
  fullName: PeerTalk.Cryptography.EphermalKey.CreatePublicKeyFromIpfs(System.String, System.Byte[])
  fullName.vb: PeerTalk.Cryptography.EphermalKey.CreatePublicKeyFromIpfs(System.String, System.Byte())
  nameWithType: EphermalKey.CreatePublicKeyFromIpfs(String, Byte[])
  nameWithType.vb: EphermalKey.CreatePublicKeyFromIpfs(String, Byte())
- uid: PeerTalk.Cryptography.EphermalKey.CreatePublicKeyFromIpfs*
  name: CreatePublicKeyFromIpfs
  href: api/PeerTalk.Cryptography.EphermalKey.html#PeerTalk_Cryptography_EphermalKey_CreatePublicKeyFromIpfs_
  commentId: Overload:PeerTalk.Cryptography.EphermalKey.CreatePublicKeyFromIpfs
  isSpec: "True"
  fullName: PeerTalk.Cryptography.EphermalKey.CreatePublicKeyFromIpfs
  nameWithType: EphermalKey.CreatePublicKeyFromIpfs
- uid: PeerTalk.Cryptography.EphermalKey.Generate(System.String)
  name: Generate(String)
  href: api/PeerTalk.Cryptography.EphermalKey.html#PeerTalk_Cryptography_EphermalKey_Generate_System_String_
  commentId: M:PeerTalk.Cryptography.EphermalKey.Generate(System.String)
  fullName: PeerTalk.Cryptography.EphermalKey.Generate(System.String)
  nameWithType: EphermalKey.Generate(String)
- uid: PeerTalk.Cryptography.EphermalKey.Generate*
  name: Generate
  href: api/PeerTalk.Cryptography.EphermalKey.html#PeerTalk_Cryptography_EphermalKey_Generate_
  commentId: Overload:PeerTalk.Cryptography.EphermalKey.Generate
  isSpec: "True"
  fullName: PeerTalk.Cryptography.EphermalKey.Generate
  nameWithType: EphermalKey.Generate
- uid: PeerTalk.Cryptography.EphermalKey.GenerateSharedSecret(PeerTalk.Cryptography.EphermalKey)
  name: GenerateSharedSecret(EphermalKey)
  href: api/PeerTalk.Cryptography.EphermalKey.html#PeerTalk_Cryptography_EphermalKey_GenerateSharedSecret_PeerTalk_Cryptography_EphermalKey_
  commentId: M:PeerTalk.Cryptography.EphermalKey.GenerateSharedSecret(PeerTalk.Cryptography.EphermalKey)
  fullName: PeerTalk.Cryptography.EphermalKey.GenerateSharedSecret(PeerTalk.Cryptography.EphermalKey)
  nameWithType: EphermalKey.GenerateSharedSecret(EphermalKey)
- uid: PeerTalk.Cryptography.EphermalKey.GenerateSharedSecret*
  name: GenerateSharedSecret
  href: api/PeerTalk.Cryptography.EphermalKey.html#PeerTalk_Cryptography_EphermalKey_GenerateSharedSecret_
  commentId: Overload:PeerTalk.Cryptography.EphermalKey.GenerateSharedSecret
  isSpec: "True"
  fullName: PeerTalk.Cryptography.EphermalKey.GenerateSharedSecret
  nameWithType: EphermalKey.GenerateSharedSecret
- uid: PeerTalk.Cryptography.EphermalKey.PublicKeyBytes
  name: PublicKeyBytes()
  href: api/PeerTalk.Cryptography.EphermalKey.html#PeerTalk_Cryptography_EphermalKey_PublicKeyBytes
  commentId: M:PeerTalk.Cryptography.EphermalKey.PublicKeyBytes
  fullName: PeerTalk.Cryptography.EphermalKey.PublicKeyBytes()
  nameWithType: EphermalKey.PublicKeyBytes()
- uid: PeerTalk.Cryptography.EphermalKey.PublicKeyBytes*
  name: PublicKeyBytes
  href: api/PeerTalk.Cryptography.EphermalKey.html#PeerTalk_Cryptography_EphermalKey_PublicKeyBytes_
  commentId: Overload:PeerTalk.Cryptography.EphermalKey.PublicKeyBytes
  isSpec: "True"
  fullName: PeerTalk.Cryptography.EphermalKey.PublicKeyBytes
  nameWithType: EphermalKey.PublicKeyBytes
- uid: PeerTalk.Cryptography.Key
  name: Key
  href: api/PeerTalk.Cryptography.Key.html
  commentId: T:PeerTalk.Cryptography.Key
  fullName: PeerTalk.Cryptography.Key
  nameWithType: Key
- uid: PeerTalk.Cryptography.Key.CreatePrivateKey(Org.BouncyCastle.Crypto.AsymmetricKeyParameter)
  name: CreatePrivateKey(AsymmetricKeyParameter)
  href: api/PeerTalk.Cryptography.Key.html#PeerTalk_Cryptography_Key_CreatePrivateKey_Org_BouncyCastle_Crypto_AsymmetricKeyParameter_
  commentId: M:PeerTalk.Cryptography.Key.CreatePrivateKey(Org.BouncyCastle.Crypto.AsymmetricKeyParameter)
  fullName: PeerTalk.Cryptography.Key.CreatePrivateKey(Org.BouncyCastle.Crypto.AsymmetricKeyParameter)
  nameWithType: Key.CreatePrivateKey(AsymmetricKeyParameter)
- uid: PeerTalk.Cryptography.Key.CreatePrivateKey*
  name: CreatePrivateKey
  href: api/PeerTalk.Cryptography.Key.html#PeerTalk_Cryptography_Key_CreatePrivateKey_
  commentId: Overload:PeerTalk.Cryptography.Key.CreatePrivateKey
  isSpec: "True"
  fullName: PeerTalk.Cryptography.Key.CreatePrivateKey
  nameWithType: Key.CreatePrivateKey
- uid: PeerTalk.Cryptography.Key.CreatePublicKeyFromIpfs(System.Byte[])
  name: CreatePublicKeyFromIpfs(Byte[])
  href: api/PeerTalk.Cryptography.Key.html#PeerTalk_Cryptography_Key_CreatePublicKeyFromIpfs_System_Byte___
  commentId: M:PeerTalk.Cryptography.Key.CreatePublicKeyFromIpfs(System.Byte[])
  name.vb: CreatePublicKeyFromIpfs(Byte())
  fullName: PeerTalk.Cryptography.Key.CreatePublicKeyFromIpfs(System.Byte[])
  fullName.vb: PeerTalk.Cryptography.Key.CreatePublicKeyFromIpfs(System.Byte())
  nameWithType: Key.CreatePublicKeyFromIpfs(Byte[])
  nameWithType.vb: Key.CreatePublicKeyFromIpfs(Byte())
- uid: PeerTalk.Cryptography.Key.CreatePublicKeyFromIpfs*
  name: CreatePublicKeyFromIpfs
  href: api/PeerTalk.Cryptography.Key.html#PeerTalk_Cryptography_Key_CreatePublicKeyFromIpfs_
  commentId: Overload:PeerTalk.Cryptography.Key.CreatePublicKeyFromIpfs
  isSpec: "True"
  fullName: PeerTalk.Cryptography.Key.CreatePublicKeyFromIpfs
  nameWithType: Key.CreatePublicKeyFromIpfs
- uid: PeerTalk.Cryptography.Key.Sign(System.Byte[])
  name: Sign(Byte[])
  href: api/PeerTalk.Cryptography.Key.html#PeerTalk_Cryptography_Key_Sign_System_Byte___
  commentId: M:PeerTalk.Cryptography.Key.Sign(System.Byte[])
  name.vb: Sign(Byte())
  fullName: PeerTalk.Cryptography.Key.Sign(System.Byte[])
  fullName.vb: PeerTalk.Cryptography.Key.Sign(System.Byte())
  nameWithType: Key.Sign(Byte[])
  nameWithType.vb: Key.Sign(Byte())
- uid: PeerTalk.Cryptography.Key.Sign*
  name: Sign
  href: api/PeerTalk.Cryptography.Key.html#PeerTalk_Cryptography_Key_Sign_
  commentId: Overload:PeerTalk.Cryptography.Key.Sign
  isSpec: "True"
  fullName: PeerTalk.Cryptography.Key.Sign
  nameWithType: Key.Sign
- uid: PeerTalk.Cryptography.Key.Verify(System.Byte[],System.Byte[])
  name: Verify(Byte[], Byte[])
  href: api/PeerTalk.Cryptography.Key.html#PeerTalk_Cryptography_Key_Verify_System_Byte___System_Byte___
  commentId: M:PeerTalk.Cryptography.Key.Verify(System.Byte[],System.Byte[])
  name.vb: Verify(Byte(), Byte())
  fullName: PeerTalk.Cryptography.Key.Verify(System.Byte[], System.Byte[])
  fullName.vb: PeerTalk.Cryptography.Key.Verify(System.Byte(), System.Byte())
  nameWithType: Key.Verify(Byte[], Byte[])
  nameWithType.vb: Key.Verify(Byte(), Byte())
- uid: PeerTalk.Cryptography.Key.Verify*
  name: Verify
  href: api/PeerTalk.Cryptography.Key.html#PeerTalk_Cryptography_Key_Verify_
  commentId: Overload:PeerTalk.Cryptography.Key.Verify
  isSpec: "True"
  fullName: PeerTalk.Cryptography.Key.Verify
  nameWithType: Key.Verify
- uid: PeerTalk.Cryptography.PreSharedKey
  name: PreSharedKey
  href: api/PeerTalk.Cryptography.PreSharedKey.html
  commentId: T:PeerTalk.Cryptography.PreSharedKey
  fullName: PeerTalk.Cryptography.PreSharedKey
  nameWithType: PreSharedKey
- uid: PeerTalk.Cryptography.PreSharedKey.Export(System.IO.TextWriter,System.String)
  name: Export(TextWriter, String)
  href: api/PeerTalk.Cryptography.PreSharedKey.html#PeerTalk_Cryptography_PreSharedKey_Export_System_IO_TextWriter_System_String_
  commentId: M:PeerTalk.Cryptography.PreSharedKey.Export(System.IO.TextWriter,System.String)
  fullName: PeerTalk.Cryptography.PreSharedKey.Export(System.IO.TextWriter, System.String)
  nameWithType: PreSharedKey.Export(TextWriter, String)
- uid: PeerTalk.Cryptography.PreSharedKey.Export*
  name: Export
  href: api/PeerTalk.Cryptography.PreSharedKey.html#PeerTalk_Cryptography_PreSharedKey_Export_
  commentId: Overload:PeerTalk.Cryptography.PreSharedKey.Export
  isSpec: "True"
  fullName: PeerTalk.Cryptography.PreSharedKey.Export
  nameWithType: PreSharedKey.Export
- uid: PeerTalk.Cryptography.PreSharedKey.Generate(System.Int32)
  name: Generate(Int32)
  href: api/PeerTalk.Cryptography.PreSharedKey.html#PeerTalk_Cryptography_PreSharedKey_Generate_System_Int32_
  commentId: M:PeerTalk.Cryptography.PreSharedKey.Generate(System.Int32)
  fullName: PeerTalk.Cryptography.PreSharedKey.Generate(System.Int32)
  nameWithType: PreSharedKey.Generate(Int32)
- uid: PeerTalk.Cryptography.PreSharedKey.Generate*
  name: Generate
  href: api/PeerTalk.Cryptography.PreSharedKey.html#PeerTalk_Cryptography_PreSharedKey_Generate_
  commentId: Overload:PeerTalk.Cryptography.PreSharedKey.Generate
  isSpec: "True"
  fullName: PeerTalk.Cryptography.PreSharedKey.Generate
  nameWithType: PreSharedKey.Generate
- uid: PeerTalk.Cryptography.PreSharedKey.Import(System.IO.TextReader)
  name: Import(TextReader)
  href: api/PeerTalk.Cryptography.PreSharedKey.html#PeerTalk_Cryptography_PreSharedKey_Import_System_IO_TextReader_
  commentId: M:PeerTalk.Cryptography.PreSharedKey.Import(System.IO.TextReader)
  fullName: PeerTalk.Cryptography.PreSharedKey.Import(System.IO.TextReader)
  nameWithType: PreSharedKey.Import(TextReader)
- uid: PeerTalk.Cryptography.PreSharedKey.Import*
  name: Import
  href: api/PeerTalk.Cryptography.PreSharedKey.html#PeerTalk_Cryptography_PreSharedKey_Import_
  commentId: Overload:PeerTalk.Cryptography.PreSharedKey.Import
  isSpec: "True"
  fullName: PeerTalk.Cryptography.PreSharedKey.Import
  nameWithType: PreSharedKey.Import
- uid: PeerTalk.Cryptography.PreSharedKey.Length
  name: Length
  href: api/PeerTalk.Cryptography.PreSharedKey.html#PeerTalk_Cryptography_PreSharedKey_Length
  commentId: P:PeerTalk.Cryptography.PreSharedKey.Length
  fullName: PeerTalk.Cryptography.PreSharedKey.Length
  nameWithType: PreSharedKey.Length
- uid: PeerTalk.Cryptography.PreSharedKey.Length*
  name: Length
  href: api/PeerTalk.Cryptography.PreSharedKey.html#PeerTalk_Cryptography_PreSharedKey_Length_
  commentId: Overload:PeerTalk.Cryptography.PreSharedKey.Length
  isSpec: "True"
  fullName: PeerTalk.Cryptography.PreSharedKey.Length
  nameWithType: PreSharedKey.Length
- uid: PeerTalk.Cryptography.PreSharedKey.Value
  name: Value
  href: api/PeerTalk.Cryptography.PreSharedKey.html#PeerTalk_Cryptography_PreSharedKey_Value
  commentId: P:PeerTalk.Cryptography.PreSharedKey.Value
  fullName: PeerTalk.Cryptography.PreSharedKey.Value
  nameWithType: PreSharedKey.Value
- uid: PeerTalk.Cryptography.PreSharedKey.Value*
  name: Value
  href: api/PeerTalk.Cryptography.PreSharedKey.html#PeerTalk_Cryptography_PreSharedKey_Value_
  commentId: Overload:PeerTalk.Cryptography.PreSharedKey.Value
  isSpec: "True"
  fullName: PeerTalk.Cryptography.PreSharedKey.Value
  nameWithType: PreSharedKey.Value
- uid: PeerTalk.Cryptography.StretchedKey
  name: StretchedKey
  href: api/PeerTalk.Cryptography.StretchedKey.html
  commentId: T:PeerTalk.Cryptography.StretchedKey
  fullName: PeerTalk.Cryptography.StretchedKey
  nameWithType: StretchedKey
- uid: PeerTalk.Cryptography.StretchedKey.CipherKey
  name: CipherKey
  href: api/PeerTalk.Cryptography.StretchedKey.html#PeerTalk_Cryptography_StretchedKey_CipherKey
  commentId: P:PeerTalk.Cryptography.StretchedKey.CipherKey
  fullName: PeerTalk.Cryptography.StretchedKey.CipherKey
  nameWithType: StretchedKey.CipherKey
- uid: PeerTalk.Cryptography.StretchedKey.CipherKey*
  name: CipherKey
  href: api/PeerTalk.Cryptography.StretchedKey.html#PeerTalk_Cryptography_StretchedKey_CipherKey_
  commentId: Overload:PeerTalk.Cryptography.StretchedKey.CipherKey
  isSpec: "True"
  fullName: PeerTalk.Cryptography.StretchedKey.CipherKey
  nameWithType: StretchedKey.CipherKey
- uid: PeerTalk.Cryptography.StretchedKey.Generate(System.String,System.String,System.Byte[],PeerTalk.Cryptography.StretchedKey@,PeerTalk.Cryptography.StretchedKey@)
  name: Generate(String, String, Byte[], out StretchedKey, out StretchedKey)
  href: api/PeerTalk.Cryptography.StretchedKey.html#PeerTalk_Cryptography_StretchedKey_Generate_System_String_System_String_System_Byte___PeerTalk_Cryptography_StretchedKey__PeerTalk_Cryptography_StretchedKey__
  commentId: M:PeerTalk.Cryptography.StretchedKey.Generate(System.String,System.String,System.Byte[],PeerTalk.Cryptography.StretchedKey@,PeerTalk.Cryptography.StretchedKey@)
  name.vb: Generate(String, String, Byte(), ByRef StretchedKey, ByRef StretchedKey)
  fullName: PeerTalk.Cryptography.StretchedKey.Generate(System.String, System.String, System.Byte[], out PeerTalk.Cryptography.StretchedKey, out PeerTalk.Cryptography.StretchedKey)
  fullName.vb: PeerTalk.Cryptography.StretchedKey.Generate(System.String, System.String, System.Byte(), ByRef PeerTalk.Cryptography.StretchedKey, ByRef PeerTalk.Cryptography.StretchedKey)
  nameWithType: StretchedKey.Generate(String, String, Byte[], out StretchedKey, out StretchedKey)
  nameWithType.vb: StretchedKey.Generate(String, String, Byte(), ByRef StretchedKey, ByRef StretchedKey)
- uid: PeerTalk.Cryptography.StretchedKey.Generate*
  name: Generate
  href: api/PeerTalk.Cryptography.StretchedKey.html#PeerTalk_Cryptography_StretchedKey_Generate_
  commentId: Overload:PeerTalk.Cryptography.StretchedKey.Generate
  isSpec: "True"
  fullName: PeerTalk.Cryptography.StretchedKey.Generate
  nameWithType: StretchedKey.Generate
- uid: PeerTalk.Cryptography.StretchedKey.IV
  name: IV
  href: api/PeerTalk.Cryptography.StretchedKey.html#PeerTalk_Cryptography_StretchedKey_IV
  commentId: P:PeerTalk.Cryptography.StretchedKey.IV
  fullName: PeerTalk.Cryptography.StretchedKey.IV
  nameWithType: StretchedKey.IV
- uid: PeerTalk.Cryptography.StretchedKey.IV*
  name: IV
  href: api/PeerTalk.Cryptography.StretchedKey.html#PeerTalk_Cryptography_StretchedKey_IV_
  commentId: Overload:PeerTalk.Cryptography.StretchedKey.IV
  isSpec: "True"
  fullName: PeerTalk.Cryptography.StretchedKey.IV
  nameWithType: StretchedKey.IV
- uid: PeerTalk.Cryptography.StretchedKey.MacKey
  name: MacKey
  href: api/PeerTalk.Cryptography.StretchedKey.html#PeerTalk_Cryptography_StretchedKey_MacKey
  commentId: P:PeerTalk.Cryptography.StretchedKey.MacKey
  fullName: PeerTalk.Cryptography.StretchedKey.MacKey
  nameWithType: StretchedKey.MacKey
- uid: PeerTalk.Cryptography.StretchedKey.MacKey*
  name: MacKey
  href: api/PeerTalk.Cryptography.StretchedKey.html#PeerTalk_Cryptography_StretchedKey_MacKey_
  commentId: Overload:PeerTalk.Cryptography.StretchedKey.MacKey
  isSpec: "True"
  fullName: PeerTalk.Cryptography.StretchedKey.MacKey
  nameWithType: StretchedKey.MacKey
- uid: PeerTalk.Discovery
  name: PeerTalk.Discovery
  href: api/PeerTalk.Discovery.html
  commentId: N:PeerTalk.Discovery
  fullName: PeerTalk.Discovery
  nameWithType: PeerTalk.Discovery
- uid: PeerTalk.Discovery.Bootstrap
  name: Bootstrap
  href: api/PeerTalk.Discovery.Bootstrap.html
  commentId: T:PeerTalk.Discovery.Bootstrap
  fullName: PeerTalk.Discovery.Bootstrap
  nameWithType: Bootstrap
- uid: PeerTalk.Discovery.Bootstrap.Addresses
  name: Addresses
  href: api/PeerTalk.Discovery.Bootstrap.html#PeerTalk_Discovery_Bootstrap_Addresses
  commentId: P:PeerTalk.Discovery.Bootstrap.Addresses
  fullName: PeerTalk.Discovery.Bootstrap.Addresses
  nameWithType: Bootstrap.Addresses
- uid: PeerTalk.Discovery.Bootstrap.Addresses*
  name: Addresses
  href: api/PeerTalk.Discovery.Bootstrap.html#PeerTalk_Discovery_Bootstrap_Addresses_
  commentId: Overload:PeerTalk.Discovery.Bootstrap.Addresses
  isSpec: "True"
  fullName: PeerTalk.Discovery.Bootstrap.Addresses
  nameWithType: Bootstrap.Addresses
- uid: PeerTalk.Discovery.Bootstrap.PeerDiscovered
  name: PeerDiscovered
  href: api/PeerTalk.Discovery.Bootstrap.html#PeerTalk_Discovery_Bootstrap_PeerDiscovered
  commentId: E:PeerTalk.Discovery.Bootstrap.PeerDiscovered
  fullName: PeerTalk.Discovery.Bootstrap.PeerDiscovered
  nameWithType: Bootstrap.PeerDiscovered
- uid: PeerTalk.Discovery.Bootstrap.StartAsync
  name: StartAsync()
  href: api/PeerTalk.Discovery.Bootstrap.html#PeerTalk_Discovery_Bootstrap_StartAsync
  commentId: M:PeerTalk.Discovery.Bootstrap.StartAsync
  fullName: PeerTalk.Discovery.Bootstrap.StartAsync()
  nameWithType: Bootstrap.StartAsync()
- uid: PeerTalk.Discovery.Bootstrap.StartAsync*
  name: StartAsync
  href: api/PeerTalk.Discovery.Bootstrap.html#PeerTalk_Discovery_Bootstrap_StartAsync_
  commentId: Overload:PeerTalk.Discovery.Bootstrap.StartAsync
  isSpec: "True"
  fullName: PeerTalk.Discovery.Bootstrap.StartAsync
  nameWithType: Bootstrap.StartAsync
- uid: PeerTalk.Discovery.Bootstrap.StopAsync
  name: StopAsync()
  href: api/PeerTalk.Discovery.Bootstrap.html#PeerTalk_Discovery_Bootstrap_StopAsync
  commentId: M:PeerTalk.Discovery.Bootstrap.StopAsync
  fullName: PeerTalk.Discovery.Bootstrap.StopAsync()
  nameWithType: Bootstrap.StopAsync()
- uid: PeerTalk.Discovery.Bootstrap.StopAsync*
  name: StopAsync
  href: api/PeerTalk.Discovery.Bootstrap.html#PeerTalk_Discovery_Bootstrap_StopAsync_
  commentId: Overload:PeerTalk.Discovery.Bootstrap.StopAsync
  isSpec: "True"
  fullName: PeerTalk.Discovery.Bootstrap.StopAsync
  nameWithType: Bootstrap.StopAsync
- uid: PeerTalk.Discovery.IPeerDiscovery
  name: IPeerDiscovery
  href: api/PeerTalk.Discovery.IPeerDiscovery.html
  commentId: T:PeerTalk.Discovery.IPeerDiscovery
  fullName: PeerTalk.Discovery.IPeerDiscovery
  nameWithType: IPeerDiscovery
- uid: PeerTalk.Discovery.IPeerDiscovery.PeerDiscovered
  name: PeerDiscovered
  href: api/PeerTalk.Discovery.IPeerDiscovery.html#PeerTalk_Discovery_IPeerDiscovery_PeerDiscovered
  commentId: E:PeerTalk.Discovery.IPeerDiscovery.PeerDiscovered
  fullName: PeerTalk.Discovery.IPeerDiscovery.PeerDiscovered
  nameWithType: IPeerDiscovery.PeerDiscovered
- uid: PeerTalk.Discovery.Mdns
  name: Mdns
  href: api/PeerTalk.Discovery.Mdns.html
  commentId: T:PeerTalk.Discovery.Mdns
  fullName: PeerTalk.Discovery.Mdns
  nameWithType: Mdns
- uid: PeerTalk.Discovery.Mdns.Broadcast
  name: Broadcast
  href: api/PeerTalk.Discovery.Mdns.html#PeerTalk_Discovery_Mdns_Broadcast
  commentId: P:PeerTalk.Discovery.Mdns.Broadcast
  fullName: PeerTalk.Discovery.Mdns.Broadcast
  nameWithType: Mdns.Broadcast
- uid: PeerTalk.Discovery.Mdns.Broadcast*
  name: Broadcast
  href: api/PeerTalk.Discovery.Mdns.html#PeerTalk_Discovery_Mdns_Broadcast_
  commentId: Overload:PeerTalk.Discovery.Mdns.Broadcast
  isSpec: "True"
  fullName: PeerTalk.Discovery.Mdns.Broadcast
  nameWithType: Mdns.Broadcast
- uid: PeerTalk.Discovery.Mdns.BuildProfile
  name: BuildProfile()
  href: api/PeerTalk.Discovery.Mdns.html#PeerTalk_Discovery_Mdns_BuildProfile
  commentId: M:PeerTalk.Discovery.Mdns.BuildProfile
  fullName: PeerTalk.Discovery.Mdns.BuildProfile()
  nameWithType: Mdns.BuildProfile()
- uid: PeerTalk.Discovery.Mdns.BuildProfile*
  name: BuildProfile
  href: api/PeerTalk.Discovery.Mdns.html#PeerTalk_Discovery_Mdns_BuildProfile_
  commentId: Overload:PeerTalk.Discovery.Mdns.BuildProfile
  isSpec: "True"
  fullName: PeerTalk.Discovery.Mdns.BuildProfile
  nameWithType: Mdns.BuildProfile
- uid: PeerTalk.Discovery.Mdns.GetAddresses(Makaretu.Dns.Message)
  name: GetAddresses(Message)
  href: api/PeerTalk.Discovery.Mdns.html#PeerTalk_Discovery_Mdns_GetAddresses_Makaretu_Dns_Message_
  commentId: M:PeerTalk.Discovery.Mdns.GetAddresses(Makaretu.Dns.Message)
  fullName: PeerTalk.Discovery.Mdns.GetAddresses(Makaretu.Dns.Message)
  nameWithType: Mdns.GetAddresses(Message)
- uid: PeerTalk.Discovery.Mdns.GetAddresses*
  name: GetAddresses
  href: api/PeerTalk.Discovery.Mdns.html#PeerTalk_Discovery_Mdns_GetAddresses_
  commentId: Overload:PeerTalk.Discovery.Mdns.GetAddresses
  isSpec: "True"
  fullName: PeerTalk.Discovery.Mdns.GetAddresses
  nameWithType: Mdns.GetAddresses
- uid: PeerTalk.Discovery.Mdns.LocalPeer
  name: LocalPeer
  href: api/PeerTalk.Discovery.Mdns.html#PeerTalk_Discovery_Mdns_LocalPeer
  commentId: P:PeerTalk.Discovery.Mdns.LocalPeer
  fullName: PeerTalk.Discovery.Mdns.LocalPeer
  nameWithType: Mdns.LocalPeer
- uid: PeerTalk.Discovery.Mdns.LocalPeer*
  name: LocalPeer
  href: api/PeerTalk.Discovery.Mdns.html#PeerTalk_Discovery_Mdns_LocalPeer_
  commentId: Overload:PeerTalk.Discovery.Mdns.LocalPeer
  isSpec: "True"
  fullName: PeerTalk.Discovery.Mdns.LocalPeer
  nameWithType: Mdns.LocalPeer
- uid: PeerTalk.Discovery.Mdns.MulticastService
  name: MulticastService
  href: api/PeerTalk.Discovery.Mdns.html#PeerTalk_Discovery_Mdns_MulticastService
  commentId: P:PeerTalk.Discovery.Mdns.MulticastService
  fullName: PeerTalk.Discovery.Mdns.MulticastService
  nameWithType: Mdns.MulticastService
- uid: PeerTalk.Discovery.Mdns.MulticastService*
  name: MulticastService
  href: api/PeerTalk.Discovery.Mdns.html#PeerTalk_Discovery_Mdns_MulticastService_
  commentId: Overload:PeerTalk.Discovery.Mdns.MulticastService
  isSpec: "True"
  fullName: PeerTalk.Discovery.Mdns.MulticastService
  nameWithType: Mdns.MulticastService
- uid: PeerTalk.Discovery.Mdns.OnServiceDiscovery(Makaretu.Dns.ServiceDiscovery)
  name: OnServiceDiscovery(ServiceDiscovery)
  href: api/PeerTalk.Discovery.Mdns.html#PeerTalk_Discovery_Mdns_OnServiceDiscovery_Makaretu_Dns_ServiceDiscovery_
  commentId: M:PeerTalk.Discovery.Mdns.OnServiceDiscovery(Makaretu.Dns.ServiceDiscovery)
  fullName: PeerTalk.Discovery.Mdns.OnServiceDiscovery(Makaretu.Dns.ServiceDiscovery)
  nameWithType: Mdns.OnServiceDiscovery(ServiceDiscovery)
- uid: PeerTalk.Discovery.Mdns.OnServiceDiscovery*
  name: OnServiceDiscovery
  href: api/PeerTalk.Discovery.Mdns.html#PeerTalk_Discovery_Mdns_OnServiceDiscovery_
  commentId: Overload:PeerTalk.Discovery.Mdns.OnServiceDiscovery
  isSpec: "True"
  fullName: PeerTalk.Discovery.Mdns.OnServiceDiscovery
  nameWithType: Mdns.OnServiceDiscovery
- uid: PeerTalk.Discovery.Mdns.PeerDiscovered
  name: PeerDiscovered
  href: api/PeerTalk.Discovery.Mdns.html#PeerTalk_Discovery_Mdns_PeerDiscovered
  commentId: E:PeerTalk.Discovery.Mdns.PeerDiscovered
  fullName: PeerTalk.Discovery.Mdns.PeerDiscovered
  nameWithType: Mdns.PeerDiscovered
- uid: PeerTalk.Discovery.Mdns.ServiceName
  name: ServiceName
  href: api/PeerTalk.Discovery.Mdns.html#PeerTalk_Discovery_Mdns_ServiceName
  commentId: P:PeerTalk.Discovery.Mdns.ServiceName
  fullName: PeerTalk.Discovery.Mdns.ServiceName
  nameWithType: Mdns.ServiceName
- uid: PeerTalk.Discovery.Mdns.ServiceName*
  name: ServiceName
  href: api/PeerTalk.Discovery.Mdns.html#PeerTalk_Discovery_Mdns_ServiceName_
  commentId: Overload:PeerTalk.Discovery.Mdns.ServiceName
  isSpec: "True"
  fullName: PeerTalk.Discovery.Mdns.ServiceName
  nameWithType: Mdns.ServiceName
- uid: PeerTalk.Discovery.Mdns.StartAsync
  name: StartAsync()
  href: api/PeerTalk.Discovery.Mdns.html#PeerTalk_Discovery_Mdns_StartAsync
  commentId: M:PeerTalk.Discovery.Mdns.StartAsync
  fullName: PeerTalk.Discovery.Mdns.StartAsync()
  nameWithType: Mdns.StartAsync()
- uid: PeerTalk.Discovery.Mdns.StartAsync*
  name: StartAsync
  href: api/PeerTalk.Discovery.Mdns.html#PeerTalk_Discovery_Mdns_StartAsync_
  commentId: Overload:PeerTalk.Discovery.Mdns.StartAsync
  isSpec: "True"
  fullName: PeerTalk.Discovery.Mdns.StartAsync
  nameWithType: Mdns.StartAsync
- uid: PeerTalk.Discovery.Mdns.StopAsync
  name: StopAsync()
  href: api/PeerTalk.Discovery.Mdns.html#PeerTalk_Discovery_Mdns_StopAsync
  commentId: M:PeerTalk.Discovery.Mdns.StopAsync
  fullName: PeerTalk.Discovery.Mdns.StopAsync()
  nameWithType: Mdns.StopAsync()
- uid: PeerTalk.Discovery.Mdns.StopAsync*
  name: StopAsync
  href: api/PeerTalk.Discovery.Mdns.html#PeerTalk_Discovery_Mdns_StopAsync_
  commentId: Overload:PeerTalk.Discovery.Mdns.StopAsync
  isSpec: "True"
  fullName: PeerTalk.Discovery.Mdns.StopAsync
  nameWithType: Mdns.StopAsync
- uid: PeerTalk.Discovery.MdnsGo
  name: MdnsGo
  href: api/PeerTalk.Discovery.MdnsGo.html
  commentId: T:PeerTalk.Discovery.MdnsGo
  fullName: PeerTalk.Discovery.MdnsGo
  nameWithType: MdnsGo
- uid: PeerTalk.Discovery.MdnsGo.#ctor
  name: MdnsGo()
  href: api/PeerTalk.Discovery.MdnsGo.html#PeerTalk_Discovery_MdnsGo__ctor
  commentId: M:PeerTalk.Discovery.MdnsGo.#ctor
  fullName: PeerTalk.Discovery.MdnsGo.MdnsGo()
  nameWithType: MdnsGo.MdnsGo()
- uid: PeerTalk.Discovery.MdnsGo.#ctor*
  name: MdnsGo
  href: api/PeerTalk.Discovery.MdnsGo.html#PeerTalk_Discovery_MdnsGo__ctor_
  commentId: Overload:PeerTalk.Discovery.MdnsGo.#ctor
  isSpec: "True"
  fullName: PeerTalk.Discovery.MdnsGo.MdnsGo
  nameWithType: MdnsGo.MdnsGo
- uid: PeerTalk.Discovery.MdnsJs
  name: MdnsJs
  href: api/PeerTalk.Discovery.MdnsJs.html
  commentId: T:PeerTalk.Discovery.MdnsJs
  fullName: PeerTalk.Discovery.MdnsJs
  nameWithType: MdnsJs
- uid: PeerTalk.Discovery.MdnsJs.#ctor
  name: MdnsJs()
  href: api/PeerTalk.Discovery.MdnsJs.html#PeerTalk_Discovery_MdnsJs__ctor
  commentId: M:PeerTalk.Discovery.MdnsJs.#ctor
  fullName: PeerTalk.Discovery.MdnsJs.MdnsJs()
  nameWithType: MdnsJs.MdnsJs()
- uid: PeerTalk.Discovery.MdnsJs.#ctor*
  name: MdnsJs
  href: api/PeerTalk.Discovery.MdnsJs.html#PeerTalk_Discovery_MdnsJs__ctor_
  commentId: Overload:PeerTalk.Discovery.MdnsJs.#ctor
  isSpec: "True"
  fullName: PeerTalk.Discovery.MdnsJs.MdnsJs
  nameWithType: MdnsJs.MdnsJs
- uid: PeerTalk.Discovery.MdnsJs.BuildProfile
  name: BuildProfile()
  href: api/PeerTalk.Discovery.MdnsJs.html#PeerTalk_Discovery_MdnsJs_BuildProfile
  commentId: M:PeerTalk.Discovery.MdnsJs.BuildProfile
  fullName: PeerTalk.Discovery.MdnsJs.BuildProfile()
  nameWithType: MdnsJs.BuildProfile()
- uid: PeerTalk.Discovery.MdnsJs.BuildProfile*
  name: BuildProfile
  href: api/PeerTalk.Discovery.MdnsJs.html#PeerTalk_Discovery_MdnsJs_BuildProfile_
  commentId: Overload:PeerTalk.Discovery.MdnsJs.BuildProfile
  isSpec: "True"
  fullName: PeerTalk.Discovery.MdnsJs.BuildProfile
  nameWithType: MdnsJs.BuildProfile
- uid: PeerTalk.Discovery.MdnsJs.GetAddresses(Makaretu.Dns.Message)
  name: GetAddresses(Message)
  href: api/PeerTalk.Discovery.MdnsJs.html#PeerTalk_Discovery_MdnsJs_GetAddresses_Makaretu_Dns_Message_
  commentId: M:PeerTalk.Discovery.MdnsJs.GetAddresses(Makaretu.Dns.Message)
  fullName: PeerTalk.Discovery.MdnsJs.GetAddresses(Makaretu.Dns.Message)
  nameWithType: MdnsJs.GetAddresses(Message)
- uid: PeerTalk.Discovery.MdnsJs.GetAddresses*
  name: GetAddresses
  href: api/PeerTalk.Discovery.MdnsJs.html#PeerTalk_Discovery_MdnsJs_GetAddresses_
  commentId: Overload:PeerTalk.Discovery.MdnsJs.GetAddresses
  isSpec: "True"
  fullName: PeerTalk.Discovery.MdnsJs.GetAddresses
  nameWithType: MdnsJs.GetAddresses
- uid: PeerTalk.Discovery.MdnsJs.OnServiceDiscovery(Makaretu.Dns.ServiceDiscovery)
  name: OnServiceDiscovery(ServiceDiscovery)
  href: api/PeerTalk.Discovery.MdnsJs.html#PeerTalk_Discovery_MdnsJs_OnServiceDiscovery_Makaretu_Dns_ServiceDiscovery_
  commentId: M:PeerTalk.Discovery.MdnsJs.OnServiceDiscovery(Makaretu.Dns.ServiceDiscovery)
  fullName: PeerTalk.Discovery.MdnsJs.OnServiceDiscovery(Makaretu.Dns.ServiceDiscovery)
  nameWithType: MdnsJs.OnServiceDiscovery(ServiceDiscovery)
- uid: PeerTalk.Discovery.MdnsJs.OnServiceDiscovery*
  name: OnServiceDiscovery
  href: api/PeerTalk.Discovery.MdnsJs.html#PeerTalk_Discovery_MdnsJs_OnServiceDiscovery_
  commentId: Overload:PeerTalk.Discovery.MdnsJs.OnServiceDiscovery
  isSpec: "True"
  fullName: PeerTalk.Discovery.MdnsJs.OnServiceDiscovery
  nameWithType: MdnsJs.OnServiceDiscovery
- uid: PeerTalk.Discovery.MdnsNext
  name: MdnsNext
  href: api/PeerTalk.Discovery.MdnsNext.html
  commentId: T:PeerTalk.Discovery.MdnsNext
  fullName: PeerTalk.Discovery.MdnsNext
  nameWithType: MdnsNext
- uid: PeerTalk.Discovery.MdnsNext.#ctor
  name: MdnsNext()
  href: api/PeerTalk.Discovery.MdnsNext.html#PeerTalk_Discovery_MdnsNext__ctor
  commentId: M:PeerTalk.Discovery.MdnsNext.#ctor
  fullName: PeerTalk.Discovery.MdnsNext.MdnsNext()
  nameWithType: MdnsNext.MdnsNext()
- uid: PeerTalk.Discovery.MdnsNext.#ctor*
  name: MdnsNext
  href: api/PeerTalk.Discovery.MdnsNext.html#PeerTalk_Discovery_MdnsNext__ctor_
  commentId: Overload:PeerTalk.Discovery.MdnsNext.#ctor
  isSpec: "True"
  fullName: PeerTalk.Discovery.MdnsNext.MdnsNext
  nameWithType: MdnsNext.MdnsNext
- uid: PeerTalk.Discovery.MdnsNext.BuildProfile
  name: BuildProfile()
  href: api/PeerTalk.Discovery.MdnsNext.html#PeerTalk_Discovery_MdnsNext_BuildProfile
  commentId: M:PeerTalk.Discovery.MdnsNext.BuildProfile
  fullName: PeerTalk.Discovery.MdnsNext.BuildProfile()
  nameWithType: MdnsNext.BuildProfile()
- uid: PeerTalk.Discovery.MdnsNext.BuildProfile*
  name: BuildProfile
  href: api/PeerTalk.Discovery.MdnsNext.html#PeerTalk_Discovery_MdnsNext_BuildProfile_
  commentId: Overload:PeerTalk.Discovery.MdnsNext.BuildProfile
  isSpec: "True"
  fullName: PeerTalk.Discovery.MdnsNext.BuildProfile
  nameWithType: MdnsNext.BuildProfile
- uid: PeerTalk.Discovery.MdnsNext.GetAddresses(Makaretu.Dns.Message)
  name: GetAddresses(Message)
  href: api/PeerTalk.Discovery.MdnsNext.html#PeerTalk_Discovery_MdnsNext_GetAddresses_Makaretu_Dns_Message_
  commentId: M:PeerTalk.Discovery.MdnsNext.GetAddresses(Makaretu.Dns.Message)
  fullName: PeerTalk.Discovery.MdnsNext.GetAddresses(Makaretu.Dns.Message)
  nameWithType: MdnsNext.GetAddresses(Message)
- uid: PeerTalk.Discovery.MdnsNext.GetAddresses*
  name: GetAddresses
  href: api/PeerTalk.Discovery.MdnsNext.html#PeerTalk_Discovery_MdnsNext_GetAddresses_
  commentId: Overload:PeerTalk.Discovery.MdnsNext.GetAddresses
  isSpec: "True"
  fullName: PeerTalk.Discovery.MdnsNext.GetAddresses
  nameWithType: MdnsNext.GetAddresses
- uid: PeerTalk.Discovery.PeerDiscoveredEventArgs
  name: PeerDiscoveredEventArgs
  href: api/PeerTalk.Discovery.PeerDiscoveredEventArgs.html
  commentId: T:PeerTalk.Discovery.PeerDiscoveredEventArgs
  fullName: PeerTalk.Discovery.PeerDiscoveredEventArgs
  nameWithType: PeerDiscoveredEventArgs
- uid: PeerTalk.Discovery.PeerDiscoveredEventArgs.Address
  name: Address
  href: api/PeerTalk.Discovery.PeerDiscoveredEventArgs.html#PeerTalk_Discovery_PeerDiscoveredEventArgs_Address
  commentId: P:PeerTalk.Discovery.PeerDiscoveredEventArgs.Address
  fullName: PeerTalk.Discovery.PeerDiscoveredEventArgs.Address
  nameWithType: PeerDiscoveredEventArgs.Address
- uid: PeerTalk.Discovery.PeerDiscoveredEventArgs.Address*
  name: Address
  href: api/PeerTalk.Discovery.PeerDiscoveredEventArgs.html#PeerTalk_Discovery_PeerDiscoveredEventArgs_Address_
  commentId: Overload:PeerTalk.Discovery.PeerDiscoveredEventArgs.Address
  isSpec: "True"
  fullName: PeerTalk.Discovery.PeerDiscoveredEventArgs.Address
  nameWithType: PeerDiscoveredEventArgs.Address
- uid: PeerTalk.IService
  name: IService
  href: api/PeerTalk.IService.html
  commentId: T:PeerTalk.IService
  fullName: PeerTalk.IService
  nameWithType: IService
- uid: PeerTalk.IService.StartAsync
  name: StartAsync()
  href: api/PeerTalk.IService.html#PeerTalk_IService_StartAsync
  commentId: M:PeerTalk.IService.StartAsync
  fullName: PeerTalk.IService.StartAsync()
  nameWithType: IService.StartAsync()
- uid: PeerTalk.IService.StartAsync*
  name: StartAsync
  href: api/PeerTalk.IService.html#PeerTalk_IService_StartAsync_
  commentId: Overload:PeerTalk.IService.StartAsync
  isSpec: "True"
  fullName: PeerTalk.IService.StartAsync
  nameWithType: IService.StartAsync
- uid: PeerTalk.IService.StopAsync
  name: StopAsync()
  href: api/PeerTalk.IService.html#PeerTalk_IService_StopAsync
  commentId: M:PeerTalk.IService.StopAsync
  fullName: PeerTalk.IService.StopAsync()
  nameWithType: IService.StopAsync()
- uid: PeerTalk.IService.StopAsync*
  name: StopAsync
  href: api/PeerTalk.IService.html#PeerTalk_IService_StopAsync_
  commentId: Overload:PeerTalk.IService.StopAsync
  isSpec: "True"
  fullName: PeerTalk.IService.StopAsync
  nameWithType: IService.StopAsync
- uid: PeerTalk.MultiAddressExtensions
  name: MultiAddressExtensions
  href: api/PeerTalk.MultiAddressExtensions.html
  commentId: T:PeerTalk.MultiAddressExtensions
  fullName: PeerTalk.MultiAddressExtensions
  nameWithType: MultiAddressExtensions
- uid: PeerTalk.MultiAddressExtensions.IsLoopback(Ipfs.MultiAddress)
  name: IsLoopback(MultiAddress)
  href: api/PeerTalk.MultiAddressExtensions.html#PeerTalk_MultiAddressExtensions_IsLoopback_Ipfs_MultiAddress_
  commentId: M:PeerTalk.MultiAddressExtensions.IsLoopback(Ipfs.MultiAddress)
  fullName: PeerTalk.MultiAddressExtensions.IsLoopback(Ipfs.MultiAddress)
  nameWithType: MultiAddressExtensions.IsLoopback(MultiAddress)
- uid: PeerTalk.MultiAddressExtensions.IsLoopback*
  name: IsLoopback
  href: api/PeerTalk.MultiAddressExtensions.html#PeerTalk_MultiAddressExtensions_IsLoopback_
  commentId: Overload:PeerTalk.MultiAddressExtensions.IsLoopback
  isSpec: "True"
  fullName: PeerTalk.MultiAddressExtensions.IsLoopback
  nameWithType: MultiAddressExtensions.IsLoopback
- uid: PeerTalk.MultiAddressExtensions.ResolveAsync(Ipfs.MultiAddress,System.Threading.CancellationToken)
  name: ResolveAsync(MultiAddress, CancellationToken)
  href: api/PeerTalk.MultiAddressExtensions.html#PeerTalk_MultiAddressExtensions_ResolveAsync_Ipfs_MultiAddress_System_Threading_CancellationToken_
  commentId: M:PeerTalk.MultiAddressExtensions.ResolveAsync(Ipfs.MultiAddress,System.Threading.CancellationToken)
  fullName: PeerTalk.MultiAddressExtensions.ResolveAsync(Ipfs.MultiAddress, System.Threading.CancellationToken)
  nameWithType: MultiAddressExtensions.ResolveAsync(MultiAddress, CancellationToken)
- uid: PeerTalk.MultiAddressExtensions.ResolveAsync*
  name: ResolveAsync
  href: api/PeerTalk.MultiAddressExtensions.html#PeerTalk_MultiAddressExtensions_ResolveAsync_
  commentId: Overload:PeerTalk.MultiAddressExtensions.ResolveAsync
  isSpec: "True"
  fullName: PeerTalk.MultiAddressExtensions.ResolveAsync
  nameWithType: MultiAddressExtensions.ResolveAsync
- uid: PeerTalk.Multiplex
  name: PeerTalk.Multiplex
  href: api/PeerTalk.Multiplex.html
  commentId: N:PeerTalk.Multiplex
  fullName: PeerTalk.Multiplex
  nameWithType: PeerTalk.Multiplex
- uid: PeerTalk.Multiplex.Header
  name: Header
  href: api/PeerTalk.Multiplex.Header.html
  commentId: T:PeerTalk.Multiplex.Header
  fullName: PeerTalk.Multiplex.Header
  nameWithType: Header
- uid: PeerTalk.Multiplex.Header.MaxStreamId
  name: MaxStreamId
  href: api/PeerTalk.Multiplex.Header.html#PeerTalk_Multiplex_Header_MaxStreamId
  commentId: F:PeerTalk.Multiplex.Header.MaxStreamId
  fullName: PeerTalk.Multiplex.Header.MaxStreamId
  nameWithType: Header.MaxStreamId
- uid: PeerTalk.Multiplex.Header.MinStreamId
  name: MinStreamId
  href: api/PeerTalk.Multiplex.Header.html#PeerTalk_Multiplex_Header_MinStreamId
  commentId: F:PeerTalk.Multiplex.Header.MinStreamId
  fullName: PeerTalk.Multiplex.Header.MinStreamId
  nameWithType: Header.MinStreamId
- uid: PeerTalk.Multiplex.Header.PacketType
  name: PacketType
  href: api/PeerTalk.Multiplex.Header.html#PeerTalk_Multiplex_Header_PacketType
  commentId: F:PeerTalk.Multiplex.Header.PacketType
  fullName: PeerTalk.Multiplex.Header.PacketType
  nameWithType: Header.PacketType
- uid: PeerTalk.Multiplex.Header.ReadAsync(System.IO.Stream,System.Threading.CancellationToken)
  name: ReadAsync(Stream, CancellationToken)
  href: api/PeerTalk.Multiplex.Header.html#PeerTalk_Multiplex_Header_ReadAsync_System_IO_Stream_System_Threading_CancellationToken_
  commentId: M:PeerTalk.Multiplex.Header.ReadAsync(System.IO.Stream,System.Threading.CancellationToken)
  fullName: PeerTalk.Multiplex.Header.ReadAsync(System.IO.Stream, System.Threading.CancellationToken)
  nameWithType: Header.ReadAsync(Stream, CancellationToken)
- uid: PeerTalk.Multiplex.Header.ReadAsync*
  name: ReadAsync
  href: api/PeerTalk.Multiplex.Header.html#PeerTalk_Multiplex_Header_ReadAsync_
  commentId: Overload:PeerTalk.Multiplex.Header.ReadAsync
  isSpec: "True"
  fullName: PeerTalk.Multiplex.Header.ReadAsync
  nameWithType: Header.ReadAsync
- uid: PeerTalk.Multiplex.Header.StreamId
  name: StreamId
  href: api/PeerTalk.Multiplex.Header.html#PeerTalk_Multiplex_Header_StreamId
  commentId: F:PeerTalk.Multiplex.Header.StreamId
  fullName: PeerTalk.Multiplex.Header.StreamId
  nameWithType: Header.StreamId
- uid: PeerTalk.Multiplex.Header.WriteAsync(System.IO.Stream,System.Threading.CancellationToken)
  name: WriteAsync(Stream, CancellationToken)
  href: api/PeerTalk.Multiplex.Header.html#PeerTalk_Multiplex_Header_WriteAsync_System_IO_Stream_System_Threading_CancellationToken_
  commentId: M:PeerTalk.Multiplex.Header.WriteAsync(System.IO.Stream,System.Threading.CancellationToken)
  fullName: PeerTalk.Multiplex.Header.WriteAsync(System.IO.Stream, System.Threading.CancellationToken)
  nameWithType: Header.WriteAsync(Stream, CancellationToken)
- uid: PeerTalk.Multiplex.Header.WriteAsync*
  name: WriteAsync
  href: api/PeerTalk.Multiplex.Header.html#PeerTalk_Multiplex_Header_WriteAsync_
  commentId: Overload:PeerTalk.Multiplex.Header.WriteAsync
  isSpec: "True"
  fullName: PeerTalk.Multiplex.Header.WriteAsync
  nameWithType: Header.WriteAsync
- uid: PeerTalk.Multiplex.Muxer
  name: Muxer
  href: api/PeerTalk.Multiplex.Muxer.html
  commentId: T:PeerTalk.Multiplex.Muxer
  fullName: PeerTalk.Multiplex.Muxer
  nameWithType: Muxer
- uid: PeerTalk.Multiplex.Muxer.AcquireWriteAccessAsync
  name: AcquireWriteAccessAsync()
  href: api/PeerTalk.Multiplex.Muxer.html#PeerTalk_Multiplex_Muxer_AcquireWriteAccessAsync
  commentId: M:PeerTalk.Multiplex.Muxer.AcquireWriteAccessAsync
  fullName: PeerTalk.Multiplex.Muxer.AcquireWriteAccessAsync()
  nameWithType: Muxer.AcquireWriteAccessAsync()
- uid: PeerTalk.Multiplex.Muxer.AcquireWriteAccessAsync*
  name: AcquireWriteAccessAsync
  href: api/PeerTalk.Multiplex.Muxer.html#PeerTalk_Multiplex_Muxer_AcquireWriteAccessAsync_
  commentId: Overload:PeerTalk.Multiplex.Muxer.AcquireWriteAccessAsync
  isSpec: "True"
  fullName: PeerTalk.Multiplex.Muxer.AcquireWriteAccessAsync
  nameWithType: Muxer.AcquireWriteAccessAsync
- uid: PeerTalk.Multiplex.Muxer.Channel
  name: Channel
  href: api/PeerTalk.Multiplex.Muxer.html#PeerTalk_Multiplex_Muxer_Channel
  commentId: P:PeerTalk.Multiplex.Muxer.Channel
  fullName: PeerTalk.Multiplex.Muxer.Channel
  nameWithType: Muxer.Channel
- uid: PeerTalk.Multiplex.Muxer.Channel*
  name: Channel
  href: api/PeerTalk.Multiplex.Muxer.html#PeerTalk_Multiplex_Muxer_Channel_
  commentId: Overload:PeerTalk.Multiplex.Muxer.Channel
  isSpec: "True"
  fullName: PeerTalk.Multiplex.Muxer.Channel
  nameWithType: Muxer.Channel
- uid: PeerTalk.Multiplex.Muxer.Connection
  name: Connection
  href: api/PeerTalk.Multiplex.Muxer.html#PeerTalk_Multiplex_Muxer_Connection
  commentId: P:PeerTalk.Multiplex.Muxer.Connection
  fullName: PeerTalk.Multiplex.Muxer.Connection
  nameWithType: Muxer.Connection
- uid: PeerTalk.Multiplex.Muxer.Connection*
  name: Connection
  href: api/PeerTalk.Multiplex.Muxer.html#PeerTalk_Multiplex_Muxer_Connection_
  commentId: Overload:PeerTalk.Multiplex.Muxer.Connection
  isSpec: "True"
  fullName: PeerTalk.Multiplex.Muxer.Connection
  nameWithType: Muxer.Connection
- uid: PeerTalk.Multiplex.Muxer.CreateStreamAsync(System.String,System.Threading.CancellationToken)
  name: CreateStreamAsync(String, CancellationToken)
  href: api/PeerTalk.Multiplex.Muxer.html#PeerTalk_Multiplex_Muxer_CreateStreamAsync_System_String_System_Threading_CancellationToken_
  commentId: M:PeerTalk.Multiplex.Muxer.CreateStreamAsync(System.String,System.Threading.CancellationToken)
  fullName: PeerTalk.Multiplex.Muxer.CreateStreamAsync(System.String, System.Threading.CancellationToken)
  nameWithType: Muxer.CreateStreamAsync(String, CancellationToken)
- uid: PeerTalk.Multiplex.Muxer.CreateStreamAsync*
  name: CreateStreamAsync
  href: api/PeerTalk.Multiplex.Muxer.html#PeerTalk_Multiplex_Muxer_CreateStreamAsync_
  commentId: Overload:PeerTalk.Multiplex.Muxer.CreateStreamAsync
  isSpec: "True"
  fullName: PeerTalk.Multiplex.Muxer.CreateStreamAsync
  nameWithType: Muxer.CreateStreamAsync
- uid: PeerTalk.Multiplex.Muxer.Initiator
  name: Initiator
  href: api/PeerTalk.Multiplex.Muxer.html#PeerTalk_Multiplex_Muxer_Initiator
  commentId: P:PeerTalk.Multiplex.Muxer.Initiator
  fullName: PeerTalk.Multiplex.Muxer.Initiator
  nameWithType: Muxer.Initiator
- uid: PeerTalk.Multiplex.Muxer.Initiator*
  name: Initiator
  href: api/PeerTalk.Multiplex.Muxer.html#PeerTalk_Multiplex_Muxer_Initiator_
  commentId: Overload:PeerTalk.Multiplex.Muxer.Initiator
  isSpec: "True"
  fullName: PeerTalk.Multiplex.Muxer.Initiator
  nameWithType: Muxer.Initiator
- uid: PeerTalk.Multiplex.Muxer.NextStreamId
  name: NextStreamId
  href: api/PeerTalk.Multiplex.Muxer.html#PeerTalk_Multiplex_Muxer_NextStreamId
  commentId: P:PeerTalk.Multiplex.Muxer.NextStreamId
  fullName: PeerTalk.Multiplex.Muxer.NextStreamId
  nameWithType: Muxer.NextStreamId
- uid: PeerTalk.Multiplex.Muxer.NextStreamId*
  name: NextStreamId
  href: api/PeerTalk.Multiplex.Muxer.html#PeerTalk_Multiplex_Muxer_NextStreamId_
  commentId: Overload:PeerTalk.Multiplex.Muxer.NextStreamId
  isSpec: "True"
  fullName: PeerTalk.Multiplex.Muxer.NextStreamId
  nameWithType: Muxer.NextStreamId
- uid: PeerTalk.Multiplex.Muxer.ProcessRequestsAsync(System.Threading.CancellationToken)
  name: ProcessRequestsAsync(CancellationToken)
  href: api/PeerTalk.Multiplex.Muxer.html#PeerTalk_Multiplex_Muxer_ProcessRequestsAsync_System_Threading_CancellationToken_
  commentId: M:PeerTalk.Multiplex.Muxer.ProcessRequestsAsync(System.Threading.CancellationToken)
  fullName: PeerTalk.Multiplex.Muxer.ProcessRequestsAsync(System.Threading.CancellationToken)
  nameWithType: Muxer.ProcessRequestsAsync(CancellationToken)
- uid: PeerTalk.Multiplex.Muxer.ProcessRequestsAsync*
  name: ProcessRequestsAsync
  href: api/PeerTalk.Multiplex.Muxer.html#PeerTalk_Multiplex_Muxer_ProcessRequestsAsync_
  commentId: Overload:PeerTalk.Multiplex.Muxer.ProcessRequestsAsync
  isSpec: "True"
  fullName: PeerTalk.Multiplex.Muxer.ProcessRequestsAsync
  nameWithType: Muxer.ProcessRequestsAsync
- uid: PeerTalk.Multiplex.Muxer.Receiver
  name: Receiver
  href: api/PeerTalk.Multiplex.Muxer.html#PeerTalk_Multiplex_Muxer_Receiver
  commentId: P:PeerTalk.Multiplex.Muxer.Receiver
  fullName: PeerTalk.Multiplex.Muxer.Receiver
  nameWithType: Muxer.Receiver
- uid: PeerTalk.Multiplex.Muxer.Receiver*
  name: Receiver
  href: api/PeerTalk.Multiplex.Muxer.html#PeerTalk_Multiplex_Muxer_Receiver_
  commentId: Overload:PeerTalk.Multiplex.Muxer.Receiver
  isSpec: "True"
  fullName: PeerTalk.Multiplex.Muxer.Receiver
  nameWithType: Muxer.Receiver
- uid: PeerTalk.Multiplex.Muxer.RemoveStreamAsync(PeerTalk.Multiplex.Substream,System.Threading.CancellationToken)
  name: RemoveStreamAsync(Substream, CancellationToken)
  href: api/PeerTalk.Multiplex.Muxer.html#PeerTalk_Multiplex_Muxer_RemoveStreamAsync_PeerTalk_Multiplex_Substream_System_Threading_CancellationToken_
  commentId: M:PeerTalk.Multiplex.Muxer.RemoveStreamAsync(PeerTalk.Multiplex.Substream,System.Threading.CancellationToken)
  fullName: PeerTalk.Multiplex.Muxer.RemoveStreamAsync(PeerTalk.Multiplex.Substream, System.Threading.CancellationToken)
  nameWithType: Muxer.RemoveStreamAsync(Substream, CancellationToken)
- uid: PeerTalk.Multiplex.Muxer.RemoveStreamAsync*
  name: RemoveStreamAsync
  href: api/PeerTalk.Multiplex.Muxer.html#PeerTalk_Multiplex_Muxer_RemoveStreamAsync_
  commentId: Overload:PeerTalk.Multiplex.Muxer.RemoveStreamAsync
  isSpec: "True"
  fullName: PeerTalk.Multiplex.Muxer.RemoveStreamAsync
  nameWithType: Muxer.RemoveStreamAsync
- uid: PeerTalk.Multiplex.Muxer.SubstreamClosed
  name: SubstreamClosed
  href: api/PeerTalk.Multiplex.Muxer.html#PeerTalk_Multiplex_Muxer_SubstreamClosed
  commentId: E:PeerTalk.Multiplex.Muxer.SubstreamClosed
  fullName: PeerTalk.Multiplex.Muxer.SubstreamClosed
  nameWithType: Muxer.SubstreamClosed
- uid: PeerTalk.Multiplex.Muxer.SubstreamCreated
  name: SubstreamCreated
  href: api/PeerTalk.Multiplex.Muxer.html#PeerTalk_Multiplex_Muxer_SubstreamCreated
  commentId: E:PeerTalk.Multiplex.Muxer.SubstreamCreated
  fullName: PeerTalk.Multiplex.Muxer.SubstreamCreated
  nameWithType: Muxer.SubstreamCreated
- uid: PeerTalk.Multiplex.Muxer.Substreams
  name: Substreams
  href: api/PeerTalk.Multiplex.Muxer.html#PeerTalk_Multiplex_Muxer_Substreams
  commentId: F:PeerTalk.Multiplex.Muxer.Substreams
  fullName: PeerTalk.Multiplex.Muxer.Substreams
  nameWithType: Muxer.Substreams
- uid: PeerTalk.Multiplex.PacketType
  name: PacketType
  href: api/PeerTalk.Multiplex.PacketType.html
  commentId: T:PeerTalk.Multiplex.PacketType
  fullName: PeerTalk.Multiplex.PacketType
  nameWithType: PacketType
- uid: PeerTalk.Multiplex.PacketType.CloseInitiator
  name: CloseInitiator
  href: api/PeerTalk.Multiplex.PacketType.html#PeerTalk_Multiplex_PacketType_CloseInitiator
  commentId: F:PeerTalk.Multiplex.PacketType.CloseInitiator
  fullName: PeerTalk.Multiplex.PacketType.CloseInitiator
  nameWithType: PacketType.CloseInitiator
- uid: PeerTalk.Multiplex.PacketType.CloseReceiver
  name: CloseReceiver
  href: api/PeerTalk.Multiplex.PacketType.html#PeerTalk_Multiplex_PacketType_CloseReceiver
  commentId: F:PeerTalk.Multiplex.PacketType.CloseReceiver
  fullName: PeerTalk.Multiplex.PacketType.CloseReceiver
  nameWithType: PacketType.CloseReceiver
- uid: PeerTalk.Multiplex.PacketType.MessageInitiator
  name: MessageInitiator
  href: api/PeerTalk.Multiplex.PacketType.html#PeerTalk_Multiplex_PacketType_MessageInitiator
  commentId: F:PeerTalk.Multiplex.PacketType.MessageInitiator
  fullName: PeerTalk.Multiplex.PacketType.MessageInitiator
  nameWithType: PacketType.MessageInitiator
- uid: PeerTalk.Multiplex.PacketType.MessageReceiver
  name: MessageReceiver
  href: api/PeerTalk.Multiplex.PacketType.html#PeerTalk_Multiplex_PacketType_MessageReceiver
  commentId: F:PeerTalk.Multiplex.PacketType.MessageReceiver
  fullName: PeerTalk.Multiplex.PacketType.MessageReceiver
  nameWithType: PacketType.MessageReceiver
- uid: PeerTalk.Multiplex.PacketType.NewStream
  name: NewStream
  href: api/PeerTalk.Multiplex.PacketType.html#PeerTalk_Multiplex_PacketType_NewStream
  commentId: F:PeerTalk.Multiplex.PacketType.NewStream
  fullName: PeerTalk.Multiplex.PacketType.NewStream
  nameWithType: PacketType.NewStream
- uid: PeerTalk.Multiplex.PacketType.ResetInitiator
  name: ResetInitiator
  href: api/PeerTalk.Multiplex.PacketType.html#PeerTalk_Multiplex_PacketType_ResetInitiator
  commentId: F:PeerTalk.Multiplex.PacketType.ResetInitiator
  fullName: PeerTalk.Multiplex.PacketType.ResetInitiator
  nameWithType: PacketType.ResetInitiator
- uid: PeerTalk.Multiplex.PacketType.ResetReceiver
  name: ResetReceiver
  href: api/PeerTalk.Multiplex.PacketType.html#PeerTalk_Multiplex_PacketType_ResetReceiver
  commentId: F:PeerTalk.Multiplex.PacketType.ResetReceiver
  fullName: PeerTalk.Multiplex.PacketType.ResetReceiver
  nameWithType: PacketType.ResetReceiver
- uid: PeerTalk.Multiplex.Substream
  name: Substream
  href: api/PeerTalk.Multiplex.Substream.html
  commentId: T:PeerTalk.Multiplex.Substream
  fullName: PeerTalk.Multiplex.Substream
  nameWithType: Substream
- uid: PeerTalk.Multiplex.Substream.AddData(System.Byte[])
  name: AddData(Byte[])
  href: api/PeerTalk.Multiplex.Substream.html#PeerTalk_Multiplex_Substream_AddData_System_Byte___
  commentId: M:PeerTalk.Multiplex.Substream.AddData(System.Byte[])
  name.vb: AddData(Byte())
  fullName: PeerTalk.Multiplex.Substream.AddData(System.Byte[])
  fullName.vb: PeerTalk.Multiplex.Substream.AddData(System.Byte())
  nameWithType: Substream.AddData(Byte[])
  nameWithType.vb: Substream.AddData(Byte())
- uid: PeerTalk.Multiplex.Substream.AddData*
  name: AddData
  href: api/PeerTalk.Multiplex.Substream.html#PeerTalk_Multiplex_Substream_AddData_
  commentId: Overload:PeerTalk.Multiplex.Substream.AddData
  isSpec: "True"
  fullName: PeerTalk.Multiplex.Substream.AddData
  nameWithType: Substream.AddData
- uid: PeerTalk.Multiplex.Substream.CanRead
  name: CanRead
  href: api/PeerTalk.Multiplex.Substream.html#PeerTalk_Multiplex_Substream_CanRead
  commentId: P:PeerTalk.Multiplex.Substream.CanRead
  fullName: PeerTalk.Multiplex.Substream.CanRead
  nameWithType: Substream.CanRead
- uid: PeerTalk.Multiplex.Substream.CanRead*
  name: CanRead
  href: api/PeerTalk.Multiplex.Substream.html#PeerTalk_Multiplex_Substream_CanRead_
  commentId: Overload:PeerTalk.Multiplex.Substream.CanRead
  isSpec: "True"
  fullName: PeerTalk.Multiplex.Substream.CanRead
  nameWithType: Substream.CanRead
- uid: PeerTalk.Multiplex.Substream.CanSeek
  name: CanSeek
  href: api/PeerTalk.Multiplex.Substream.html#PeerTalk_Multiplex_Substream_CanSeek
  commentId: P:PeerTalk.Multiplex.Substream.CanSeek
  fullName: PeerTalk.Multiplex.Substream.CanSeek
  nameWithType: Substream.CanSeek
- uid: PeerTalk.Multiplex.Substream.CanSeek*
  name: CanSeek
  href: api/PeerTalk.Multiplex.Substream.html#PeerTalk_Multiplex_Substream_CanSeek_
  commentId: Overload:PeerTalk.Multiplex.Substream.CanSeek
  isSpec: "True"
  fullName: PeerTalk.Multiplex.Substream.CanSeek
  nameWithType: Substream.CanSeek
- uid: PeerTalk.Multiplex.Substream.CanTimeout
  name: CanTimeout
  href: api/PeerTalk.Multiplex.Substream.html#PeerTalk_Multiplex_Substream_CanTimeout
  commentId: P:PeerTalk.Multiplex.Substream.CanTimeout
  fullName: PeerTalk.Multiplex.Substream.CanTimeout
  nameWithType: Substream.CanTimeout
- uid: PeerTalk.Multiplex.Substream.CanTimeout*
  name: CanTimeout
  href: api/PeerTalk.Multiplex.Substream.html#PeerTalk_Multiplex_Substream_CanTimeout_
  commentId: Overload:PeerTalk.Multiplex.Substream.CanTimeout
  isSpec: "True"
  fullName: PeerTalk.Multiplex.Substream.CanTimeout
  nameWithType: Substream.CanTimeout
- uid: PeerTalk.Multiplex.Substream.CanWrite
  name: CanWrite
  href: api/PeerTalk.Multiplex.Substream.html#PeerTalk_Multiplex_Substream_CanWrite
  commentId: P:PeerTalk.Multiplex.Substream.CanWrite
  fullName: PeerTalk.Multiplex.Substream.CanWrite
  nameWithType: Substream.CanWrite
- uid: PeerTalk.Multiplex.Substream.CanWrite*
  name: CanWrite
  href: api/PeerTalk.Multiplex.Substream.html#PeerTalk_Multiplex_Substream_CanWrite_
  commentId: Overload:PeerTalk.Multiplex.Substream.CanWrite
  isSpec: "True"
  fullName: PeerTalk.Multiplex.Substream.CanWrite
  nameWithType: Substream.CanWrite
- uid: PeerTalk.Multiplex.Substream.Dispose(System.Boolean)
  name: Dispose(Boolean)
  href: api/PeerTalk.Multiplex.Substream.html#PeerTalk_Multiplex_Substream_Dispose_System_Boolean_
  commentId: M:PeerTalk.Multiplex.Substream.Dispose(System.Boolean)
  fullName: PeerTalk.Multiplex.Substream.Dispose(System.Boolean)
  nameWithType: Substream.Dispose(Boolean)
- uid: PeerTalk.Multiplex.Substream.Dispose*
  name: Dispose
  href: api/PeerTalk.Multiplex.Substream.html#PeerTalk_Multiplex_Substream_Dispose_
  commentId: Overload:PeerTalk.Multiplex.Substream.Dispose
  isSpec: "True"
  fullName: PeerTalk.Multiplex.Substream.Dispose
  nameWithType: Substream.Dispose
- uid: PeerTalk.Multiplex.Substream.Flush
  name: Flush()
  href: api/PeerTalk.Multiplex.Substream.html#PeerTalk_Multiplex_Substream_Flush
  commentId: M:PeerTalk.Multiplex.Substream.Flush
  fullName: PeerTalk.Multiplex.Substream.Flush()
  nameWithType: Substream.Flush()
- uid: PeerTalk.Multiplex.Substream.Flush*
  name: Flush
  href: api/PeerTalk.Multiplex.Substream.html#PeerTalk_Multiplex_Substream_Flush_
  commentId: Overload:PeerTalk.Multiplex.Substream.Flush
  isSpec: "True"
  fullName: PeerTalk.Multiplex.Substream.Flush
  nameWithType: Substream.Flush
- uid: PeerTalk.Multiplex.Substream.FlushAsync(System.Threading.CancellationToken)
  name: FlushAsync(CancellationToken)
  href: api/PeerTalk.Multiplex.Substream.html#PeerTalk_Multiplex_Substream_FlushAsync_System_Threading_CancellationToken_
  commentId: M:PeerTalk.Multiplex.Substream.FlushAsync(System.Threading.CancellationToken)
  fullName: PeerTalk.Multiplex.Substream.FlushAsync(System.Threading.CancellationToken)
  nameWithType: Substream.FlushAsync(CancellationToken)
- uid: PeerTalk.Multiplex.Substream.FlushAsync*
  name: FlushAsync
  href: api/PeerTalk.Multiplex.Substream.html#PeerTalk_Multiplex_Substream_FlushAsync_
  commentId: Overload:PeerTalk.Multiplex.Substream.FlushAsync
  isSpec: "True"
  fullName: PeerTalk.Multiplex.Substream.FlushAsync
  nameWithType: Substream.FlushAsync
- uid: PeerTalk.Multiplex.Substream.Id
  name: Id
  href: api/PeerTalk.Multiplex.Substream.html#PeerTalk_Multiplex_Substream_Id
  commentId: F:PeerTalk.Multiplex.Substream.Id
  fullName: PeerTalk.Multiplex.Substream.Id
  nameWithType: Substream.Id
- uid: PeerTalk.Multiplex.Substream.Length
  name: Length
  href: api/PeerTalk.Multiplex.Substream.html#PeerTalk_Multiplex_Substream_Length
  commentId: P:PeerTalk.Multiplex.Substream.Length
  fullName: PeerTalk.Multiplex.Substream.Length
  nameWithType: Substream.Length
- uid: PeerTalk.Multiplex.Substream.Length*
  name: Length
  href: api/PeerTalk.Multiplex.Substream.html#PeerTalk_Multiplex_Substream_Length_
  commentId: Overload:PeerTalk.Multiplex.Substream.Length
  isSpec: "True"
  fullName: PeerTalk.Multiplex.Substream.Length
  nameWithType: Substream.Length
- uid: PeerTalk.Multiplex.Substream.Muxer
  name: Muxer
  href: api/PeerTalk.Multiplex.Substream.html#PeerTalk_Multiplex_Substream_Muxer
  commentId: P:PeerTalk.Multiplex.Substream.Muxer
  fullName: PeerTalk.Multiplex.Substream.Muxer
  nameWithType: Substream.Muxer
- uid: PeerTalk.Multiplex.Substream.Muxer*
  name: Muxer
  href: api/PeerTalk.Multiplex.Substream.html#PeerTalk_Multiplex_Substream_Muxer_
  commentId: Overload:PeerTalk.Multiplex.Substream.Muxer
  isSpec: "True"
  fullName: PeerTalk.Multiplex.Substream.Muxer
  nameWithType: Substream.Muxer
- uid: PeerTalk.Multiplex.Substream.Name
  name: Name
  href: api/PeerTalk.Multiplex.Substream.html#PeerTalk_Multiplex_Substream_Name
  commentId: F:PeerTalk.Multiplex.Substream.Name
  fullName: PeerTalk.Multiplex.Substream.Name
  nameWithType: Substream.Name
- uid: PeerTalk.Multiplex.Substream.NoMoreData
  name: NoMoreData()
  href: api/PeerTalk.Multiplex.Substream.html#PeerTalk_Multiplex_Substream_NoMoreData
  commentId: M:PeerTalk.Multiplex.Substream.NoMoreData
  fullName: PeerTalk.Multiplex.Substream.NoMoreData()
  nameWithType: Substream.NoMoreData()
- uid: PeerTalk.Multiplex.Substream.NoMoreData*
  name: NoMoreData
  href: api/PeerTalk.Multiplex.Substream.html#PeerTalk_Multiplex_Substream_NoMoreData_
  commentId: Overload:PeerTalk.Multiplex.Substream.NoMoreData
  isSpec: "True"
  fullName: PeerTalk.Multiplex.Substream.NoMoreData
  nameWithType: Substream.NoMoreData
- uid: PeerTalk.Multiplex.Substream.Position
  name: Position
  href: api/PeerTalk.Multiplex.Substream.html#PeerTalk_Multiplex_Substream_Position
  commentId: P:PeerTalk.Multiplex.Substream.Position
  fullName: PeerTalk.Multiplex.Substream.Position
  nameWithType: Substream.Position
- uid: PeerTalk.Multiplex.Substream.Position*
  name: Position
  href: api/PeerTalk.Multiplex.Substream.html#PeerTalk_Multiplex_Substream_Position_
  commentId: Overload:PeerTalk.Multiplex.Substream.Position
  isSpec: "True"
  fullName: PeerTalk.Multiplex.Substream.Position
  nameWithType: Substream.Position
- uid: PeerTalk.Multiplex.Substream.Read(System.Byte[],System.Int32,System.Int32)
  name: Read(Byte[], Int32, Int32)
  href: api/PeerTalk.Multiplex.Substream.html#PeerTalk_Multiplex_Substream_Read_System_Byte___System_Int32_System_Int32_
  commentId: M:PeerTalk.Multiplex.Substream.Read(System.Byte[],System.Int32,System.Int32)
  name.vb: Read(Byte(), Int32, Int32)
  fullName: PeerTalk.Multiplex.Substream.Read(System.Byte[], System.Int32, System.Int32)
  fullName.vb: PeerTalk.Multiplex.Substream.Read(System.Byte(), System.Int32, System.Int32)
  nameWithType: Substream.Read(Byte[], Int32, Int32)
  nameWithType.vb: Substream.Read(Byte(), Int32, Int32)
- uid: PeerTalk.Multiplex.Substream.Read*
  name: Read
  href: api/PeerTalk.Multiplex.Substream.html#PeerTalk_Multiplex_Substream_Read_
  commentId: Overload:PeerTalk.Multiplex.Substream.Read
  isSpec: "True"
  fullName: PeerTalk.Multiplex.Substream.Read
  nameWithType: Substream.Read
- uid: PeerTalk.Multiplex.Substream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  name: ReadAsync(Byte[], Int32, Int32, CancellationToken)
  href: api/PeerTalk.Multiplex.Substream.html#PeerTalk_Multiplex_Substream_ReadAsync_System_Byte___System_Int32_System_Int32_System_Threading_CancellationToken_
  commentId: M:PeerTalk.Multiplex.Substream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  name.vb: ReadAsync(Byte(), Int32, Int32, CancellationToken)
  fullName: PeerTalk.Multiplex.Substream.ReadAsync(System.Byte[], System.Int32, System.Int32, System.Threading.CancellationToken)
  fullName.vb: PeerTalk.Multiplex.Substream.ReadAsync(System.Byte(), System.Int32, System.Int32, System.Threading.CancellationToken)
  nameWithType: Substream.ReadAsync(Byte[], Int32, Int32, CancellationToken)
  nameWithType.vb: Substream.ReadAsync(Byte(), Int32, Int32, CancellationToken)
- uid: PeerTalk.Multiplex.Substream.ReadAsync*
  name: ReadAsync
  href: api/PeerTalk.Multiplex.Substream.html#PeerTalk_Multiplex_Substream_ReadAsync_
  commentId: Overload:PeerTalk.Multiplex.Substream.ReadAsync
  isSpec: "True"
  fullName: PeerTalk.Multiplex.Substream.ReadAsync
  nameWithType: Substream.ReadAsync
- uid: PeerTalk.Multiplex.Substream.Seek(System.Int64,System.IO.SeekOrigin)
  name: Seek(Int64, SeekOrigin)
  href: api/PeerTalk.Multiplex.Substream.html#PeerTalk_Multiplex_Substream_Seek_System_Int64_System_IO_SeekOrigin_
  commentId: M:PeerTalk.Multiplex.Substream.Seek(System.Int64,System.IO.SeekOrigin)
  fullName: PeerTalk.Multiplex.Substream.Seek(System.Int64, System.IO.SeekOrigin)
  nameWithType: Substream.Seek(Int64, SeekOrigin)
- uid: PeerTalk.Multiplex.Substream.Seek*
  name: Seek
  href: api/PeerTalk.Multiplex.Substream.html#PeerTalk_Multiplex_Substream_Seek_
  commentId: Overload:PeerTalk.Multiplex.Substream.Seek
  isSpec: "True"
  fullName: PeerTalk.Multiplex.Substream.Seek
  nameWithType: Substream.Seek
- uid: PeerTalk.Multiplex.Substream.SentMessageType
  name: SentMessageType
  href: api/PeerTalk.Multiplex.Substream.html#PeerTalk_Multiplex_Substream_SentMessageType
  commentId: F:PeerTalk.Multiplex.Substream.SentMessageType
  fullName: PeerTalk.Multiplex.Substream.SentMessageType
  nameWithType: Substream.SentMessageType
- uid: PeerTalk.Multiplex.Substream.SetLength(System.Int64)
  name: SetLength(Int64)
  href: api/PeerTalk.Multiplex.Substream.html#PeerTalk_Multiplex_Substream_SetLength_System_Int64_
  commentId: M:PeerTalk.Multiplex.Substream.SetLength(System.Int64)
  fullName: PeerTalk.Multiplex.Substream.SetLength(System.Int64)
  nameWithType: Substream.SetLength(Int64)
- uid: PeerTalk.Multiplex.Substream.SetLength*
  name: SetLength
  href: api/PeerTalk.Multiplex.Substream.html#PeerTalk_Multiplex_Substream_SetLength_
  commentId: Overload:PeerTalk.Multiplex.Substream.SetLength
  isSpec: "True"
  fullName: PeerTalk.Multiplex.Substream.SetLength
  nameWithType: Substream.SetLength
- uid: PeerTalk.Multiplex.Substream.Write(System.Byte[],System.Int32,System.Int32)
  name: Write(Byte[], Int32, Int32)
  href: api/PeerTalk.Multiplex.Substream.html#PeerTalk_Multiplex_Substream_Write_System_Byte___System_Int32_System_Int32_
  commentId: M:PeerTalk.Multiplex.Substream.Write(System.Byte[],System.Int32,System.Int32)
  name.vb: Write(Byte(), Int32, Int32)
  fullName: PeerTalk.Multiplex.Substream.Write(System.Byte[], System.Int32, System.Int32)
  fullName.vb: PeerTalk.Multiplex.Substream.Write(System.Byte(), System.Int32, System.Int32)
  nameWithType: Substream.Write(Byte[], Int32, Int32)
  nameWithType.vb: Substream.Write(Byte(), Int32, Int32)
- uid: PeerTalk.Multiplex.Substream.Write*
  name: Write
  href: api/PeerTalk.Multiplex.Substream.html#PeerTalk_Multiplex_Substream_Write_
  commentId: Overload:PeerTalk.Multiplex.Substream.Write
  isSpec: "True"
  fullName: PeerTalk.Multiplex.Substream.Write
  nameWithType: Substream.Write
- uid: PeerTalk.Multiplex.Substream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  name: WriteAsync(Byte[], Int32, Int32, CancellationToken)
  href: api/PeerTalk.Multiplex.Substream.html#PeerTalk_Multiplex_Substream_WriteAsync_System_Byte___System_Int32_System_Int32_System_Threading_CancellationToken_
  commentId: M:PeerTalk.Multiplex.Substream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  name.vb: WriteAsync(Byte(), Int32, Int32, CancellationToken)
  fullName: PeerTalk.Multiplex.Substream.WriteAsync(System.Byte[], System.Int32, System.Int32, System.Threading.CancellationToken)
  fullName.vb: PeerTalk.Multiplex.Substream.WriteAsync(System.Byte(), System.Int32, System.Int32, System.Threading.CancellationToken)
  nameWithType: Substream.WriteAsync(Byte[], Int32, Int32, CancellationToken)
  nameWithType.vb: Substream.WriteAsync(Byte(), Int32, Int32, CancellationToken)
- uid: PeerTalk.Multiplex.Substream.WriteAsync*
  name: WriteAsync
  href: api/PeerTalk.Multiplex.Substream.html#PeerTalk_Multiplex_Substream_WriteAsync_
  commentId: Overload:PeerTalk.Multiplex.Substream.WriteAsync
  isSpec: "True"
  fullName: PeerTalk.Multiplex.Substream.WriteAsync
  nameWithType: Substream.WriteAsync
- uid: PeerTalk.Multiplex.Substream.WriteByte(System.Byte)
  name: WriteByte(Byte)
  href: api/PeerTalk.Multiplex.Substream.html#PeerTalk_Multiplex_Substream_WriteByte_System_Byte_
  commentId: M:PeerTalk.Multiplex.Substream.WriteByte(System.Byte)
  fullName: PeerTalk.Multiplex.Substream.WriteByte(System.Byte)
  nameWithType: Substream.WriteByte(Byte)
- uid: PeerTalk.Multiplex.Substream.WriteByte*
  name: WriteByte
  href: api/PeerTalk.Multiplex.Substream.html#PeerTalk_Multiplex_Substream_WriteByte_
  commentId: Overload:PeerTalk.Multiplex.Substream.WriteByte
  isSpec: "True"
  fullName: PeerTalk.Multiplex.Substream.WriteByte
  nameWithType: Substream.WriteByte
- uid: PeerTalk.PeerConnection
  name: PeerConnection
  href: api/PeerTalk.PeerConnection.html
  commentId: T:PeerTalk.PeerConnection
  fullName: PeerTalk.PeerConnection
  nameWithType: PeerConnection
- uid: PeerTalk.PeerConnection.AddProtocol(PeerTalk.Protocols.IPeerProtocol)
  name: AddProtocol(IPeerProtocol)
  href: api/PeerTalk.PeerConnection.html#PeerTalk_PeerConnection_AddProtocol_PeerTalk_Protocols_IPeerProtocol_
  commentId: M:PeerTalk.PeerConnection.AddProtocol(PeerTalk.Protocols.IPeerProtocol)
  fullName: PeerTalk.PeerConnection.AddProtocol(PeerTalk.Protocols.IPeerProtocol)
  nameWithType: PeerConnection.AddProtocol(IPeerProtocol)
- uid: PeerTalk.PeerConnection.AddProtocol*
  name: AddProtocol
  href: api/PeerTalk.PeerConnection.html#PeerTalk_PeerConnection_AddProtocol_
  commentId: Overload:PeerTalk.PeerConnection.AddProtocol
  isSpec: "True"
  fullName: PeerTalk.PeerConnection.AddProtocol
  nameWithType: PeerConnection.AddProtocol
- uid: PeerTalk.PeerConnection.AddProtocols(System.Collections.Generic.IEnumerable{PeerTalk.Protocols.IPeerProtocol})
  name: AddProtocols(IEnumerable<IPeerProtocol>)
  href: api/PeerTalk.PeerConnection.html#PeerTalk_PeerConnection_AddProtocols_System_Collections_Generic_IEnumerable_PeerTalk_Protocols_IPeerProtocol__
  commentId: M:PeerTalk.PeerConnection.AddProtocols(System.Collections.Generic.IEnumerable{PeerTalk.Protocols.IPeerProtocol})
  name.vb: AddProtocols(IEnumerable(Of IPeerProtocol))
  fullName: PeerTalk.PeerConnection.AddProtocols(System.Collections.Generic.IEnumerable<PeerTalk.Protocols.IPeerProtocol>)
  fullName.vb: PeerTalk.PeerConnection.AddProtocols(System.Collections.Generic.IEnumerable(Of PeerTalk.Protocols.IPeerProtocol))
  nameWithType: PeerConnection.AddProtocols(IEnumerable<IPeerProtocol>)
  nameWithType.vb: PeerConnection.AddProtocols(IEnumerable(Of IPeerProtocol))
- uid: PeerTalk.PeerConnection.AddProtocols*
  name: AddProtocols
  href: api/PeerTalk.PeerConnection.html#PeerTalk_PeerConnection_AddProtocols_
  commentId: Overload:PeerTalk.PeerConnection.AddProtocols
  isSpec: "True"
  fullName: PeerTalk.PeerConnection.AddProtocols
  nameWithType: PeerConnection.AddProtocols
- uid: PeerTalk.PeerConnection.BytesRead
  name: BytesRead
  href: api/PeerTalk.PeerConnection.html#PeerTalk_PeerConnection_BytesRead
  commentId: P:PeerTalk.PeerConnection.BytesRead
  fullName: PeerTalk.PeerConnection.BytesRead
  nameWithType: PeerConnection.BytesRead
- uid: PeerTalk.PeerConnection.BytesRead*
  name: BytesRead
  href: api/PeerTalk.PeerConnection.html#PeerTalk_PeerConnection_BytesRead_
  commentId: Overload:PeerTalk.PeerConnection.BytesRead
  isSpec: "True"
  fullName: PeerTalk.PeerConnection.BytesRead
  nameWithType: PeerConnection.BytesRead
- uid: PeerTalk.PeerConnection.BytesWritten
  name: BytesWritten
  href: api/PeerTalk.PeerConnection.html#PeerTalk_PeerConnection_BytesWritten
  commentId: P:PeerTalk.PeerConnection.BytesWritten
  fullName: PeerTalk.PeerConnection.BytesWritten
  nameWithType: PeerConnection.BytesWritten
- uid: PeerTalk.PeerConnection.BytesWritten*
  name: BytesWritten
  href: api/PeerTalk.PeerConnection.html#PeerTalk_PeerConnection_BytesWritten_
  commentId: Overload:PeerTalk.PeerConnection.BytesWritten
  isSpec: "True"
  fullName: PeerTalk.PeerConnection.BytesWritten
  nameWithType: PeerConnection.BytesWritten
- uid: PeerTalk.PeerConnection.Closed
  name: Closed
  href: api/PeerTalk.PeerConnection.html#PeerTalk_PeerConnection_Closed
  commentId: E:PeerTalk.PeerConnection.Closed
  fullName: PeerTalk.PeerConnection.Closed
  nameWithType: PeerConnection.Closed
- uid: PeerTalk.PeerConnection.Dispose
  name: Dispose()
  href: api/PeerTalk.PeerConnection.html#PeerTalk_PeerConnection_Dispose
  commentId: M:PeerTalk.PeerConnection.Dispose
  fullName: PeerTalk.PeerConnection.Dispose()
  nameWithType: PeerConnection.Dispose()
- uid: PeerTalk.PeerConnection.Dispose(System.Boolean)
  name: Dispose(Boolean)
  href: api/PeerTalk.PeerConnection.html#PeerTalk_PeerConnection_Dispose_System_Boolean_
  commentId: M:PeerTalk.PeerConnection.Dispose(System.Boolean)
  fullName: PeerTalk.PeerConnection.Dispose(System.Boolean)
  nameWithType: PeerConnection.Dispose(Boolean)
- uid: PeerTalk.PeerConnection.Dispose*
  name: Dispose
  href: api/PeerTalk.PeerConnection.html#PeerTalk_PeerConnection_Dispose_
  commentId: Overload:PeerTalk.PeerConnection.Dispose
  isSpec: "True"
  fullName: PeerTalk.PeerConnection.Dispose
  nameWithType: PeerConnection.Dispose
- uid: PeerTalk.PeerConnection.EstablishProtocolAsync(System.String,System.IO.Stream,System.Threading.CancellationToken)
  name: EstablishProtocolAsync(String, Stream, CancellationToken)
  href: api/PeerTalk.PeerConnection.html#PeerTalk_PeerConnection_EstablishProtocolAsync_System_String_System_IO_Stream_System_Threading_CancellationToken_
  commentId: M:PeerTalk.PeerConnection.EstablishProtocolAsync(System.String,System.IO.Stream,System.Threading.CancellationToken)
  fullName: PeerTalk.PeerConnection.EstablishProtocolAsync(System.String, System.IO.Stream, System.Threading.CancellationToken)
  nameWithType: PeerConnection.EstablishProtocolAsync(String, Stream, CancellationToken)
- uid: PeerTalk.PeerConnection.EstablishProtocolAsync(System.String,System.Threading.CancellationToken)
  name: EstablishProtocolAsync(String, CancellationToken)
  href: api/PeerTalk.PeerConnection.html#PeerTalk_PeerConnection_EstablishProtocolAsync_System_String_System_Threading_CancellationToken_
  commentId: M:PeerTalk.PeerConnection.EstablishProtocolAsync(System.String,System.Threading.CancellationToken)
  fullName: PeerTalk.PeerConnection.EstablishProtocolAsync(System.String, System.Threading.CancellationToken)
  nameWithType: PeerConnection.EstablishProtocolAsync(String, CancellationToken)
- uid: PeerTalk.PeerConnection.EstablishProtocolAsync*
  name: EstablishProtocolAsync
  href: api/PeerTalk.PeerConnection.html#PeerTalk_PeerConnection_EstablishProtocolAsync_
  commentId: Overload:PeerTalk.PeerConnection.EstablishProtocolAsync
  isSpec: "True"
  fullName: PeerTalk.PeerConnection.EstablishProtocolAsync
  nameWithType: PeerConnection.EstablishProtocolAsync
- uid: PeerTalk.PeerConnection.IdentityEstablished
  name: IdentityEstablished
  href: api/PeerTalk.PeerConnection.html#PeerTalk_PeerConnection_IdentityEstablished
  commentId: P:PeerTalk.PeerConnection.IdentityEstablished
  fullName: PeerTalk.PeerConnection.IdentityEstablished
  nameWithType: PeerConnection.IdentityEstablished
- uid: PeerTalk.PeerConnection.IdentityEstablished*
  name: IdentityEstablished
  href: api/PeerTalk.PeerConnection.html#PeerTalk_PeerConnection_IdentityEstablished_
  commentId: Overload:PeerTalk.PeerConnection.IdentityEstablished
  isSpec: "True"
  fullName: PeerTalk.PeerConnection.IdentityEstablished
  nameWithType: PeerConnection.IdentityEstablished
- uid: PeerTalk.PeerConnection.InitiateAsync(System.Collections.Generic.IEnumerable{PeerTalk.Protocols.IEncryptionProtocol},System.Threading.CancellationToken)
  name: InitiateAsync(IEnumerable<IEncryptionProtocol>, CancellationToken)
  href: api/PeerTalk.PeerConnection.html#PeerTalk_PeerConnection_InitiateAsync_System_Collections_Generic_IEnumerable_PeerTalk_Protocols_IEncryptionProtocol__System_Threading_CancellationToken_
  commentId: M:PeerTalk.PeerConnection.InitiateAsync(System.Collections.Generic.IEnumerable{PeerTalk.Protocols.IEncryptionProtocol},System.Threading.CancellationToken)
  name.vb: InitiateAsync(IEnumerable(Of IEncryptionProtocol), CancellationToken)
  fullName: PeerTalk.PeerConnection.InitiateAsync(System.Collections.Generic.IEnumerable<PeerTalk.Protocols.IEncryptionProtocol>, System.Threading.CancellationToken)
  fullName.vb: PeerTalk.PeerConnection.InitiateAsync(System.Collections.Generic.IEnumerable(Of PeerTalk.Protocols.IEncryptionProtocol), System.Threading.CancellationToken)
  nameWithType: PeerConnection.InitiateAsync(IEnumerable<IEncryptionProtocol>, CancellationToken)
  nameWithType.vb: PeerConnection.InitiateAsync(IEnumerable(Of IEncryptionProtocol), CancellationToken)
- uid: PeerTalk.PeerConnection.InitiateAsync*
  name: InitiateAsync
  href: api/PeerTalk.PeerConnection.html#PeerTalk_PeerConnection_InitiateAsync_
  commentId: Overload:PeerTalk.PeerConnection.InitiateAsync
  isSpec: "True"
  fullName: PeerTalk.PeerConnection.InitiateAsync
  nameWithType: PeerConnection.InitiateAsync
- uid: PeerTalk.PeerConnection.IsIncoming
  name: IsIncoming
  href: api/PeerTalk.PeerConnection.html#PeerTalk_PeerConnection_IsIncoming
  commentId: P:PeerTalk.PeerConnection.IsIncoming
  fullName: PeerTalk.PeerConnection.IsIncoming
  nameWithType: PeerConnection.IsIncoming
- uid: PeerTalk.PeerConnection.IsIncoming*
  name: IsIncoming
  href: api/PeerTalk.PeerConnection.html#PeerTalk_PeerConnection_IsIncoming_
  commentId: Overload:PeerTalk.PeerConnection.IsIncoming
  isSpec: "True"
  fullName: PeerTalk.PeerConnection.IsIncoming
  nameWithType: PeerConnection.IsIncoming
- uid: PeerTalk.PeerConnection.LastUsed
  name: LastUsed
  href: api/PeerTalk.PeerConnection.html#PeerTalk_PeerConnection_LastUsed
  commentId: P:PeerTalk.PeerConnection.LastUsed
  fullName: PeerTalk.PeerConnection.LastUsed
  nameWithType: PeerConnection.LastUsed
- uid: PeerTalk.PeerConnection.LastUsed*
  name: LastUsed
  href: api/PeerTalk.PeerConnection.html#PeerTalk_PeerConnection_LastUsed_
  commentId: Overload:PeerTalk.PeerConnection.LastUsed
  isSpec: "True"
  fullName: PeerTalk.PeerConnection.LastUsed
  nameWithType: PeerConnection.LastUsed
- uid: PeerTalk.PeerConnection.LocalAddress
  name: LocalAddress
  href: api/PeerTalk.PeerConnection.html#PeerTalk_PeerConnection_LocalAddress
  commentId: P:PeerTalk.PeerConnection.LocalAddress
  fullName: PeerTalk.PeerConnection.LocalAddress
  nameWithType: PeerConnection.LocalAddress
- uid: PeerTalk.PeerConnection.LocalAddress*
  name: LocalAddress
  href: api/PeerTalk.PeerConnection.html#PeerTalk_PeerConnection_LocalAddress_
  commentId: Overload:PeerTalk.PeerConnection.LocalAddress
  isSpec: "True"
  fullName: PeerTalk.PeerConnection.LocalAddress
  nameWithType: PeerConnection.LocalAddress
- uid: PeerTalk.PeerConnection.LocalPeer
  name: LocalPeer
  href: api/PeerTalk.PeerConnection.html#PeerTalk_PeerConnection_LocalPeer
  commentId: P:PeerTalk.PeerConnection.LocalPeer
  fullName: PeerTalk.PeerConnection.LocalPeer
  nameWithType: PeerConnection.LocalPeer
- uid: PeerTalk.PeerConnection.LocalPeer*
  name: LocalPeer
  href: api/PeerTalk.PeerConnection.html#PeerTalk_PeerConnection_LocalPeer_
  commentId: Overload:PeerTalk.PeerConnection.LocalPeer
  isSpec: "True"
  fullName: PeerTalk.PeerConnection.LocalPeer
  nameWithType: PeerConnection.LocalPeer
- uid: PeerTalk.PeerConnection.LocalPeerKey
  name: LocalPeerKey
  href: api/PeerTalk.PeerConnection.html#PeerTalk_PeerConnection_LocalPeerKey
  commentId: P:PeerTalk.PeerConnection.LocalPeerKey
  fullName: PeerTalk.PeerConnection.LocalPeerKey
  nameWithType: PeerConnection.LocalPeerKey
- uid: PeerTalk.PeerConnection.LocalPeerKey*
  name: LocalPeerKey
  href: api/PeerTalk.PeerConnection.html#PeerTalk_PeerConnection_LocalPeerKey_
  commentId: Overload:PeerTalk.PeerConnection.LocalPeerKey
  isSpec: "True"
  fullName: PeerTalk.PeerConnection.LocalPeerKey
  nameWithType: PeerConnection.LocalPeerKey
- uid: PeerTalk.PeerConnection.MuxerEstablished
  name: MuxerEstablished
  href: api/PeerTalk.PeerConnection.html#PeerTalk_PeerConnection_MuxerEstablished
  commentId: P:PeerTalk.PeerConnection.MuxerEstablished
  fullName: PeerTalk.PeerConnection.MuxerEstablished
  nameWithType: PeerConnection.MuxerEstablished
- uid: PeerTalk.PeerConnection.MuxerEstablished*
  name: MuxerEstablished
  href: api/PeerTalk.PeerConnection.html#PeerTalk_PeerConnection_MuxerEstablished_
  commentId: Overload:PeerTalk.PeerConnection.MuxerEstablished
  isSpec: "True"
  fullName: PeerTalk.PeerConnection.MuxerEstablished
  nameWithType: PeerConnection.MuxerEstablished
- uid: PeerTalk.PeerConnection.Protocols
  name: Protocols
  href: api/PeerTalk.PeerConnection.html#PeerTalk_PeerConnection_Protocols
  commentId: P:PeerTalk.PeerConnection.Protocols
  fullName: PeerTalk.PeerConnection.Protocols
  nameWithType: PeerConnection.Protocols
- uid: PeerTalk.PeerConnection.Protocols*
  name: Protocols
  href: api/PeerTalk.PeerConnection.html#PeerTalk_PeerConnection_Protocols_
  commentId: Overload:PeerTalk.PeerConnection.Protocols
  isSpec: "True"
  fullName: PeerTalk.PeerConnection.Protocols
  nameWithType: PeerConnection.Protocols
- uid: PeerTalk.PeerConnection.ReadMessages(System.IO.Stream,System.Threading.CancellationToken)
  name: ReadMessages(Stream, CancellationToken)
  href: api/PeerTalk.PeerConnection.html#PeerTalk_PeerConnection_ReadMessages_System_IO_Stream_System_Threading_CancellationToken_
  commentId: M:PeerTalk.PeerConnection.ReadMessages(System.IO.Stream,System.Threading.CancellationToken)
  fullName: PeerTalk.PeerConnection.ReadMessages(System.IO.Stream, System.Threading.CancellationToken)
  nameWithType: PeerConnection.ReadMessages(Stream, CancellationToken)
- uid: PeerTalk.PeerConnection.ReadMessages(System.Threading.CancellationToken)
  name: ReadMessages(CancellationToken)
  href: api/PeerTalk.PeerConnection.html#PeerTalk_PeerConnection_ReadMessages_System_Threading_CancellationToken_
  commentId: M:PeerTalk.PeerConnection.ReadMessages(System.Threading.CancellationToken)
  fullName: PeerTalk.PeerConnection.ReadMessages(System.Threading.CancellationToken)
  nameWithType: PeerConnection.ReadMessages(CancellationToken)
- uid: PeerTalk.PeerConnection.ReadMessages*
  name: ReadMessages
  href: api/PeerTalk.PeerConnection.html#PeerTalk_PeerConnection_ReadMessages_
  commentId: Overload:PeerTalk.PeerConnection.ReadMessages
  isSpec: "True"
  fullName: PeerTalk.PeerConnection.ReadMessages
  nameWithType: PeerConnection.ReadMessages
- uid: PeerTalk.PeerConnection.RemoteAddress
  name: RemoteAddress
  href: api/PeerTalk.PeerConnection.html#PeerTalk_PeerConnection_RemoteAddress
  commentId: P:PeerTalk.PeerConnection.RemoteAddress
  fullName: PeerTalk.PeerConnection.RemoteAddress
  nameWithType: PeerConnection.RemoteAddress
- uid: PeerTalk.PeerConnection.RemoteAddress*
  name: RemoteAddress
  href: api/PeerTalk.PeerConnection.html#PeerTalk_PeerConnection_RemoteAddress_
  commentId: Overload:PeerTalk.PeerConnection.RemoteAddress
  isSpec: "True"
  fullName: PeerTalk.PeerConnection.RemoteAddress
  nameWithType: PeerConnection.RemoteAddress
- uid: PeerTalk.PeerConnection.RemotePeer
  name: RemotePeer
  href: api/PeerTalk.PeerConnection.html#PeerTalk_PeerConnection_RemotePeer
  commentId: P:PeerTalk.PeerConnection.RemotePeer
  fullName: PeerTalk.PeerConnection.RemotePeer
  nameWithType: PeerConnection.RemotePeer
- uid: PeerTalk.PeerConnection.RemotePeer*
  name: RemotePeer
  href: api/PeerTalk.PeerConnection.html#PeerTalk_PeerConnection_RemotePeer_
  commentId: Overload:PeerTalk.PeerConnection.RemotePeer
  isSpec: "True"
  fullName: PeerTalk.PeerConnection.RemotePeer
  nameWithType: PeerConnection.RemotePeer
- uid: PeerTalk.PeerConnection.SecurityEstablished
  name: SecurityEstablished
  href: api/PeerTalk.PeerConnection.html#PeerTalk_PeerConnection_SecurityEstablished
  commentId: P:PeerTalk.PeerConnection.SecurityEstablished
  fullName: PeerTalk.PeerConnection.SecurityEstablished
  nameWithType: PeerConnection.SecurityEstablished
- uid: PeerTalk.PeerConnection.SecurityEstablished*
  name: SecurityEstablished
  href: api/PeerTalk.PeerConnection.html#PeerTalk_PeerConnection_SecurityEstablished_
  commentId: Overload:PeerTalk.PeerConnection.SecurityEstablished
  isSpec: "True"
  fullName: PeerTalk.PeerConnection.SecurityEstablished
  nameWithType: PeerConnection.SecurityEstablished
- uid: PeerTalk.PeerConnection.Stream
  name: Stream
  href: api/PeerTalk.PeerConnection.html#PeerTalk_PeerConnection_Stream
  commentId: P:PeerTalk.PeerConnection.Stream
  fullName: PeerTalk.PeerConnection.Stream
  nameWithType: PeerConnection.Stream
- uid: PeerTalk.PeerConnection.Stream*
  name: Stream
  href: api/PeerTalk.PeerConnection.html#PeerTalk_PeerConnection_Stream_
  commentId: Overload:PeerTalk.PeerConnection.Stream
  isSpec: "True"
  fullName: PeerTalk.PeerConnection.Stream
  nameWithType: PeerConnection.Stream
- uid: PeerTalk.Policy`1
  name: Policy<T>
  href: api/PeerTalk.Policy-1.html
  commentId: T:PeerTalk.Policy`1
  name.vb: Policy(Of T)
  fullName: PeerTalk.Policy<T>
  fullName.vb: PeerTalk.Policy(Of T)
  nameWithType: Policy<T>
  nameWithType.vb: Policy(Of T)
- uid: PeerTalk.Policy`1.IsAllowedAsync(`0,System.Threading.CancellationToken)
  name: IsAllowedAsync(T, CancellationToken)
  href: api/PeerTalk.Policy-1.html#PeerTalk_Policy_1_IsAllowedAsync__0_System_Threading_CancellationToken_
  commentId: M:PeerTalk.Policy`1.IsAllowedAsync(`0,System.Threading.CancellationToken)
  fullName: PeerTalk.Policy<T>.IsAllowedAsync(T, System.Threading.CancellationToken)
  fullName.vb: PeerTalk.Policy(Of T).IsAllowedAsync(T, System.Threading.CancellationToken)
  nameWithType: Policy<T>.IsAllowedAsync(T, CancellationToken)
  nameWithType.vb: Policy(Of T).IsAllowedAsync(T, CancellationToken)
- uid: PeerTalk.Policy`1.IsAllowedAsync*
  name: IsAllowedAsync
  href: api/PeerTalk.Policy-1.html#PeerTalk_Policy_1_IsAllowedAsync_
  commentId: Overload:PeerTalk.Policy`1.IsAllowedAsync
  isSpec: "True"
  fullName: PeerTalk.Policy<T>.IsAllowedAsync
  fullName.vb: PeerTalk.Policy(Of T).IsAllowedAsync
  nameWithType: Policy<T>.IsAllowedAsync
  nameWithType.vb: Policy(Of T).IsAllowedAsync
- uid: PeerTalk.Policy`1.IsNotAllowedAsync(`0,System.Threading.CancellationToken)
  name: IsNotAllowedAsync(T, CancellationToken)
  href: api/PeerTalk.Policy-1.html#PeerTalk_Policy_1_IsNotAllowedAsync__0_System_Threading_CancellationToken_
  commentId: M:PeerTalk.Policy`1.IsNotAllowedAsync(`0,System.Threading.CancellationToken)
  fullName: PeerTalk.Policy<T>.IsNotAllowedAsync(T, System.Threading.CancellationToken)
  fullName.vb: PeerTalk.Policy(Of T).IsNotAllowedAsync(T, System.Threading.CancellationToken)
  nameWithType: Policy<T>.IsNotAllowedAsync(T, CancellationToken)
  nameWithType.vb: Policy(Of T).IsNotAllowedAsync(T, CancellationToken)
- uid: PeerTalk.Policy`1.IsNotAllowedAsync*
  name: IsNotAllowedAsync
  href: api/PeerTalk.Policy-1.html#PeerTalk_Policy_1_IsNotAllowedAsync_
  commentId: Overload:PeerTalk.Policy`1.IsNotAllowedAsync
  isSpec: "True"
  fullName: PeerTalk.Policy<T>.IsNotAllowedAsync
  fullName.vb: PeerTalk.Policy(Of T).IsNotAllowedAsync
  nameWithType: Policy<T>.IsNotAllowedAsync
  nameWithType.vb: Policy(Of T).IsNotAllowedAsync
- uid: PeerTalk.PolicyAlways`1
  name: PolicyAlways<T>
  href: api/PeerTalk.PolicyAlways-1.html
  commentId: T:PeerTalk.PolicyAlways`1
  name.vb: PolicyAlways(Of T)
  fullName: PeerTalk.PolicyAlways<T>
  fullName.vb: PeerTalk.PolicyAlways(Of T)
  nameWithType: PolicyAlways<T>
  nameWithType.vb: PolicyAlways(Of T)
- uid: PeerTalk.PolicyAlways`1.IsAllowedAsync(`0,System.Threading.CancellationToken)
  name: IsAllowedAsync(T, CancellationToken)
  href: api/PeerTalk.PolicyAlways-1.html#PeerTalk_PolicyAlways_1_IsAllowedAsync__0_System_Threading_CancellationToken_
  commentId: M:PeerTalk.PolicyAlways`1.IsAllowedAsync(`0,System.Threading.CancellationToken)
  fullName: PeerTalk.PolicyAlways<T>.IsAllowedAsync(T, System.Threading.CancellationToken)
  fullName.vb: PeerTalk.PolicyAlways(Of T).IsAllowedAsync(T, System.Threading.CancellationToken)
  nameWithType: PolicyAlways<T>.IsAllowedAsync(T, CancellationToken)
  nameWithType.vb: PolicyAlways(Of T).IsAllowedAsync(T, CancellationToken)
- uid: PeerTalk.PolicyAlways`1.IsAllowedAsync*
  name: IsAllowedAsync
  href: api/PeerTalk.PolicyAlways-1.html#PeerTalk_PolicyAlways_1_IsAllowedAsync_
  commentId: Overload:PeerTalk.PolicyAlways`1.IsAllowedAsync
  isSpec: "True"
  fullName: PeerTalk.PolicyAlways<T>.IsAllowedAsync
  fullName.vb: PeerTalk.PolicyAlways(Of T).IsAllowedAsync
  nameWithType: PolicyAlways<T>.IsAllowedAsync
  nameWithType.vb: PolicyAlways(Of T).IsAllowedAsync
- uid: PeerTalk.PolicyNever`1
  name: PolicyNever<T>
  href: api/PeerTalk.PolicyNever-1.html
  commentId: T:PeerTalk.PolicyNever`1
  name.vb: PolicyNever(Of T)
  fullName: PeerTalk.PolicyNever<T>
  fullName.vb: PeerTalk.PolicyNever(Of T)
  nameWithType: PolicyNever<T>
  nameWithType.vb: PolicyNever(Of T)
- uid: PeerTalk.PolicyNever`1.IsAllowedAsync(`0,System.Threading.CancellationToken)
  name: IsAllowedAsync(T, CancellationToken)
  href: api/PeerTalk.PolicyNever-1.html#PeerTalk_PolicyNever_1_IsAllowedAsync__0_System_Threading_CancellationToken_
  commentId: M:PeerTalk.PolicyNever`1.IsAllowedAsync(`0,System.Threading.CancellationToken)
  fullName: PeerTalk.PolicyNever<T>.IsAllowedAsync(T, System.Threading.CancellationToken)
  fullName.vb: PeerTalk.PolicyNever(Of T).IsAllowedAsync(T, System.Threading.CancellationToken)
  nameWithType: PolicyNever<T>.IsAllowedAsync(T, CancellationToken)
  nameWithType.vb: PolicyNever(Of T).IsAllowedAsync(T, CancellationToken)
- uid: PeerTalk.PolicyNever`1.IsAllowedAsync*
  name: IsAllowedAsync
  href: api/PeerTalk.PolicyNever-1.html#PeerTalk_PolicyNever_1_IsAllowedAsync_
  commentId: Overload:PeerTalk.PolicyNever`1.IsAllowedAsync
  isSpec: "True"
  fullName: PeerTalk.PolicyNever<T>.IsAllowedAsync
  fullName.vb: PeerTalk.PolicyNever(Of T).IsAllowedAsync
  nameWithType: PolicyNever<T>.IsAllowedAsync
  nameWithType.vb: PolicyNever(Of T).IsAllowedAsync
- uid: PeerTalk.ProtoBufHelper
  name: ProtoBufHelper
  href: api/PeerTalk.ProtoBufHelper.html
  commentId: T:PeerTalk.ProtoBufHelper
  fullName: PeerTalk.ProtoBufHelper
  nameWithType: ProtoBufHelper
- uid: PeerTalk.ProtoBufHelper.ReadMessageAsync*
  name: ReadMessageAsync
  href: api/PeerTalk.ProtoBufHelper.html#PeerTalk_ProtoBufHelper_ReadMessageAsync_
  commentId: Overload:PeerTalk.ProtoBufHelper.ReadMessageAsync
  isSpec: "True"
  fullName: PeerTalk.ProtoBufHelper.ReadMessageAsync
  nameWithType: ProtoBufHelper.ReadMessageAsync
- uid: PeerTalk.ProtoBufHelper.ReadMessageAsync``1(System.IO.Stream,System.Threading.CancellationToken)
  name: ReadMessageAsync<T>(Stream, CancellationToken)
  href: api/PeerTalk.ProtoBufHelper.html#PeerTalk_ProtoBufHelper_ReadMessageAsync__1_System_IO_Stream_System_Threading_CancellationToken_
  commentId: M:PeerTalk.ProtoBufHelper.ReadMessageAsync``1(System.IO.Stream,System.Threading.CancellationToken)
  name.vb: ReadMessageAsync(Of T)(Stream, CancellationToken)
  fullName: PeerTalk.ProtoBufHelper.ReadMessageAsync<T>(System.IO.Stream, System.Threading.CancellationToken)
  fullName.vb: PeerTalk.ProtoBufHelper.ReadMessageAsync(Of T)(System.IO.Stream, System.Threading.CancellationToken)
  nameWithType: ProtoBufHelper.ReadMessageAsync<T>(Stream, CancellationToken)
  nameWithType.vb: ProtoBufHelper.ReadMessageAsync(Of T)(Stream, CancellationToken)
- uid: PeerTalk.Protocols
  name: PeerTalk.Protocols
  href: api/PeerTalk.Protocols.html
  commentId: N:PeerTalk.Protocols
  fullName: PeerTalk.Protocols
  nameWithType: PeerTalk.Protocols
- uid: PeerTalk.Protocols.Identify1
  name: Identify1
  href: api/PeerTalk.Protocols.Identify1.html
  commentId: T:PeerTalk.Protocols.Identify1
  fullName: PeerTalk.Protocols.Identify1
  nameWithType: Identify1
- uid: PeerTalk.Protocols.Identify1.GetRemotePeer(PeerTalk.PeerConnection,System.Threading.CancellationToken)
  name: GetRemotePeer(PeerConnection, CancellationToken)
  href: api/PeerTalk.Protocols.Identify1.html#PeerTalk_Protocols_Identify1_GetRemotePeer_PeerTalk_PeerConnection_System_Threading_CancellationToken_
  commentId: M:PeerTalk.Protocols.Identify1.GetRemotePeer(PeerTalk.PeerConnection,System.Threading.CancellationToken)
  fullName: PeerTalk.Protocols.Identify1.GetRemotePeer(PeerTalk.PeerConnection, System.Threading.CancellationToken)
  nameWithType: Identify1.GetRemotePeer(PeerConnection, CancellationToken)
- uid: PeerTalk.Protocols.Identify1.GetRemotePeer*
  name: GetRemotePeer
  href: api/PeerTalk.Protocols.Identify1.html#PeerTalk_Protocols_Identify1_GetRemotePeer_
  commentId: Overload:PeerTalk.Protocols.Identify1.GetRemotePeer
  isSpec: "True"
  fullName: PeerTalk.Protocols.Identify1.GetRemotePeer
  nameWithType: Identify1.GetRemotePeer
- uid: PeerTalk.Protocols.Identify1.Name
  name: Name
  href: api/PeerTalk.Protocols.Identify1.html#PeerTalk_Protocols_Identify1_Name
  commentId: P:PeerTalk.Protocols.Identify1.Name
  fullName: PeerTalk.Protocols.Identify1.Name
  nameWithType: Identify1.Name
- uid: PeerTalk.Protocols.Identify1.Name*
  name: Name
  href: api/PeerTalk.Protocols.Identify1.html#PeerTalk_Protocols_Identify1_Name_
  commentId: Overload:PeerTalk.Protocols.Identify1.Name
  isSpec: "True"
  fullName: PeerTalk.Protocols.Identify1.Name
  nameWithType: Identify1.Name
- uid: PeerTalk.Protocols.Identify1.ProcessMessageAsync(PeerTalk.PeerConnection,System.IO.Stream,System.Threading.CancellationToken)
  name: ProcessMessageAsync(PeerConnection, Stream, CancellationToken)
  href: api/PeerTalk.Protocols.Identify1.html#PeerTalk_Protocols_Identify1_ProcessMessageAsync_PeerTalk_PeerConnection_System_IO_Stream_System_Threading_CancellationToken_
  commentId: M:PeerTalk.Protocols.Identify1.ProcessMessageAsync(PeerTalk.PeerConnection,System.IO.Stream,System.Threading.CancellationToken)
  fullName: PeerTalk.Protocols.Identify1.ProcessMessageAsync(PeerTalk.PeerConnection, System.IO.Stream, System.Threading.CancellationToken)
  nameWithType: Identify1.ProcessMessageAsync(PeerConnection, Stream, CancellationToken)
- uid: PeerTalk.Protocols.Identify1.ProcessMessageAsync*
  name: ProcessMessageAsync
  href: api/PeerTalk.Protocols.Identify1.html#PeerTalk_Protocols_Identify1_ProcessMessageAsync_
  commentId: Overload:PeerTalk.Protocols.Identify1.ProcessMessageAsync
  isSpec: "True"
  fullName: PeerTalk.Protocols.Identify1.ProcessMessageAsync
  nameWithType: Identify1.ProcessMessageAsync
- uid: PeerTalk.Protocols.Identify1.ToString
  name: ToString()
  href: api/PeerTalk.Protocols.Identify1.html#PeerTalk_Protocols_Identify1_ToString
  commentId: M:PeerTalk.Protocols.Identify1.ToString
  fullName: PeerTalk.Protocols.Identify1.ToString()
  nameWithType: Identify1.ToString()
- uid: PeerTalk.Protocols.Identify1.ToString*
  name: ToString
  href: api/PeerTalk.Protocols.Identify1.html#PeerTalk_Protocols_Identify1_ToString_
  commentId: Overload:PeerTalk.Protocols.Identify1.ToString
  isSpec: "True"
  fullName: PeerTalk.Protocols.Identify1.ToString
  nameWithType: Identify1.ToString
- uid: PeerTalk.Protocols.Identify1.Version
  name: Version
  href: api/PeerTalk.Protocols.Identify1.html#PeerTalk_Protocols_Identify1_Version
  commentId: P:PeerTalk.Protocols.Identify1.Version
  fullName: PeerTalk.Protocols.Identify1.Version
  nameWithType: Identify1.Version
- uid: PeerTalk.Protocols.Identify1.Version*
  name: Version
  href: api/PeerTalk.Protocols.Identify1.html#PeerTalk_Protocols_Identify1_Version_
  commentId: Overload:PeerTalk.Protocols.Identify1.Version
  isSpec: "True"
  fullName: PeerTalk.Protocols.Identify1.Version
  nameWithType: Identify1.Version
- uid: PeerTalk.Protocols.IEncryptionProtocol
  name: IEncryptionProtocol
  href: api/PeerTalk.Protocols.IEncryptionProtocol.html
  commentId: T:PeerTalk.Protocols.IEncryptionProtocol
  fullName: PeerTalk.Protocols.IEncryptionProtocol
  nameWithType: IEncryptionProtocol
- uid: PeerTalk.Protocols.IEncryptionProtocol.EncryptAsync(PeerTalk.PeerConnection,System.Threading.CancellationToken)
  name: EncryptAsync(PeerConnection, CancellationToken)
  href: api/PeerTalk.Protocols.IEncryptionProtocol.html#PeerTalk_Protocols_IEncryptionProtocol_EncryptAsync_PeerTalk_PeerConnection_System_Threading_CancellationToken_
  commentId: M:PeerTalk.Protocols.IEncryptionProtocol.EncryptAsync(PeerTalk.PeerConnection,System.Threading.CancellationToken)
  fullName: PeerTalk.Protocols.IEncryptionProtocol.EncryptAsync(PeerTalk.PeerConnection, System.Threading.CancellationToken)
  nameWithType: IEncryptionProtocol.EncryptAsync(PeerConnection, CancellationToken)
- uid: PeerTalk.Protocols.IEncryptionProtocol.EncryptAsync*
  name: EncryptAsync
  href: api/PeerTalk.Protocols.IEncryptionProtocol.html#PeerTalk_Protocols_IEncryptionProtocol_EncryptAsync_
  commentId: Overload:PeerTalk.Protocols.IEncryptionProtocol.EncryptAsync
  isSpec: "True"
  fullName: PeerTalk.Protocols.IEncryptionProtocol.EncryptAsync
  nameWithType: IEncryptionProtocol.EncryptAsync
- uid: PeerTalk.Protocols.IPeerProtocol
  name: IPeerProtocol
  href: api/PeerTalk.Protocols.IPeerProtocol.html
  commentId: T:PeerTalk.Protocols.IPeerProtocol
  fullName: PeerTalk.Protocols.IPeerProtocol
  nameWithType: IPeerProtocol
- uid: PeerTalk.Protocols.IPeerProtocol.Name
  name: Name
  href: api/PeerTalk.Protocols.IPeerProtocol.html#PeerTalk_Protocols_IPeerProtocol_Name
  commentId: P:PeerTalk.Protocols.IPeerProtocol.Name
  fullName: PeerTalk.Protocols.IPeerProtocol.Name
  nameWithType: IPeerProtocol.Name
- uid: PeerTalk.Protocols.IPeerProtocol.Name*
  name: Name
  href: api/PeerTalk.Protocols.IPeerProtocol.html#PeerTalk_Protocols_IPeerProtocol_Name_
  commentId: Overload:PeerTalk.Protocols.IPeerProtocol.Name
  isSpec: "True"
  fullName: PeerTalk.Protocols.IPeerProtocol.Name
  nameWithType: IPeerProtocol.Name
- uid: PeerTalk.Protocols.IPeerProtocol.ProcessMessageAsync(PeerTalk.PeerConnection,System.IO.Stream,System.Threading.CancellationToken)
  name: ProcessMessageAsync(PeerConnection, Stream, CancellationToken)
  href: api/PeerTalk.Protocols.IPeerProtocol.html#PeerTalk_Protocols_IPeerProtocol_ProcessMessageAsync_PeerTalk_PeerConnection_System_IO_Stream_System_Threading_CancellationToken_
  commentId: M:PeerTalk.Protocols.IPeerProtocol.ProcessMessageAsync(PeerTalk.PeerConnection,System.IO.Stream,System.Threading.CancellationToken)
  fullName: PeerTalk.Protocols.IPeerProtocol.ProcessMessageAsync(PeerTalk.PeerConnection, System.IO.Stream, System.Threading.CancellationToken)
  nameWithType: IPeerProtocol.ProcessMessageAsync(PeerConnection, Stream, CancellationToken)
- uid: PeerTalk.Protocols.IPeerProtocol.ProcessMessageAsync*
  name: ProcessMessageAsync
  href: api/PeerTalk.Protocols.IPeerProtocol.html#PeerTalk_Protocols_IPeerProtocol_ProcessMessageAsync_
  commentId: Overload:PeerTalk.Protocols.IPeerProtocol.ProcessMessageAsync
  isSpec: "True"
  fullName: PeerTalk.Protocols.IPeerProtocol.ProcessMessageAsync
  nameWithType: IPeerProtocol.ProcessMessageAsync
- uid: PeerTalk.Protocols.IPeerProtocol.Version
  name: Version
  href: api/PeerTalk.Protocols.IPeerProtocol.html#PeerTalk_Protocols_IPeerProtocol_Version
  commentId: P:PeerTalk.Protocols.IPeerProtocol.Version
  fullName: PeerTalk.Protocols.IPeerProtocol.Version
  nameWithType: IPeerProtocol.Version
- uid: PeerTalk.Protocols.IPeerProtocol.Version*
  name: Version
  href: api/PeerTalk.Protocols.IPeerProtocol.html#PeerTalk_Protocols_IPeerProtocol_Version_
  commentId: Overload:PeerTalk.Protocols.IPeerProtocol.Version
  isSpec: "True"
  fullName: PeerTalk.Protocols.IPeerProtocol.Version
  nameWithType: IPeerProtocol.Version
- uid: PeerTalk.Protocols.Message
  name: Message
  href: api/PeerTalk.Protocols.Message.html
  commentId: T:PeerTalk.Protocols.Message
  fullName: PeerTalk.Protocols.Message
  nameWithType: Message
- uid: PeerTalk.Protocols.Message.ReadBytesAsync(System.IO.Stream,System.Threading.CancellationToken)
  name: ReadBytesAsync(Stream, CancellationToken)
  href: api/PeerTalk.Protocols.Message.html#PeerTalk_Protocols_Message_ReadBytesAsync_System_IO_Stream_System_Threading_CancellationToken_
  commentId: M:PeerTalk.Protocols.Message.ReadBytesAsync(System.IO.Stream,System.Threading.CancellationToken)
  fullName: PeerTalk.Protocols.Message.ReadBytesAsync(System.IO.Stream, System.Threading.CancellationToken)
  nameWithType: Message.ReadBytesAsync(Stream, CancellationToken)
- uid: PeerTalk.Protocols.Message.ReadBytesAsync*
  name: ReadBytesAsync
  href: api/PeerTalk.Protocols.Message.html#PeerTalk_Protocols_Message_ReadBytesAsync_
  commentId: Overload:PeerTalk.Protocols.Message.ReadBytesAsync
  isSpec: "True"
  fullName: PeerTalk.Protocols.Message.ReadBytesAsync
  nameWithType: Message.ReadBytesAsync
- uid: PeerTalk.Protocols.Message.ReadStringAsync(System.IO.Stream,System.Threading.CancellationToken)
  name: ReadStringAsync(Stream, CancellationToken)
  href: api/PeerTalk.Protocols.Message.html#PeerTalk_Protocols_Message_ReadStringAsync_System_IO_Stream_System_Threading_CancellationToken_
  commentId: M:PeerTalk.Protocols.Message.ReadStringAsync(System.IO.Stream,System.Threading.CancellationToken)
  fullName: PeerTalk.Protocols.Message.ReadStringAsync(System.IO.Stream, System.Threading.CancellationToken)
  nameWithType: Message.ReadStringAsync(Stream, CancellationToken)
- uid: PeerTalk.Protocols.Message.ReadStringAsync*
  name: ReadStringAsync
  href: api/PeerTalk.Protocols.Message.html#PeerTalk_Protocols_Message_ReadStringAsync_
  commentId: Overload:PeerTalk.Protocols.Message.ReadStringAsync
  isSpec: "True"
  fullName: PeerTalk.Protocols.Message.ReadStringAsync
  nameWithType: Message.ReadStringAsync
- uid: PeerTalk.Protocols.Message.WriteAsync(System.String,System.IO.Stream,System.Threading.CancellationToken)
  name: WriteAsync(String, Stream, CancellationToken)
  href: api/PeerTalk.Protocols.Message.html#PeerTalk_Protocols_Message_WriteAsync_System_String_System_IO_Stream_System_Threading_CancellationToken_
  commentId: M:PeerTalk.Protocols.Message.WriteAsync(System.String,System.IO.Stream,System.Threading.CancellationToken)
  fullName: PeerTalk.Protocols.Message.WriteAsync(System.String, System.IO.Stream, System.Threading.CancellationToken)
  nameWithType: Message.WriteAsync(String, Stream, CancellationToken)
- uid: PeerTalk.Protocols.Message.WriteAsync*
  name: WriteAsync
  href: api/PeerTalk.Protocols.Message.html#PeerTalk_Protocols_Message_WriteAsync_
  commentId: Overload:PeerTalk.Protocols.Message.WriteAsync
  isSpec: "True"
  fullName: PeerTalk.Protocols.Message.WriteAsync
  nameWithType: Message.WriteAsync
- uid: PeerTalk.Protocols.Mplex67
  name: Mplex67
  href: api/PeerTalk.Protocols.Mplex67.html
  commentId: T:PeerTalk.Protocols.Mplex67
  fullName: PeerTalk.Protocols.Mplex67
  nameWithType: Mplex67
- uid: PeerTalk.Protocols.Mplex67.Name
  name: Name
  href: api/PeerTalk.Protocols.Mplex67.html#PeerTalk_Protocols_Mplex67_Name
  commentId: P:PeerTalk.Protocols.Mplex67.Name
  fullName: PeerTalk.Protocols.Mplex67.Name
  nameWithType: Mplex67.Name
- uid: PeerTalk.Protocols.Mplex67.Name*
  name: Name
  href: api/PeerTalk.Protocols.Mplex67.html#PeerTalk_Protocols_Mplex67_Name_
  commentId: Overload:PeerTalk.Protocols.Mplex67.Name
  isSpec: "True"
  fullName: PeerTalk.Protocols.Mplex67.Name
  nameWithType: Mplex67.Name
- uid: PeerTalk.Protocols.Mplex67.ProcessMessageAsync(PeerTalk.PeerConnection,System.IO.Stream,System.Threading.CancellationToken)
  name: ProcessMessageAsync(PeerConnection, Stream, CancellationToken)
  href: api/PeerTalk.Protocols.Mplex67.html#PeerTalk_Protocols_Mplex67_ProcessMessageAsync_PeerTalk_PeerConnection_System_IO_Stream_System_Threading_CancellationToken_
  commentId: M:PeerTalk.Protocols.Mplex67.ProcessMessageAsync(PeerTalk.PeerConnection,System.IO.Stream,System.Threading.CancellationToken)
  fullName: PeerTalk.Protocols.Mplex67.ProcessMessageAsync(PeerTalk.PeerConnection, System.IO.Stream, System.Threading.CancellationToken)
  nameWithType: Mplex67.ProcessMessageAsync(PeerConnection, Stream, CancellationToken)
- uid: PeerTalk.Protocols.Mplex67.ProcessMessageAsync*
  name: ProcessMessageAsync
  href: api/PeerTalk.Protocols.Mplex67.html#PeerTalk_Protocols_Mplex67_ProcessMessageAsync_
  commentId: Overload:PeerTalk.Protocols.Mplex67.ProcessMessageAsync
  isSpec: "True"
  fullName: PeerTalk.Protocols.Mplex67.ProcessMessageAsync
  nameWithType: Mplex67.ProcessMessageAsync
- uid: PeerTalk.Protocols.Mplex67.ProcessResponseAsync(PeerTalk.PeerConnection,System.Threading.CancellationToken)
  name: ProcessResponseAsync(PeerConnection, CancellationToken)
  href: api/PeerTalk.Protocols.Mplex67.html#PeerTalk_Protocols_Mplex67_ProcessResponseAsync_PeerTalk_PeerConnection_System_Threading_CancellationToken_
  commentId: M:PeerTalk.Protocols.Mplex67.ProcessResponseAsync(PeerTalk.PeerConnection,System.Threading.CancellationToken)
  fullName: PeerTalk.Protocols.Mplex67.ProcessResponseAsync(PeerTalk.PeerConnection, System.Threading.CancellationToken)
  nameWithType: Mplex67.ProcessResponseAsync(PeerConnection, CancellationToken)
- uid: PeerTalk.Protocols.Mplex67.ProcessResponseAsync*
  name: ProcessResponseAsync
  href: api/PeerTalk.Protocols.Mplex67.html#PeerTalk_Protocols_Mplex67_ProcessResponseAsync_
  commentId: Overload:PeerTalk.Protocols.Mplex67.ProcessResponseAsync
  isSpec: "True"
  fullName: PeerTalk.Protocols.Mplex67.ProcessResponseAsync
  nameWithType: Mplex67.ProcessResponseAsync
- uid: PeerTalk.Protocols.Mplex67.ToString
  name: ToString()
  href: api/PeerTalk.Protocols.Mplex67.html#PeerTalk_Protocols_Mplex67_ToString
  commentId: M:PeerTalk.Protocols.Mplex67.ToString
  fullName: PeerTalk.Protocols.Mplex67.ToString()
  nameWithType: Mplex67.ToString()
- uid: PeerTalk.Protocols.Mplex67.ToString*
  name: ToString
  href: api/PeerTalk.Protocols.Mplex67.html#PeerTalk_Protocols_Mplex67_ToString_
  commentId: Overload:PeerTalk.Protocols.Mplex67.ToString
  isSpec: "True"
  fullName: PeerTalk.Protocols.Mplex67.ToString
  nameWithType: Mplex67.ToString
- uid: PeerTalk.Protocols.Mplex67.Version
  name: Version
  href: api/PeerTalk.Protocols.Mplex67.html#PeerTalk_Protocols_Mplex67_Version
  commentId: P:PeerTalk.Protocols.Mplex67.Version
  fullName: PeerTalk.Protocols.Mplex67.Version
  nameWithType: Mplex67.Version
- uid: PeerTalk.Protocols.Mplex67.Version*
  name: Version
  href: api/PeerTalk.Protocols.Mplex67.html#PeerTalk_Protocols_Mplex67_Version_
  commentId: Overload:PeerTalk.Protocols.Mplex67.Version
  isSpec: "True"
  fullName: PeerTalk.Protocols.Mplex67.Version
  nameWithType: Mplex67.Version
- uid: PeerTalk.Protocols.Multistream1
  name: Multistream1
  href: api/PeerTalk.Protocols.Multistream1.html
  commentId: T:PeerTalk.Protocols.Multistream1
  fullName: PeerTalk.Protocols.Multistream1
  nameWithType: Multistream1
- uid: PeerTalk.Protocols.Multistream1.Name
  name: Name
  href: api/PeerTalk.Protocols.Multistream1.html#PeerTalk_Protocols_Multistream1_Name
  commentId: P:PeerTalk.Protocols.Multistream1.Name
  fullName: PeerTalk.Protocols.Multistream1.Name
  nameWithType: Multistream1.Name
- uid: PeerTalk.Protocols.Multistream1.Name*
  name: Name
  href: api/PeerTalk.Protocols.Multistream1.html#PeerTalk_Protocols_Multistream1_Name_
  commentId: Overload:PeerTalk.Protocols.Multistream1.Name
  isSpec: "True"
  fullName: PeerTalk.Protocols.Multistream1.Name
  nameWithType: Multistream1.Name
- uid: PeerTalk.Protocols.Multistream1.ProcessMessageAsync(PeerTalk.PeerConnection,System.IO.Stream,System.Threading.CancellationToken)
  name: ProcessMessageAsync(PeerConnection, Stream, CancellationToken)
  href: api/PeerTalk.Protocols.Multistream1.html#PeerTalk_Protocols_Multistream1_ProcessMessageAsync_PeerTalk_PeerConnection_System_IO_Stream_System_Threading_CancellationToken_
  commentId: M:PeerTalk.Protocols.Multistream1.ProcessMessageAsync(PeerTalk.PeerConnection,System.IO.Stream,System.Threading.CancellationToken)
  fullName: PeerTalk.Protocols.Multistream1.ProcessMessageAsync(PeerTalk.PeerConnection, System.IO.Stream, System.Threading.CancellationToken)
  nameWithType: Multistream1.ProcessMessageAsync(PeerConnection, Stream, CancellationToken)
- uid: PeerTalk.Protocols.Multistream1.ProcessMessageAsync*
  name: ProcessMessageAsync
  href: api/PeerTalk.Protocols.Multistream1.html#PeerTalk_Protocols_Multistream1_ProcessMessageAsync_
  commentId: Overload:PeerTalk.Protocols.Multistream1.ProcessMessageAsync
  isSpec: "True"
  fullName: PeerTalk.Protocols.Multistream1.ProcessMessageAsync
  nameWithType: Multistream1.ProcessMessageAsync
- uid: PeerTalk.Protocols.Multistream1.ToString
  name: ToString()
  href: api/PeerTalk.Protocols.Multistream1.html#PeerTalk_Protocols_Multistream1_ToString
  commentId: M:PeerTalk.Protocols.Multistream1.ToString
  fullName: PeerTalk.Protocols.Multistream1.ToString()
  nameWithType: Multistream1.ToString()
- uid: PeerTalk.Protocols.Multistream1.ToString*
  name: ToString
  href: api/PeerTalk.Protocols.Multistream1.html#PeerTalk_Protocols_Multistream1_ToString_
  commentId: Overload:PeerTalk.Protocols.Multistream1.ToString
  isSpec: "True"
  fullName: PeerTalk.Protocols.Multistream1.ToString
  nameWithType: Multistream1.ToString
- uid: PeerTalk.Protocols.Multistream1.Version
  name: Version
  href: api/PeerTalk.Protocols.Multistream1.html#PeerTalk_Protocols_Multistream1_Version
  commentId: P:PeerTalk.Protocols.Multistream1.Version
  fullName: PeerTalk.Protocols.Multistream1.Version
  nameWithType: Multistream1.Version
- uid: PeerTalk.Protocols.Multistream1.Version*
  name: Version
  href: api/PeerTalk.Protocols.Multistream1.html#PeerTalk_Protocols_Multistream1_Version_
  commentId: Overload:PeerTalk.Protocols.Multistream1.Version
  isSpec: "True"
  fullName: PeerTalk.Protocols.Multistream1.Version
  nameWithType: Multistream1.Version
- uid: PeerTalk.Protocols.Plaintext1
  name: Plaintext1
  href: api/PeerTalk.Protocols.Plaintext1.html
  commentId: T:PeerTalk.Protocols.Plaintext1
  fullName: PeerTalk.Protocols.Plaintext1
  nameWithType: Plaintext1
- uid: PeerTalk.Protocols.Plaintext1.EncryptAsync(PeerTalk.PeerConnection,System.Threading.CancellationToken)
  name: EncryptAsync(PeerConnection, CancellationToken)
  href: api/PeerTalk.Protocols.Plaintext1.html#PeerTalk_Protocols_Plaintext1_EncryptAsync_PeerTalk_PeerConnection_System_Threading_CancellationToken_
  commentId: M:PeerTalk.Protocols.Plaintext1.EncryptAsync(PeerTalk.PeerConnection,System.Threading.CancellationToken)
  fullName: PeerTalk.Protocols.Plaintext1.EncryptAsync(PeerTalk.PeerConnection, System.Threading.CancellationToken)
  nameWithType: Plaintext1.EncryptAsync(PeerConnection, CancellationToken)
- uid: PeerTalk.Protocols.Plaintext1.EncryptAsync*
  name: EncryptAsync
  href: api/PeerTalk.Protocols.Plaintext1.html#PeerTalk_Protocols_Plaintext1_EncryptAsync_
  commentId: Overload:PeerTalk.Protocols.Plaintext1.EncryptAsync
  isSpec: "True"
  fullName: PeerTalk.Protocols.Plaintext1.EncryptAsync
  nameWithType: Plaintext1.EncryptAsync
- uid: PeerTalk.Protocols.Plaintext1.Name
  name: Name
  href: api/PeerTalk.Protocols.Plaintext1.html#PeerTalk_Protocols_Plaintext1_Name
  commentId: P:PeerTalk.Protocols.Plaintext1.Name
  fullName: PeerTalk.Protocols.Plaintext1.Name
  nameWithType: Plaintext1.Name
- uid: PeerTalk.Protocols.Plaintext1.Name*
  name: Name
  href: api/PeerTalk.Protocols.Plaintext1.html#PeerTalk_Protocols_Plaintext1_Name_
  commentId: Overload:PeerTalk.Protocols.Plaintext1.Name
  isSpec: "True"
  fullName: PeerTalk.Protocols.Plaintext1.Name
  nameWithType: Plaintext1.Name
- uid: PeerTalk.Protocols.Plaintext1.ProcessMessageAsync(PeerTalk.PeerConnection,System.IO.Stream,System.Threading.CancellationToken)
  name: ProcessMessageAsync(PeerConnection, Stream, CancellationToken)
  href: api/PeerTalk.Protocols.Plaintext1.html#PeerTalk_Protocols_Plaintext1_ProcessMessageAsync_PeerTalk_PeerConnection_System_IO_Stream_System_Threading_CancellationToken_
  commentId: M:PeerTalk.Protocols.Plaintext1.ProcessMessageAsync(PeerTalk.PeerConnection,System.IO.Stream,System.Threading.CancellationToken)
  fullName: PeerTalk.Protocols.Plaintext1.ProcessMessageAsync(PeerTalk.PeerConnection, System.IO.Stream, System.Threading.CancellationToken)
  nameWithType: Plaintext1.ProcessMessageAsync(PeerConnection, Stream, CancellationToken)
- uid: PeerTalk.Protocols.Plaintext1.ProcessMessageAsync*
  name: ProcessMessageAsync
  href: api/PeerTalk.Protocols.Plaintext1.html#PeerTalk_Protocols_Plaintext1_ProcessMessageAsync_
  commentId: Overload:PeerTalk.Protocols.Plaintext1.ProcessMessageAsync
  isSpec: "True"
  fullName: PeerTalk.Protocols.Plaintext1.ProcessMessageAsync
  nameWithType: Plaintext1.ProcessMessageAsync
- uid: PeerTalk.Protocols.Plaintext1.ToString
  name: ToString()
  href: api/PeerTalk.Protocols.Plaintext1.html#PeerTalk_Protocols_Plaintext1_ToString
  commentId: M:PeerTalk.Protocols.Plaintext1.ToString
  fullName: PeerTalk.Protocols.Plaintext1.ToString()
  nameWithType: Plaintext1.ToString()
- uid: PeerTalk.Protocols.Plaintext1.ToString*
  name: ToString
  href: api/PeerTalk.Protocols.Plaintext1.html#PeerTalk_Protocols_Plaintext1_ToString_
  commentId: Overload:PeerTalk.Protocols.Plaintext1.ToString
  isSpec: "True"
  fullName: PeerTalk.Protocols.Plaintext1.ToString
  nameWithType: Plaintext1.ToString
- uid: PeerTalk.Protocols.Plaintext1.Version
  name: Version
  href: api/PeerTalk.Protocols.Plaintext1.html#PeerTalk_Protocols_Plaintext1_Version
  commentId: P:PeerTalk.Protocols.Plaintext1.Version
  fullName: PeerTalk.Protocols.Plaintext1.Version
  nameWithType: Plaintext1.Version
- uid: PeerTalk.Protocols.Plaintext1.Version*
  name: Version
  href: api/PeerTalk.Protocols.Plaintext1.html#PeerTalk_Protocols_Plaintext1_Version_
  commentId: Overload:PeerTalk.Protocols.Plaintext1.Version
  isSpec: "True"
  fullName: PeerTalk.Protocols.Plaintext1.Version
  nameWithType: Plaintext1.Version
- uid: PeerTalk.Protocols.ProtocolRegistry
  name: ProtocolRegistry
  href: api/PeerTalk.Protocols.ProtocolRegistry.html
  commentId: T:PeerTalk.Protocols.ProtocolRegistry
  fullName: PeerTalk.Protocols.ProtocolRegistry
  nameWithType: ProtocolRegistry
- uid: PeerTalk.Protocols.ProtocolRegistry.Deregister(System.String)
  name: Deregister(String)
  href: api/PeerTalk.Protocols.ProtocolRegistry.html#PeerTalk_Protocols_ProtocolRegistry_Deregister_System_String_
  commentId: M:PeerTalk.Protocols.ProtocolRegistry.Deregister(System.String)
  fullName: PeerTalk.Protocols.ProtocolRegistry.Deregister(System.String)
  nameWithType: ProtocolRegistry.Deregister(String)
- uid: PeerTalk.Protocols.ProtocolRegistry.Deregister*
  name: Deregister
  href: api/PeerTalk.Protocols.ProtocolRegistry.html#PeerTalk_Protocols_ProtocolRegistry_Deregister_
  commentId: Overload:PeerTalk.Protocols.ProtocolRegistry.Deregister
  isSpec: "True"
  fullName: PeerTalk.Protocols.ProtocolRegistry.Deregister
  nameWithType: ProtocolRegistry.Deregister
- uid: PeerTalk.Protocols.ProtocolRegistry.Protocols
  name: Protocols
  href: api/PeerTalk.Protocols.ProtocolRegistry.html#PeerTalk_Protocols_ProtocolRegistry_Protocols
  commentId: F:PeerTalk.Protocols.ProtocolRegistry.Protocols
  fullName: PeerTalk.Protocols.ProtocolRegistry.Protocols
  nameWithType: ProtocolRegistry.Protocols
- uid: PeerTalk.Protocols.ProtocolRegistry.Register*
  name: Register
  href: api/PeerTalk.Protocols.ProtocolRegistry.html#PeerTalk_Protocols_ProtocolRegistry_Register_
  commentId: Overload:PeerTalk.Protocols.ProtocolRegistry.Register
  isSpec: "True"
  fullName: PeerTalk.Protocols.ProtocolRegistry.Register
  nameWithType: ProtocolRegistry.Register
- uid: PeerTalk.Protocols.ProtocolRegistry.Register``1
  name: Register<T>()
  href: api/PeerTalk.Protocols.ProtocolRegistry.html#PeerTalk_Protocols_ProtocolRegistry_Register__1
  commentId: M:PeerTalk.Protocols.ProtocolRegistry.Register``1
  name.vb: Register(Of T)()
  fullName: PeerTalk.Protocols.ProtocolRegistry.Register<T>()
  fullName.vb: PeerTalk.Protocols.ProtocolRegistry.Register(Of T)()
  nameWithType: ProtocolRegistry.Register<T>()
  nameWithType.vb: ProtocolRegistry.Register(Of T)()
- uid: PeerTalk.Protocols.VersionedName
  name: VersionedName
  href: api/PeerTalk.Protocols.VersionedName.html
  commentId: T:PeerTalk.Protocols.VersionedName
  fullName: PeerTalk.Protocols.VersionedName
  nameWithType: VersionedName
- uid: PeerTalk.Protocols.VersionedName.CompareTo(PeerTalk.Protocols.VersionedName)
  name: CompareTo(VersionedName)
  href: api/PeerTalk.Protocols.VersionedName.html#PeerTalk_Protocols_VersionedName_CompareTo_PeerTalk_Protocols_VersionedName_
  commentId: M:PeerTalk.Protocols.VersionedName.CompareTo(PeerTalk.Protocols.VersionedName)
  fullName: PeerTalk.Protocols.VersionedName.CompareTo(PeerTalk.Protocols.VersionedName)
  nameWithType: VersionedName.CompareTo(VersionedName)
- uid: PeerTalk.Protocols.VersionedName.CompareTo*
  name: CompareTo
  href: api/PeerTalk.Protocols.VersionedName.html#PeerTalk_Protocols_VersionedName_CompareTo_
  commentId: Overload:PeerTalk.Protocols.VersionedName.CompareTo
  isSpec: "True"
  fullName: PeerTalk.Protocols.VersionedName.CompareTo
  nameWithType: VersionedName.CompareTo
- uid: PeerTalk.Protocols.VersionedName.Equals(PeerTalk.Protocols.VersionedName)
  name: Equals(VersionedName)
  href: api/PeerTalk.Protocols.VersionedName.html#PeerTalk_Protocols_VersionedName_Equals_PeerTalk_Protocols_VersionedName_
  commentId: M:PeerTalk.Protocols.VersionedName.Equals(PeerTalk.Protocols.VersionedName)
  fullName: PeerTalk.Protocols.VersionedName.Equals(PeerTalk.Protocols.VersionedName)
  nameWithType: VersionedName.Equals(VersionedName)
- uid: PeerTalk.Protocols.VersionedName.Equals(System.Object)
  name: Equals(Object)
  href: api/PeerTalk.Protocols.VersionedName.html#PeerTalk_Protocols_VersionedName_Equals_System_Object_
  commentId: M:PeerTalk.Protocols.VersionedName.Equals(System.Object)
  fullName: PeerTalk.Protocols.VersionedName.Equals(System.Object)
  nameWithType: VersionedName.Equals(Object)
- uid: PeerTalk.Protocols.VersionedName.Equals*
  name: Equals
  href: api/PeerTalk.Protocols.VersionedName.html#PeerTalk_Protocols_VersionedName_Equals_
  commentId: Overload:PeerTalk.Protocols.VersionedName.Equals
  isSpec: "True"
  fullName: PeerTalk.Protocols.VersionedName.Equals
  nameWithType: VersionedName.Equals
- uid: PeerTalk.Protocols.VersionedName.GetHashCode
  name: GetHashCode()
  href: api/PeerTalk.Protocols.VersionedName.html#PeerTalk_Protocols_VersionedName_GetHashCode
  commentId: M:PeerTalk.Protocols.VersionedName.GetHashCode
  fullName: PeerTalk.Protocols.VersionedName.GetHashCode()
  nameWithType: VersionedName.GetHashCode()
- uid: PeerTalk.Protocols.VersionedName.GetHashCode*
  name: GetHashCode
  href: api/PeerTalk.Protocols.VersionedName.html#PeerTalk_Protocols_VersionedName_GetHashCode_
  commentId: Overload:PeerTalk.Protocols.VersionedName.GetHashCode
  isSpec: "True"
  fullName: PeerTalk.Protocols.VersionedName.GetHashCode
  nameWithType: VersionedName.GetHashCode
- uid: PeerTalk.Protocols.VersionedName.Name
  name: Name
  href: api/PeerTalk.Protocols.VersionedName.html#PeerTalk_Protocols_VersionedName_Name
  commentId: P:PeerTalk.Protocols.VersionedName.Name
  fullName: PeerTalk.Protocols.VersionedName.Name
  nameWithType: VersionedName.Name
- uid: PeerTalk.Protocols.VersionedName.Name*
  name: Name
  href: api/PeerTalk.Protocols.VersionedName.html#PeerTalk_Protocols_VersionedName_Name_
  commentId: Overload:PeerTalk.Protocols.VersionedName.Name
  isSpec: "True"
  fullName: PeerTalk.Protocols.VersionedName.Name
  nameWithType: VersionedName.Name
- uid: PeerTalk.Protocols.VersionedName.op_Equality(PeerTalk.Protocols.VersionedName,PeerTalk.Protocols.VersionedName)
  name: Equality(VersionedName, VersionedName)
  href: api/PeerTalk.Protocols.VersionedName.html#PeerTalk_Protocols_VersionedName_op_Equality_PeerTalk_Protocols_VersionedName_PeerTalk_Protocols_VersionedName_
  commentId: M:PeerTalk.Protocols.VersionedName.op_Equality(PeerTalk.Protocols.VersionedName,PeerTalk.Protocols.VersionedName)
  fullName: PeerTalk.Protocols.VersionedName.Equality(PeerTalk.Protocols.VersionedName, PeerTalk.Protocols.VersionedName)
  nameWithType: VersionedName.Equality(VersionedName, VersionedName)
- uid: PeerTalk.Protocols.VersionedName.op_Equality*
  name: Equality
  href: api/PeerTalk.Protocols.VersionedName.html#PeerTalk_Protocols_VersionedName_op_Equality_
  commentId: Overload:PeerTalk.Protocols.VersionedName.op_Equality
  isSpec: "True"
  fullName: PeerTalk.Protocols.VersionedName.Equality
  nameWithType: VersionedName.Equality
- uid: PeerTalk.Protocols.VersionedName.op_Inequality(PeerTalk.Protocols.VersionedName,PeerTalk.Protocols.VersionedName)
  name: Inequality(VersionedName, VersionedName)
  href: api/PeerTalk.Protocols.VersionedName.html#PeerTalk_Protocols_VersionedName_op_Inequality_PeerTalk_Protocols_VersionedName_PeerTalk_Protocols_VersionedName_
  commentId: M:PeerTalk.Protocols.VersionedName.op_Inequality(PeerTalk.Protocols.VersionedName,PeerTalk.Protocols.VersionedName)
  fullName: PeerTalk.Protocols.VersionedName.Inequality(PeerTalk.Protocols.VersionedName, PeerTalk.Protocols.VersionedName)
  nameWithType: VersionedName.Inequality(VersionedName, VersionedName)
- uid: PeerTalk.Protocols.VersionedName.op_Inequality*
  name: Inequality
  href: api/PeerTalk.Protocols.VersionedName.html#PeerTalk_Protocols_VersionedName_op_Inequality_
  commentId: Overload:PeerTalk.Protocols.VersionedName.op_Inequality
  isSpec: "True"
  fullName: PeerTalk.Protocols.VersionedName.Inequality
  nameWithType: VersionedName.Inequality
- uid: PeerTalk.Protocols.VersionedName.Parse(System.String)
  name: Parse(String)
  href: api/PeerTalk.Protocols.VersionedName.html#PeerTalk_Protocols_VersionedName_Parse_System_String_
  commentId: M:PeerTalk.Protocols.VersionedName.Parse(System.String)
  fullName: PeerTalk.Protocols.VersionedName.Parse(System.String)
  nameWithType: VersionedName.Parse(String)
- uid: PeerTalk.Protocols.VersionedName.Parse*
  name: Parse
  href: api/PeerTalk.Protocols.VersionedName.html#PeerTalk_Protocols_VersionedName_Parse_
  commentId: Overload:PeerTalk.Protocols.VersionedName.Parse
  isSpec: "True"
  fullName: PeerTalk.Protocols.VersionedName.Parse
  nameWithType: VersionedName.Parse
- uid: PeerTalk.Protocols.VersionedName.ToString
  name: ToString()
  href: api/PeerTalk.Protocols.VersionedName.html#PeerTalk_Protocols_VersionedName_ToString
  commentId: M:PeerTalk.Protocols.VersionedName.ToString
  fullName: PeerTalk.Protocols.VersionedName.ToString()
  nameWithType: VersionedName.ToString()
- uid: PeerTalk.Protocols.VersionedName.ToString*
  name: ToString
  href: api/PeerTalk.Protocols.VersionedName.html#PeerTalk_Protocols_VersionedName_ToString_
  commentId: Overload:PeerTalk.Protocols.VersionedName.ToString
  isSpec: "True"
  fullName: PeerTalk.Protocols.VersionedName.ToString
  nameWithType: VersionedName.ToString
- uid: PeerTalk.Protocols.VersionedName.Version
  name: Version
  href: api/PeerTalk.Protocols.VersionedName.html#PeerTalk_Protocols_VersionedName_Version
  commentId: P:PeerTalk.Protocols.VersionedName.Version
  fullName: PeerTalk.Protocols.VersionedName.Version
  nameWithType: VersionedName.Version
- uid: PeerTalk.Protocols.VersionedName.Version*
  name: Version
  href: api/PeerTalk.Protocols.VersionedName.html#PeerTalk_Protocols_VersionedName_Version_
  commentId: Overload:PeerTalk.Protocols.VersionedName.Version
  isSpec: "True"
  fullName: PeerTalk.Protocols.VersionedName.Version
  nameWithType: VersionedName.Version
- uid: PeerTalk.Routing
  name: PeerTalk.Routing
  href: api/PeerTalk.Routing.html
  commentId: N:PeerTalk.Routing
  fullName: PeerTalk.Routing
  nameWithType: PeerTalk.Routing
- uid: PeerTalk.Routing.Dht1
  name: Dht1
  href: api/PeerTalk.Routing.Dht1.html
  commentId: T:PeerTalk.Routing.Dht1
  fullName: PeerTalk.Routing.Dht1
  nameWithType: Dht1
- uid: PeerTalk.Routing.Dht1.FindPeerAsync(Ipfs.MultiHash,System.Threading.CancellationToken)
  name: FindPeerAsync(MultiHash, CancellationToken)
  href: api/PeerTalk.Routing.Dht1.html#PeerTalk_Routing_Dht1_FindPeerAsync_Ipfs_MultiHash_System_Threading_CancellationToken_
  commentId: M:PeerTalk.Routing.Dht1.FindPeerAsync(Ipfs.MultiHash,System.Threading.CancellationToken)
  fullName: PeerTalk.Routing.Dht1.FindPeerAsync(Ipfs.MultiHash, System.Threading.CancellationToken)
  nameWithType: Dht1.FindPeerAsync(MultiHash, CancellationToken)
- uid: PeerTalk.Routing.Dht1.FindPeerAsync*
  name: FindPeerAsync
  href: api/PeerTalk.Routing.Dht1.html#PeerTalk_Routing_Dht1_FindPeerAsync_
  commentId: Overload:PeerTalk.Routing.Dht1.FindPeerAsync
  isSpec: "True"
  fullName: PeerTalk.Routing.Dht1.FindPeerAsync
  nameWithType: Dht1.FindPeerAsync
- uid: PeerTalk.Routing.Dht1.FindProvidersAsync(Ipfs.Cid,System.Int32,System.Action{Ipfs.Peer},System.Threading.CancellationToken)
  name: FindProvidersAsync(Cid, Int32, Action<Peer>, CancellationToken)
  href: api/PeerTalk.Routing.Dht1.html#PeerTalk_Routing_Dht1_FindProvidersAsync_Ipfs_Cid_System_Int32_System_Action_Ipfs_Peer__System_Threading_CancellationToken_
  commentId: M:PeerTalk.Routing.Dht1.FindProvidersAsync(Ipfs.Cid,System.Int32,System.Action{Ipfs.Peer},System.Threading.CancellationToken)
  name.vb: FindProvidersAsync(Cid, Int32, Action(Of Peer), CancellationToken)
  fullName: PeerTalk.Routing.Dht1.FindProvidersAsync(Ipfs.Cid, System.Int32, System.Action<Ipfs.Peer>, System.Threading.CancellationToken)
  fullName.vb: PeerTalk.Routing.Dht1.FindProvidersAsync(Ipfs.Cid, System.Int32, System.Action(Of Ipfs.Peer), System.Threading.CancellationToken)
  nameWithType: Dht1.FindProvidersAsync(Cid, Int32, Action<Peer>, CancellationToken)
  nameWithType.vb: Dht1.FindProvidersAsync(Cid, Int32, Action(Of Peer), CancellationToken)
- uid: PeerTalk.Routing.Dht1.FindProvidersAsync*
  name: FindProvidersAsync
  href: api/PeerTalk.Routing.Dht1.html#PeerTalk_Routing_Dht1_FindProvidersAsync_
  commentId: Overload:PeerTalk.Routing.Dht1.FindProvidersAsync
  isSpec: "True"
  fullName: PeerTalk.Routing.Dht1.FindProvidersAsync
  nameWithType: Dht1.FindProvidersAsync
- uid: PeerTalk.Routing.Dht1.Name
  name: Name
  href: api/PeerTalk.Routing.Dht1.html#PeerTalk_Routing_Dht1_Name
  commentId: P:PeerTalk.Routing.Dht1.Name
  fullName: PeerTalk.Routing.Dht1.Name
  nameWithType: Dht1.Name
- uid: PeerTalk.Routing.Dht1.Name*
  name: Name
  href: api/PeerTalk.Routing.Dht1.html#PeerTalk_Routing_Dht1_Name_
  commentId: Overload:PeerTalk.Routing.Dht1.Name
  isSpec: "True"
  fullName: PeerTalk.Routing.Dht1.Name
  nameWithType: Dht1.Name
- uid: PeerTalk.Routing.Dht1.ProcessMessageAsync(PeerTalk.PeerConnection,System.IO.Stream,System.Threading.CancellationToken)
  name: ProcessMessageAsync(PeerConnection, Stream, CancellationToken)
  href: api/PeerTalk.Routing.Dht1.html#PeerTalk_Routing_Dht1_ProcessMessageAsync_PeerTalk_PeerConnection_System_IO_Stream_System_Threading_CancellationToken_
  commentId: M:PeerTalk.Routing.Dht1.ProcessMessageAsync(PeerTalk.PeerConnection,System.IO.Stream,System.Threading.CancellationToken)
  fullName: PeerTalk.Routing.Dht1.ProcessMessageAsync(PeerTalk.PeerConnection, System.IO.Stream, System.Threading.CancellationToken)
  nameWithType: Dht1.ProcessMessageAsync(PeerConnection, Stream, CancellationToken)
- uid: PeerTalk.Routing.Dht1.ProcessMessageAsync*
  name: ProcessMessageAsync
  href: api/PeerTalk.Routing.Dht1.html#PeerTalk_Routing_Dht1_ProcessMessageAsync_
  commentId: Overload:PeerTalk.Routing.Dht1.ProcessMessageAsync
  isSpec: "True"
  fullName: PeerTalk.Routing.Dht1.ProcessMessageAsync
  nameWithType: Dht1.ProcessMessageAsync
- uid: PeerTalk.Routing.Dht1.ProvideAsync(Ipfs.Cid,System.Boolean,System.Threading.CancellationToken)
  name: ProvideAsync(Cid, Boolean, CancellationToken)
  href: api/PeerTalk.Routing.Dht1.html#PeerTalk_Routing_Dht1_ProvideAsync_Ipfs_Cid_System_Boolean_System_Threading_CancellationToken_
  commentId: M:PeerTalk.Routing.Dht1.ProvideAsync(Ipfs.Cid,System.Boolean,System.Threading.CancellationToken)
  fullName: PeerTalk.Routing.Dht1.ProvideAsync(Ipfs.Cid, System.Boolean, System.Threading.CancellationToken)
  nameWithType: Dht1.ProvideAsync(Cid, Boolean, CancellationToken)
- uid: PeerTalk.Routing.Dht1.ProvideAsync*
  name: ProvideAsync
  href: api/PeerTalk.Routing.Dht1.html#PeerTalk_Routing_Dht1_ProvideAsync_
  commentId: Overload:PeerTalk.Routing.Dht1.ProvideAsync
  isSpec: "True"
  fullName: PeerTalk.Routing.Dht1.ProvideAsync
  nameWithType: Dht1.ProvideAsync
- uid: PeerTalk.Routing.Dht1.RoutingTable
  name: RoutingTable
  href: api/PeerTalk.Routing.Dht1.html#PeerTalk_Routing_Dht1_RoutingTable
  commentId: F:PeerTalk.Routing.Dht1.RoutingTable
  fullName: PeerTalk.Routing.Dht1.RoutingTable
  nameWithType: Dht1.RoutingTable
- uid: PeerTalk.Routing.Dht1.StartAsync
  name: StartAsync()
  href: api/PeerTalk.Routing.Dht1.html#PeerTalk_Routing_Dht1_StartAsync
  commentId: M:PeerTalk.Routing.Dht1.StartAsync
  fullName: PeerTalk.Routing.Dht1.StartAsync()
  nameWithType: Dht1.StartAsync()
- uid: PeerTalk.Routing.Dht1.StartAsync*
  name: StartAsync
  href: api/PeerTalk.Routing.Dht1.html#PeerTalk_Routing_Dht1_StartAsync_
  commentId: Overload:PeerTalk.Routing.Dht1.StartAsync
  isSpec: "True"
  fullName: PeerTalk.Routing.Dht1.StartAsync
  nameWithType: Dht1.StartAsync
- uid: PeerTalk.Routing.Dht1.StopAsync
  name: StopAsync()
  href: api/PeerTalk.Routing.Dht1.html#PeerTalk_Routing_Dht1_StopAsync
  commentId: M:PeerTalk.Routing.Dht1.StopAsync
  fullName: PeerTalk.Routing.Dht1.StopAsync()
  nameWithType: Dht1.StopAsync()
- uid: PeerTalk.Routing.Dht1.StopAsync*
  name: StopAsync
  href: api/PeerTalk.Routing.Dht1.html#PeerTalk_Routing_Dht1_StopAsync_
  commentId: Overload:PeerTalk.Routing.Dht1.StopAsync
  isSpec: "True"
  fullName: PeerTalk.Routing.Dht1.StopAsync
  nameWithType: Dht1.StopAsync
- uid: PeerTalk.Routing.Dht1.Swarm
  name: Swarm
  href: api/PeerTalk.Routing.Dht1.html#PeerTalk_Routing_Dht1_Swarm
  commentId: P:PeerTalk.Routing.Dht1.Swarm
  fullName: PeerTalk.Routing.Dht1.Swarm
  nameWithType: Dht1.Swarm
- uid: PeerTalk.Routing.Dht1.Swarm*
  name: Swarm
  href: api/PeerTalk.Routing.Dht1.html#PeerTalk_Routing_Dht1_Swarm_
  commentId: Overload:PeerTalk.Routing.Dht1.Swarm
  isSpec: "True"
  fullName: PeerTalk.Routing.Dht1.Swarm
  nameWithType: Dht1.Swarm
- uid: PeerTalk.Routing.Dht1.ToString
  name: ToString()
  href: api/PeerTalk.Routing.Dht1.html#PeerTalk_Routing_Dht1_ToString
  commentId: M:PeerTalk.Routing.Dht1.ToString
  fullName: PeerTalk.Routing.Dht1.ToString()
  nameWithType: Dht1.ToString()
- uid: PeerTalk.Routing.Dht1.ToString*
  name: ToString
  href: api/PeerTalk.Routing.Dht1.html#PeerTalk_Routing_Dht1_ToString_
  commentId: Overload:PeerTalk.Routing.Dht1.ToString
  isSpec: "True"
  fullName: PeerTalk.Routing.Dht1.ToString
  nameWithType: Dht1.ToString
- uid: PeerTalk.Routing.Dht1.Version
  name: Version
  href: api/PeerTalk.Routing.Dht1.html#PeerTalk_Routing_Dht1_Version
  commentId: P:PeerTalk.Routing.Dht1.Version
  fullName: PeerTalk.Routing.Dht1.Version
  nameWithType: Dht1.Version
- uid: PeerTalk.Routing.Dht1.Version*
  name: Version
  href: api/PeerTalk.Routing.Dht1.html#PeerTalk_Routing_Dht1_Version_
  commentId: Overload:PeerTalk.Routing.Dht1.Version
  isSpec: "True"
  fullName: PeerTalk.Routing.Dht1.Version
  nameWithType: Dht1.Version
- uid: PeerTalk.Routing.DistributedQuery`1
  name: DistributedQuery<T>
  href: api/PeerTalk.Routing.DistributedQuery-1.html
  commentId: T:PeerTalk.Routing.DistributedQuery`1
  name.vb: DistributedQuery(Of T)
  fullName: PeerTalk.Routing.DistributedQuery<T>
  fullName.vb: PeerTalk.Routing.DistributedQuery(Of T)
  nameWithType: DistributedQuery<T>
  nameWithType.vb: DistributedQuery(Of T)
- uid: PeerTalk.Routing.DistributedQuery`1.AnswerObtained
  name: AnswerObtained
  href: api/PeerTalk.Routing.DistributedQuery-1.html#PeerTalk_Routing_DistributedQuery_1_AnswerObtained
  commentId: E:PeerTalk.Routing.DistributedQuery`1.AnswerObtained
  fullName: PeerTalk.Routing.DistributedQuery<T>.AnswerObtained
  fullName.vb: PeerTalk.Routing.DistributedQuery(Of T).AnswerObtained
  nameWithType: DistributedQuery<T>.AnswerObtained
  nameWithType.vb: DistributedQuery(Of T).AnswerObtained
- uid: PeerTalk.Routing.DistributedQuery`1.Answers
  name: Answers
  href: api/PeerTalk.Routing.DistributedQuery-1.html#PeerTalk_Routing_DistributedQuery_1_Answers
  commentId: P:PeerTalk.Routing.DistributedQuery`1.Answers
  fullName: PeerTalk.Routing.DistributedQuery<T>.Answers
  fullName.vb: PeerTalk.Routing.DistributedQuery(Of T).Answers
  nameWithType: DistributedQuery<T>.Answers
  nameWithType.vb: DistributedQuery(Of T).Answers
- uid: PeerTalk.Routing.DistributedQuery`1.Answers*
  name: Answers
  href: api/PeerTalk.Routing.DistributedQuery-1.html#PeerTalk_Routing_DistributedQuery_1_Answers_
  commentId: Overload:PeerTalk.Routing.DistributedQuery`1.Answers
  isSpec: "True"
  fullName: PeerTalk.Routing.DistributedQuery<T>.Answers
  fullName.vb: PeerTalk.Routing.DistributedQuery(Of T).Answers
  nameWithType: DistributedQuery<T>.Answers
  nameWithType.vb: DistributedQuery(Of T).Answers
- uid: PeerTalk.Routing.DistributedQuery`1.AnswersNeeded
  name: AnswersNeeded
  href: api/PeerTalk.Routing.DistributedQuery-1.html#PeerTalk_Routing_DistributedQuery_1_AnswersNeeded
  commentId: P:PeerTalk.Routing.DistributedQuery`1.AnswersNeeded
  fullName: PeerTalk.Routing.DistributedQuery<T>.AnswersNeeded
  fullName.vb: PeerTalk.Routing.DistributedQuery(Of T).AnswersNeeded
  nameWithType: DistributedQuery<T>.AnswersNeeded
  nameWithType.vb: DistributedQuery(Of T).AnswersNeeded
- uid: PeerTalk.Routing.DistributedQuery`1.AnswersNeeded*
  name: AnswersNeeded
  href: api/PeerTalk.Routing.DistributedQuery-1.html#PeerTalk_Routing_DistributedQuery_1_AnswersNeeded_
  commentId: Overload:PeerTalk.Routing.DistributedQuery`1.AnswersNeeded
  isSpec: "True"
  fullName: PeerTalk.Routing.DistributedQuery<T>.AnswersNeeded
  fullName.vb: PeerTalk.Routing.DistributedQuery(Of T).AnswersNeeded
  nameWithType: DistributedQuery<T>.AnswersNeeded
  nameWithType.vb: DistributedQuery(Of T).AnswersNeeded
- uid: PeerTalk.Routing.DistributedQuery`1.ConcurrencyLevel
  name: ConcurrencyLevel
  href: api/PeerTalk.Routing.DistributedQuery-1.html#PeerTalk_Routing_DistributedQuery_1_ConcurrencyLevel
  commentId: P:PeerTalk.Routing.DistributedQuery`1.ConcurrencyLevel
  fullName: PeerTalk.Routing.DistributedQuery<T>.ConcurrencyLevel
  fullName.vb: PeerTalk.Routing.DistributedQuery(Of T).ConcurrencyLevel
  nameWithType: DistributedQuery<T>.ConcurrencyLevel
  nameWithType.vb: DistributedQuery(Of T).ConcurrencyLevel
- uid: PeerTalk.Routing.DistributedQuery`1.ConcurrencyLevel*
  name: ConcurrencyLevel
  href: api/PeerTalk.Routing.DistributedQuery-1.html#PeerTalk_Routing_DistributedQuery_1_ConcurrencyLevel_
  commentId: Overload:PeerTalk.Routing.DistributedQuery`1.ConcurrencyLevel
  isSpec: "True"
  fullName: PeerTalk.Routing.DistributedQuery<T>.ConcurrencyLevel
  fullName.vb: PeerTalk.Routing.DistributedQuery(Of T).ConcurrencyLevel
  nameWithType: DistributedQuery<T>.ConcurrencyLevel
  nameWithType.vb: DistributedQuery(Of T).ConcurrencyLevel
- uid: PeerTalk.Routing.DistributedQuery`1.Dht
  name: Dht
  href: api/PeerTalk.Routing.DistributedQuery-1.html#PeerTalk_Routing_DistributedQuery_1_Dht
  commentId: P:PeerTalk.Routing.DistributedQuery`1.Dht
  fullName: PeerTalk.Routing.DistributedQuery<T>.Dht
  fullName.vb: PeerTalk.Routing.DistributedQuery(Of T).Dht
  nameWithType: DistributedQuery<T>.Dht
  nameWithType.vb: DistributedQuery(Of T).Dht
- uid: PeerTalk.Routing.DistributedQuery`1.Dht*
  name: Dht
  href: api/PeerTalk.Routing.DistributedQuery-1.html#PeerTalk_Routing_DistributedQuery_1_Dht_
  commentId: Overload:PeerTalk.Routing.DistributedQuery`1.Dht
  isSpec: "True"
  fullName: PeerTalk.Routing.DistributedQuery<T>.Dht
  fullName.vb: PeerTalk.Routing.DistributedQuery(Of T).Dht
  nameWithType: DistributedQuery<T>.Dht
  nameWithType.vb: DistributedQuery(Of T).Dht
- uid: PeerTalk.Routing.DistributedQuery`1.Id
  name: Id
  href: api/PeerTalk.Routing.DistributedQuery-1.html#PeerTalk_Routing_DistributedQuery_1_Id
  commentId: P:PeerTalk.Routing.DistributedQuery`1.Id
  fullName: PeerTalk.Routing.DistributedQuery<T>.Id
  fullName.vb: PeerTalk.Routing.DistributedQuery(Of T).Id
  nameWithType: DistributedQuery<T>.Id
  nameWithType.vb: DistributedQuery(Of T).Id
- uid: PeerTalk.Routing.DistributedQuery`1.Id*
  name: Id
  href: api/PeerTalk.Routing.DistributedQuery-1.html#PeerTalk_Routing_DistributedQuery_1_Id_
  commentId: Overload:PeerTalk.Routing.DistributedQuery`1.Id
  isSpec: "True"
  fullName: PeerTalk.Routing.DistributedQuery<T>.Id
  fullName.vb: PeerTalk.Routing.DistributedQuery(Of T).Id
  nameWithType: DistributedQuery<T>.Id
  nameWithType.vb: DistributedQuery(Of T).Id
- uid: PeerTalk.Routing.DistributedQuery`1.QueryKey
  name: QueryKey
  href: api/PeerTalk.Routing.DistributedQuery-1.html#PeerTalk_Routing_DistributedQuery_1_QueryKey
  commentId: P:PeerTalk.Routing.DistributedQuery`1.QueryKey
  fullName: PeerTalk.Routing.DistributedQuery<T>.QueryKey
  fullName.vb: PeerTalk.Routing.DistributedQuery(Of T).QueryKey
  nameWithType: DistributedQuery<T>.QueryKey
  nameWithType.vb: DistributedQuery(Of T).QueryKey
- uid: PeerTalk.Routing.DistributedQuery`1.QueryKey*
  name: QueryKey
  href: api/PeerTalk.Routing.DistributedQuery-1.html#PeerTalk_Routing_DistributedQuery_1_QueryKey_
  commentId: Overload:PeerTalk.Routing.DistributedQuery`1.QueryKey
  isSpec: "True"
  fullName: PeerTalk.Routing.DistributedQuery<T>.QueryKey
  fullName.vb: PeerTalk.Routing.DistributedQuery(Of T).QueryKey
  nameWithType: DistributedQuery<T>.QueryKey
  nameWithType.vb: DistributedQuery(Of T).QueryKey
- uid: PeerTalk.Routing.DistributedQuery`1.QueryType
  name: QueryType
  href: api/PeerTalk.Routing.DistributedQuery-1.html#PeerTalk_Routing_DistributedQuery_1_QueryType
  commentId: P:PeerTalk.Routing.DistributedQuery`1.QueryType
  fullName: PeerTalk.Routing.DistributedQuery<T>.QueryType
  fullName.vb: PeerTalk.Routing.DistributedQuery(Of T).QueryType
  nameWithType: DistributedQuery<T>.QueryType
  nameWithType.vb: DistributedQuery(Of T).QueryType
- uid: PeerTalk.Routing.DistributedQuery`1.QueryType*
  name: QueryType
  href: api/PeerTalk.Routing.DistributedQuery-1.html#PeerTalk_Routing_DistributedQuery_1_QueryType_
  commentId: Overload:PeerTalk.Routing.DistributedQuery`1.QueryType
  isSpec: "True"
  fullName: PeerTalk.Routing.DistributedQuery<T>.QueryType
  fullName.vb: PeerTalk.Routing.DistributedQuery(Of T).QueryType
  nameWithType: DistributedQuery<T>.QueryType
  nameWithType.vb: DistributedQuery(Of T).QueryType
- uid: PeerTalk.Routing.DistributedQuery`1.RunAsync(System.Threading.CancellationToken)
  name: RunAsync(CancellationToken)
  href: api/PeerTalk.Routing.DistributedQuery-1.html#PeerTalk_Routing_DistributedQuery_1_RunAsync_System_Threading_CancellationToken_
  commentId: M:PeerTalk.Routing.DistributedQuery`1.RunAsync(System.Threading.CancellationToken)
  fullName: PeerTalk.Routing.DistributedQuery<T>.RunAsync(System.Threading.CancellationToken)
  fullName.vb: PeerTalk.Routing.DistributedQuery(Of T).RunAsync(System.Threading.CancellationToken)
  nameWithType: DistributedQuery<T>.RunAsync(CancellationToken)
  nameWithType.vb: DistributedQuery(Of T).RunAsync(CancellationToken)
- uid: PeerTalk.Routing.DistributedQuery`1.RunAsync*
  name: RunAsync
  href: api/PeerTalk.Routing.DistributedQuery-1.html#PeerTalk_Routing_DistributedQuery_1_RunAsync_
  commentId: Overload:PeerTalk.Routing.DistributedQuery`1.RunAsync
  isSpec: "True"
  fullName: PeerTalk.Routing.DistributedQuery<T>.RunAsync
  fullName.vb: PeerTalk.Routing.DistributedQuery(Of T).RunAsync
  nameWithType: DistributedQuery<T>.RunAsync
  nameWithType.vb: DistributedQuery(Of T).RunAsync
- uid: PeerTalk.Routing.IContentRouting
  name: IContentRouting
  href: api/PeerTalk.Routing.IContentRouting.html
  commentId: T:PeerTalk.Routing.IContentRouting
  fullName: PeerTalk.Routing.IContentRouting
  nameWithType: IContentRouting
- uid: PeerTalk.Routing.IContentRouting.FindProvidersAsync(Ipfs.Cid,System.Int32,System.Action{Ipfs.Peer},System.Threading.CancellationToken)
  name: FindProvidersAsync(Cid, Int32, Action<Peer>, CancellationToken)
  href: api/PeerTalk.Routing.IContentRouting.html#PeerTalk_Routing_IContentRouting_FindProvidersAsync_Ipfs_Cid_System_Int32_System_Action_Ipfs_Peer__System_Threading_CancellationToken_
  commentId: M:PeerTalk.Routing.IContentRouting.FindProvidersAsync(Ipfs.Cid,System.Int32,System.Action{Ipfs.Peer},System.Threading.CancellationToken)
  name.vb: FindProvidersAsync(Cid, Int32, Action(Of Peer), CancellationToken)
  fullName: PeerTalk.Routing.IContentRouting.FindProvidersAsync(Ipfs.Cid, System.Int32, System.Action<Ipfs.Peer>, System.Threading.CancellationToken)
  fullName.vb: PeerTalk.Routing.IContentRouting.FindProvidersAsync(Ipfs.Cid, System.Int32, System.Action(Of Ipfs.Peer), System.Threading.CancellationToken)
  nameWithType: IContentRouting.FindProvidersAsync(Cid, Int32, Action<Peer>, CancellationToken)
  nameWithType.vb: IContentRouting.FindProvidersAsync(Cid, Int32, Action(Of Peer), CancellationToken)
- uid: PeerTalk.Routing.IContentRouting.FindProvidersAsync*
  name: FindProvidersAsync
  href: api/PeerTalk.Routing.IContentRouting.html#PeerTalk_Routing_IContentRouting_FindProvidersAsync_
  commentId: Overload:PeerTalk.Routing.IContentRouting.FindProvidersAsync
  isSpec: "True"
  fullName: PeerTalk.Routing.IContentRouting.FindProvidersAsync
  nameWithType: IContentRouting.FindProvidersAsync
- uid: PeerTalk.Routing.IContentRouting.ProvideAsync(Ipfs.Cid,System.Boolean,System.Threading.CancellationToken)
  name: ProvideAsync(Cid, Boolean, CancellationToken)
  href: api/PeerTalk.Routing.IContentRouting.html#PeerTalk_Routing_IContentRouting_ProvideAsync_Ipfs_Cid_System_Boolean_System_Threading_CancellationToken_
  commentId: M:PeerTalk.Routing.IContentRouting.ProvideAsync(Ipfs.Cid,System.Boolean,System.Threading.CancellationToken)
  fullName: PeerTalk.Routing.IContentRouting.ProvideAsync(Ipfs.Cid, System.Boolean, System.Threading.CancellationToken)
  nameWithType: IContentRouting.ProvideAsync(Cid, Boolean, CancellationToken)
- uid: PeerTalk.Routing.IContentRouting.ProvideAsync*
  name: ProvideAsync
  href: api/PeerTalk.Routing.IContentRouting.html#PeerTalk_Routing_IContentRouting_ProvideAsync_
  commentId: Overload:PeerTalk.Routing.IContentRouting.ProvideAsync
  isSpec: "True"
  fullName: PeerTalk.Routing.IContentRouting.ProvideAsync
  nameWithType: IContentRouting.ProvideAsync
- uid: PeerTalk.Routing.IPeerRouting
  name: IPeerRouting
  href: api/PeerTalk.Routing.IPeerRouting.html
  commentId: T:PeerTalk.Routing.IPeerRouting
  fullName: PeerTalk.Routing.IPeerRouting
  nameWithType: IPeerRouting
- uid: PeerTalk.Routing.IPeerRouting.FindPeerAsync(Ipfs.MultiHash,System.Threading.CancellationToken)
  name: FindPeerAsync(MultiHash, CancellationToken)
  href: api/PeerTalk.Routing.IPeerRouting.html#PeerTalk_Routing_IPeerRouting_FindPeerAsync_Ipfs_MultiHash_System_Threading_CancellationToken_
  commentId: M:PeerTalk.Routing.IPeerRouting.FindPeerAsync(Ipfs.MultiHash,System.Threading.CancellationToken)
  fullName: PeerTalk.Routing.IPeerRouting.FindPeerAsync(Ipfs.MultiHash, System.Threading.CancellationToken)
  nameWithType: IPeerRouting.FindPeerAsync(MultiHash, CancellationToken)
- uid: PeerTalk.Routing.IPeerRouting.FindPeerAsync*
  name: FindPeerAsync
  href: api/PeerTalk.Routing.IPeerRouting.html#PeerTalk_Routing_IPeerRouting_FindPeerAsync_
  commentId: Overload:PeerTalk.Routing.IPeerRouting.FindPeerAsync
  isSpec: "True"
  fullName: PeerTalk.Routing.IPeerRouting.FindPeerAsync
  nameWithType: IPeerRouting.FindPeerAsync
- uid: PeerTalk.Routing.MessageType
  name: MessageType
  href: api/PeerTalk.Routing.MessageType.html
  commentId: T:PeerTalk.Routing.MessageType
  fullName: PeerTalk.Routing.MessageType
  nameWithType: MessageType
- uid: PeerTalk.Routing.MessageType.AddProvider
  name: AddProvider
  href: api/PeerTalk.Routing.MessageType.html#PeerTalk_Routing_MessageType_AddProvider
  commentId: F:PeerTalk.Routing.MessageType.AddProvider
  fullName: PeerTalk.Routing.MessageType.AddProvider
  nameWithType: MessageType.AddProvider
- uid: PeerTalk.Routing.MessageType.FindNode
  name: FindNode
  href: api/PeerTalk.Routing.MessageType.html#PeerTalk_Routing_MessageType_FindNode
  commentId: F:PeerTalk.Routing.MessageType.FindNode
  fullName: PeerTalk.Routing.MessageType.FindNode
  nameWithType: MessageType.FindNode
- uid: PeerTalk.Routing.MessageType.GetProviders
  name: GetProviders
  href: api/PeerTalk.Routing.MessageType.html#PeerTalk_Routing_MessageType_GetProviders
  commentId: F:PeerTalk.Routing.MessageType.GetProviders
  fullName: PeerTalk.Routing.MessageType.GetProviders
  nameWithType: MessageType.GetProviders
- uid: PeerTalk.Routing.MessageType.GetValue
  name: GetValue
  href: api/PeerTalk.Routing.MessageType.html#PeerTalk_Routing_MessageType_GetValue
  commentId: F:PeerTalk.Routing.MessageType.GetValue
  fullName: PeerTalk.Routing.MessageType.GetValue
  nameWithType: MessageType.GetValue
- uid: PeerTalk.Routing.MessageType.Ping
  name: Ping
  href: api/PeerTalk.Routing.MessageType.html#PeerTalk_Routing_MessageType_Ping
  commentId: F:PeerTalk.Routing.MessageType.Ping
  fullName: PeerTalk.Routing.MessageType.Ping
  nameWithType: MessageType.Ping
- uid: PeerTalk.Routing.MessageType.PutValue
  name: PutValue
  href: api/PeerTalk.Routing.MessageType.html#PeerTalk_Routing_MessageType_PutValue
  commentId: F:PeerTalk.Routing.MessageType.PutValue
  fullName: PeerTalk.Routing.MessageType.PutValue
  nameWithType: MessageType.PutValue
- uid: PeerTalk.Routing.RoutingTable
  name: RoutingTable
  href: api/PeerTalk.Routing.RoutingTable.html
  commentId: T:PeerTalk.Routing.RoutingTable
  fullName: PeerTalk.Routing.RoutingTable
  nameWithType: RoutingTable
- uid: PeerTalk.Routing.RoutingTable.#ctor(Ipfs.Peer)
  name: RoutingTable(Peer)
  href: api/PeerTalk.Routing.RoutingTable.html#PeerTalk_Routing_RoutingTable__ctor_Ipfs_Peer_
  commentId: M:PeerTalk.Routing.RoutingTable.#ctor(Ipfs.Peer)
  fullName: PeerTalk.Routing.RoutingTable.RoutingTable(Ipfs.Peer)
  nameWithType: RoutingTable.RoutingTable(Peer)
- uid: PeerTalk.Routing.RoutingTable.#ctor*
  name: RoutingTable
  href: api/PeerTalk.Routing.RoutingTable.html#PeerTalk_Routing_RoutingTable__ctor_
  commentId: Overload:PeerTalk.Routing.RoutingTable.#ctor
  isSpec: "True"
  fullName: PeerTalk.Routing.RoutingTable.RoutingTable
  nameWithType: RoutingTable.RoutingTable
- uid: PeerTalk.Routing.RoutingTable.Add(Ipfs.Peer)
  name: Add(Peer)
  href: api/PeerTalk.Routing.RoutingTable.html#PeerTalk_Routing_RoutingTable_Add_Ipfs_Peer_
  commentId: M:PeerTalk.Routing.RoutingTable.Add(Ipfs.Peer)
  fullName: PeerTalk.Routing.RoutingTable.Add(Ipfs.Peer)
  nameWithType: RoutingTable.Add(Peer)
- uid: PeerTalk.Routing.RoutingTable.Add*
  name: Add
  href: api/PeerTalk.Routing.RoutingTable.html#PeerTalk_Routing_RoutingTable_Add_
  commentId: Overload:PeerTalk.Routing.RoutingTable.Add
  isSpec: "True"
  fullName: PeerTalk.Routing.RoutingTable.Add
  nameWithType: RoutingTable.Add
- uid: PeerTalk.Routing.RoutingTable.Contains(Ipfs.Peer)
  name: Contains(Peer)
  href: api/PeerTalk.Routing.RoutingTable.html#PeerTalk_Routing_RoutingTable_Contains_Ipfs_Peer_
  commentId: M:PeerTalk.Routing.RoutingTable.Contains(Ipfs.Peer)
  fullName: PeerTalk.Routing.RoutingTable.Contains(Ipfs.Peer)
  nameWithType: RoutingTable.Contains(Peer)
- uid: PeerTalk.Routing.RoutingTable.Contains*
  name: Contains
  href: api/PeerTalk.Routing.RoutingTable.html#PeerTalk_Routing_RoutingTable_Contains_
  commentId: Overload:PeerTalk.Routing.RoutingTable.Contains
  isSpec: "True"
  fullName: PeerTalk.Routing.RoutingTable.Contains
  nameWithType: RoutingTable.Contains
- uid: PeerTalk.Routing.RoutingTable.Key(Ipfs.MultiHash)
  name: Key(MultiHash)
  href: api/PeerTalk.Routing.RoutingTable.html#PeerTalk_Routing_RoutingTable_Key_Ipfs_MultiHash_
  commentId: M:PeerTalk.Routing.RoutingTable.Key(Ipfs.MultiHash)
  fullName: PeerTalk.Routing.RoutingTable.Key(Ipfs.MultiHash)
  nameWithType: RoutingTable.Key(MultiHash)
- uid: PeerTalk.Routing.RoutingTable.Key*
  name: Key
  href: api/PeerTalk.Routing.RoutingTable.html#PeerTalk_Routing_RoutingTable_Key_
  commentId: Overload:PeerTalk.Routing.RoutingTable.Key
  isSpec: "True"
  fullName: PeerTalk.Routing.RoutingTable.Key
  nameWithType: RoutingTable.Key
- uid: PeerTalk.Routing.RoutingTable.NearestPeers(Ipfs.MultiHash)
  name: NearestPeers(MultiHash)
  href: api/PeerTalk.Routing.RoutingTable.html#PeerTalk_Routing_RoutingTable_NearestPeers_Ipfs_MultiHash_
  commentId: M:PeerTalk.Routing.RoutingTable.NearestPeers(Ipfs.MultiHash)
  fullName: PeerTalk.Routing.RoutingTable.NearestPeers(Ipfs.MultiHash)
  nameWithType: RoutingTable.NearestPeers(MultiHash)
- uid: PeerTalk.Routing.RoutingTable.NearestPeers*
  name: NearestPeers
  href: api/PeerTalk.Routing.RoutingTable.html#PeerTalk_Routing_RoutingTable_NearestPeers_
  commentId: Overload:PeerTalk.Routing.RoutingTable.NearestPeers
  isSpec: "True"
  fullName: PeerTalk.Routing.RoutingTable.NearestPeers
  nameWithType: RoutingTable.NearestPeers
- uid: PeerTalk.Routing.RoutingTable.Remove(Ipfs.Peer)
  name: Remove(Peer)
  href: api/PeerTalk.Routing.RoutingTable.html#PeerTalk_Routing_RoutingTable_Remove_Ipfs_Peer_
  commentId: M:PeerTalk.Routing.RoutingTable.Remove(Ipfs.Peer)
  fullName: PeerTalk.Routing.RoutingTable.Remove(Ipfs.Peer)
  nameWithType: RoutingTable.Remove(Peer)
- uid: PeerTalk.Routing.RoutingTable.Remove*
  name: Remove
  href: api/PeerTalk.Routing.RoutingTable.html#PeerTalk_Routing_RoutingTable_Remove_
  commentId: Overload:PeerTalk.Routing.RoutingTable.Remove
  isSpec: "True"
  fullName: PeerTalk.Routing.RoutingTable.Remove
  nameWithType: RoutingTable.Remove
- uid: PeerTalk.SecureCommunication
  name: PeerTalk.SecureCommunication
  href: api/PeerTalk.SecureCommunication.html
  commentId: N:PeerTalk.SecureCommunication
  fullName: PeerTalk.SecureCommunication
  nameWithType: PeerTalk.SecureCommunication
- uid: PeerTalk.SecureCommunication.Secio1
  name: Secio1
  href: api/PeerTalk.SecureCommunication.Secio1.html
  commentId: T:PeerTalk.SecureCommunication.Secio1
  fullName: PeerTalk.SecureCommunication.Secio1
  nameWithType: Secio1
- uid: PeerTalk.SecureCommunication.Secio1.EncryptAsync(PeerTalk.PeerConnection,System.Threading.CancellationToken)
  name: EncryptAsync(PeerConnection, CancellationToken)
  href: api/PeerTalk.SecureCommunication.Secio1.html#PeerTalk_SecureCommunication_Secio1_EncryptAsync_PeerTalk_PeerConnection_System_Threading_CancellationToken_
  commentId: M:PeerTalk.SecureCommunication.Secio1.EncryptAsync(PeerTalk.PeerConnection,System.Threading.CancellationToken)
  fullName: PeerTalk.SecureCommunication.Secio1.EncryptAsync(PeerTalk.PeerConnection, System.Threading.CancellationToken)
  nameWithType: Secio1.EncryptAsync(PeerConnection, CancellationToken)
- uid: PeerTalk.SecureCommunication.Secio1.EncryptAsync*
  name: EncryptAsync
  href: api/PeerTalk.SecureCommunication.Secio1.html#PeerTalk_SecureCommunication_Secio1_EncryptAsync_
  commentId: Overload:PeerTalk.SecureCommunication.Secio1.EncryptAsync
  isSpec: "True"
  fullName: PeerTalk.SecureCommunication.Secio1.EncryptAsync
  nameWithType: Secio1.EncryptAsync
- uid: PeerTalk.SecureCommunication.Secio1.Name
  name: Name
  href: api/PeerTalk.SecureCommunication.Secio1.html#PeerTalk_SecureCommunication_Secio1_Name
  commentId: P:PeerTalk.SecureCommunication.Secio1.Name
  fullName: PeerTalk.SecureCommunication.Secio1.Name
  nameWithType: Secio1.Name
- uid: PeerTalk.SecureCommunication.Secio1.Name*
  name: Name
  href: api/PeerTalk.SecureCommunication.Secio1.html#PeerTalk_SecureCommunication_Secio1_Name_
  commentId: Overload:PeerTalk.SecureCommunication.Secio1.Name
  isSpec: "True"
  fullName: PeerTalk.SecureCommunication.Secio1.Name
  nameWithType: Secio1.Name
- uid: PeerTalk.SecureCommunication.Secio1.ProcessMessageAsync(PeerTalk.PeerConnection,System.IO.Stream,System.Threading.CancellationToken)
  name: ProcessMessageAsync(PeerConnection, Stream, CancellationToken)
  href: api/PeerTalk.SecureCommunication.Secio1.html#PeerTalk_SecureCommunication_Secio1_ProcessMessageAsync_PeerTalk_PeerConnection_System_IO_Stream_System_Threading_CancellationToken_
  commentId: M:PeerTalk.SecureCommunication.Secio1.ProcessMessageAsync(PeerTalk.PeerConnection,System.IO.Stream,System.Threading.CancellationToken)
  fullName: PeerTalk.SecureCommunication.Secio1.ProcessMessageAsync(PeerTalk.PeerConnection, System.IO.Stream, System.Threading.CancellationToken)
  nameWithType: Secio1.ProcessMessageAsync(PeerConnection, Stream, CancellationToken)
- uid: PeerTalk.SecureCommunication.Secio1.ProcessMessageAsync*
  name: ProcessMessageAsync
  href: api/PeerTalk.SecureCommunication.Secio1.html#PeerTalk_SecureCommunication_Secio1_ProcessMessageAsync_
  commentId: Overload:PeerTalk.SecureCommunication.Secio1.ProcessMessageAsync
  isSpec: "True"
  fullName: PeerTalk.SecureCommunication.Secio1.ProcessMessageAsync
  nameWithType: Secio1.ProcessMessageAsync
- uid: PeerTalk.SecureCommunication.Secio1.ToString
  name: ToString()
  href: api/PeerTalk.SecureCommunication.Secio1.html#PeerTalk_SecureCommunication_Secio1_ToString
  commentId: M:PeerTalk.SecureCommunication.Secio1.ToString
  fullName: PeerTalk.SecureCommunication.Secio1.ToString()
  nameWithType: Secio1.ToString()
- uid: PeerTalk.SecureCommunication.Secio1.ToString*
  name: ToString
  href: api/PeerTalk.SecureCommunication.Secio1.html#PeerTalk_SecureCommunication_Secio1_ToString_
  commentId: Overload:PeerTalk.SecureCommunication.Secio1.ToString
  isSpec: "True"
  fullName: PeerTalk.SecureCommunication.Secio1.ToString
  nameWithType: Secio1.ToString
- uid: PeerTalk.SecureCommunication.Secio1.Version
  name: Version
  href: api/PeerTalk.SecureCommunication.Secio1.html#PeerTalk_SecureCommunication_Secio1_Version
  commentId: P:PeerTalk.SecureCommunication.Secio1.Version
  fullName: PeerTalk.SecureCommunication.Secio1.Version
  nameWithType: Secio1.Version
- uid: PeerTalk.SecureCommunication.Secio1.Version*
  name: Version
  href: api/PeerTalk.SecureCommunication.Secio1.html#PeerTalk_SecureCommunication_Secio1_Version_
  commentId: Overload:PeerTalk.SecureCommunication.Secio1.Version
  isSpec: "True"
  fullName: PeerTalk.SecureCommunication.Secio1.Version
  nameWithType: Secio1.Version
- uid: PeerTalk.SecureCommunication.Secio1Stream
  name: Secio1Stream
  href: api/PeerTalk.SecureCommunication.Secio1Stream.html
  commentId: T:PeerTalk.SecureCommunication.Secio1Stream
  fullName: PeerTalk.SecureCommunication.Secio1Stream
  nameWithType: Secio1Stream
- uid: PeerTalk.SecureCommunication.Secio1Stream.#ctor(System.IO.Stream,System.String,System.String,PeerTalk.Cryptography.StretchedKey,PeerTalk.Cryptography.StretchedKey)
  name: Secio1Stream(Stream, String, String, StretchedKey, StretchedKey)
  href: api/PeerTalk.SecureCommunication.Secio1Stream.html#PeerTalk_SecureCommunication_Secio1Stream__ctor_System_IO_Stream_System_String_System_String_PeerTalk_Cryptography_StretchedKey_PeerTalk_Cryptography_StretchedKey_
  commentId: M:PeerTalk.SecureCommunication.Secio1Stream.#ctor(System.IO.Stream,System.String,System.String,PeerTalk.Cryptography.StretchedKey,PeerTalk.Cryptography.StretchedKey)
  fullName: PeerTalk.SecureCommunication.Secio1Stream.Secio1Stream(System.IO.Stream, System.String, System.String, PeerTalk.Cryptography.StretchedKey, PeerTalk.Cryptography.StretchedKey)
  nameWithType: Secio1Stream.Secio1Stream(Stream, String, String, StretchedKey, StretchedKey)
- uid: PeerTalk.SecureCommunication.Secio1Stream.#ctor*
  name: Secio1Stream
  href: api/PeerTalk.SecureCommunication.Secio1Stream.html#PeerTalk_SecureCommunication_Secio1Stream__ctor_
  commentId: Overload:PeerTalk.SecureCommunication.Secio1Stream.#ctor
  isSpec: "True"
  fullName: PeerTalk.SecureCommunication.Secio1Stream.Secio1Stream
  nameWithType: Secio1Stream.Secio1Stream
- uid: PeerTalk.SecureCommunication.Secio1Stream.CanRead
  name: CanRead
  href: api/PeerTalk.SecureCommunication.Secio1Stream.html#PeerTalk_SecureCommunication_Secio1Stream_CanRead
  commentId: P:PeerTalk.SecureCommunication.Secio1Stream.CanRead
  fullName: PeerTalk.SecureCommunication.Secio1Stream.CanRead
  nameWithType: Secio1Stream.CanRead
- uid: PeerTalk.SecureCommunication.Secio1Stream.CanRead*
  name: CanRead
  href: api/PeerTalk.SecureCommunication.Secio1Stream.html#PeerTalk_SecureCommunication_Secio1Stream_CanRead_
  commentId: Overload:PeerTalk.SecureCommunication.Secio1Stream.CanRead
  isSpec: "True"
  fullName: PeerTalk.SecureCommunication.Secio1Stream.CanRead
  nameWithType: Secio1Stream.CanRead
- uid: PeerTalk.SecureCommunication.Secio1Stream.CanSeek
  name: CanSeek
  href: api/PeerTalk.SecureCommunication.Secio1Stream.html#PeerTalk_SecureCommunication_Secio1Stream_CanSeek
  commentId: P:PeerTalk.SecureCommunication.Secio1Stream.CanSeek
  fullName: PeerTalk.SecureCommunication.Secio1Stream.CanSeek
  nameWithType: Secio1Stream.CanSeek
- uid: PeerTalk.SecureCommunication.Secio1Stream.CanSeek*
  name: CanSeek
  href: api/PeerTalk.SecureCommunication.Secio1Stream.html#PeerTalk_SecureCommunication_Secio1Stream_CanSeek_
  commentId: Overload:PeerTalk.SecureCommunication.Secio1Stream.CanSeek
  isSpec: "True"
  fullName: PeerTalk.SecureCommunication.Secio1Stream.CanSeek
  nameWithType: Secio1Stream.CanSeek
- uid: PeerTalk.SecureCommunication.Secio1Stream.CanTimeout
  name: CanTimeout
  href: api/PeerTalk.SecureCommunication.Secio1Stream.html#PeerTalk_SecureCommunication_Secio1Stream_CanTimeout
  commentId: P:PeerTalk.SecureCommunication.Secio1Stream.CanTimeout
  fullName: PeerTalk.SecureCommunication.Secio1Stream.CanTimeout
  nameWithType: Secio1Stream.CanTimeout
- uid: PeerTalk.SecureCommunication.Secio1Stream.CanTimeout*
  name: CanTimeout
  href: api/PeerTalk.SecureCommunication.Secio1Stream.html#PeerTalk_SecureCommunication_Secio1Stream_CanTimeout_
  commentId: Overload:PeerTalk.SecureCommunication.Secio1Stream.CanTimeout
  isSpec: "True"
  fullName: PeerTalk.SecureCommunication.Secio1Stream.CanTimeout
  nameWithType: Secio1Stream.CanTimeout
- uid: PeerTalk.SecureCommunication.Secio1Stream.CanWrite
  name: CanWrite
  href: api/PeerTalk.SecureCommunication.Secio1Stream.html#PeerTalk_SecureCommunication_Secio1Stream_CanWrite
  commentId: P:PeerTalk.SecureCommunication.Secio1Stream.CanWrite
  fullName: PeerTalk.SecureCommunication.Secio1Stream.CanWrite
  nameWithType: Secio1Stream.CanWrite
- uid: PeerTalk.SecureCommunication.Secio1Stream.CanWrite*
  name: CanWrite
  href: api/PeerTalk.SecureCommunication.Secio1Stream.html#PeerTalk_SecureCommunication_Secio1Stream_CanWrite_
  commentId: Overload:PeerTalk.SecureCommunication.Secio1Stream.CanWrite
  isSpec: "True"
  fullName: PeerTalk.SecureCommunication.Secio1Stream.CanWrite
  nameWithType: Secio1Stream.CanWrite
- uid: PeerTalk.SecureCommunication.Secio1Stream.Dispose(System.Boolean)
  name: Dispose(Boolean)
  href: api/PeerTalk.SecureCommunication.Secio1Stream.html#PeerTalk_SecureCommunication_Secio1Stream_Dispose_System_Boolean_
  commentId: M:PeerTalk.SecureCommunication.Secio1Stream.Dispose(System.Boolean)
  fullName: PeerTalk.SecureCommunication.Secio1Stream.Dispose(System.Boolean)
  nameWithType: Secio1Stream.Dispose(Boolean)
- uid: PeerTalk.SecureCommunication.Secio1Stream.Dispose*
  name: Dispose
  href: api/PeerTalk.SecureCommunication.Secio1Stream.html#PeerTalk_SecureCommunication_Secio1Stream_Dispose_
  commentId: Overload:PeerTalk.SecureCommunication.Secio1Stream.Dispose
  isSpec: "True"
  fullName: PeerTalk.SecureCommunication.Secio1Stream.Dispose
  nameWithType: Secio1Stream.Dispose
- uid: PeerTalk.SecureCommunication.Secio1Stream.Flush
  name: Flush()
  href: api/PeerTalk.SecureCommunication.Secio1Stream.html#PeerTalk_SecureCommunication_Secio1Stream_Flush
  commentId: M:PeerTalk.SecureCommunication.Secio1Stream.Flush
  fullName: PeerTalk.SecureCommunication.Secio1Stream.Flush()
  nameWithType: Secio1Stream.Flush()
- uid: PeerTalk.SecureCommunication.Secio1Stream.Flush*
  name: Flush
  href: api/PeerTalk.SecureCommunication.Secio1Stream.html#PeerTalk_SecureCommunication_Secio1Stream_Flush_
  commentId: Overload:PeerTalk.SecureCommunication.Secio1Stream.Flush
  isSpec: "True"
  fullName: PeerTalk.SecureCommunication.Secio1Stream.Flush
  nameWithType: Secio1Stream.Flush
- uid: PeerTalk.SecureCommunication.Secio1Stream.FlushAsync(System.Threading.CancellationToken)
  name: FlushAsync(CancellationToken)
  href: api/PeerTalk.SecureCommunication.Secio1Stream.html#PeerTalk_SecureCommunication_Secio1Stream_FlushAsync_System_Threading_CancellationToken_
  commentId: M:PeerTalk.SecureCommunication.Secio1Stream.FlushAsync(System.Threading.CancellationToken)
  fullName: PeerTalk.SecureCommunication.Secio1Stream.FlushAsync(System.Threading.CancellationToken)
  nameWithType: Secio1Stream.FlushAsync(CancellationToken)
- uid: PeerTalk.SecureCommunication.Secio1Stream.FlushAsync*
  name: FlushAsync
  href: api/PeerTalk.SecureCommunication.Secio1Stream.html#PeerTalk_SecureCommunication_Secio1Stream_FlushAsync_
  commentId: Overload:PeerTalk.SecureCommunication.Secio1Stream.FlushAsync
  isSpec: "True"
  fullName: PeerTalk.SecureCommunication.Secio1Stream.FlushAsync
  nameWithType: Secio1Stream.FlushAsync
- uid: PeerTalk.SecureCommunication.Secio1Stream.Length
  name: Length
  href: api/PeerTalk.SecureCommunication.Secio1Stream.html#PeerTalk_SecureCommunication_Secio1Stream_Length
  commentId: P:PeerTalk.SecureCommunication.Secio1Stream.Length
  fullName: PeerTalk.SecureCommunication.Secio1Stream.Length
  nameWithType: Secio1Stream.Length
- uid: PeerTalk.SecureCommunication.Secio1Stream.Length*
  name: Length
  href: api/PeerTalk.SecureCommunication.Secio1Stream.html#PeerTalk_SecureCommunication_Secio1Stream_Length_
  commentId: Overload:PeerTalk.SecureCommunication.Secio1Stream.Length
  isSpec: "True"
  fullName: PeerTalk.SecureCommunication.Secio1Stream.Length
  nameWithType: Secio1Stream.Length
- uid: PeerTalk.SecureCommunication.Secio1Stream.Position
  name: Position
  href: api/PeerTalk.SecureCommunication.Secio1Stream.html#PeerTalk_SecureCommunication_Secio1Stream_Position
  commentId: P:PeerTalk.SecureCommunication.Secio1Stream.Position
  fullName: PeerTalk.SecureCommunication.Secio1Stream.Position
  nameWithType: Secio1Stream.Position
- uid: PeerTalk.SecureCommunication.Secio1Stream.Position*
  name: Position
  href: api/PeerTalk.SecureCommunication.Secio1Stream.html#PeerTalk_SecureCommunication_Secio1Stream_Position_
  commentId: Overload:PeerTalk.SecureCommunication.Secio1Stream.Position
  isSpec: "True"
  fullName: PeerTalk.SecureCommunication.Secio1Stream.Position
  nameWithType: Secio1Stream.Position
- uid: PeerTalk.SecureCommunication.Secio1Stream.Read(System.Byte[],System.Int32,System.Int32)
  name: Read(Byte[], Int32, Int32)
  href: api/PeerTalk.SecureCommunication.Secio1Stream.html#PeerTalk_SecureCommunication_Secio1Stream_Read_System_Byte___System_Int32_System_Int32_
  commentId: M:PeerTalk.SecureCommunication.Secio1Stream.Read(System.Byte[],System.Int32,System.Int32)
  name.vb: Read(Byte(), Int32, Int32)
  fullName: PeerTalk.SecureCommunication.Secio1Stream.Read(System.Byte[], System.Int32, System.Int32)
  fullName.vb: PeerTalk.SecureCommunication.Secio1Stream.Read(System.Byte(), System.Int32, System.Int32)
  nameWithType: Secio1Stream.Read(Byte[], Int32, Int32)
  nameWithType.vb: Secio1Stream.Read(Byte(), Int32, Int32)
- uid: PeerTalk.SecureCommunication.Secio1Stream.Read*
  name: Read
  href: api/PeerTalk.SecureCommunication.Secio1Stream.html#PeerTalk_SecureCommunication_Secio1Stream_Read_
  commentId: Overload:PeerTalk.SecureCommunication.Secio1Stream.Read
  isSpec: "True"
  fullName: PeerTalk.SecureCommunication.Secio1Stream.Read
  nameWithType: Secio1Stream.Read
- uid: PeerTalk.SecureCommunication.Secio1Stream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  name: ReadAsync(Byte[], Int32, Int32, CancellationToken)
  href: api/PeerTalk.SecureCommunication.Secio1Stream.html#PeerTalk_SecureCommunication_Secio1Stream_ReadAsync_System_Byte___System_Int32_System_Int32_System_Threading_CancellationToken_
  commentId: M:PeerTalk.SecureCommunication.Secio1Stream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  name.vb: ReadAsync(Byte(), Int32, Int32, CancellationToken)
  fullName: PeerTalk.SecureCommunication.Secio1Stream.ReadAsync(System.Byte[], System.Int32, System.Int32, System.Threading.CancellationToken)
  fullName.vb: PeerTalk.SecureCommunication.Secio1Stream.ReadAsync(System.Byte(), System.Int32, System.Int32, System.Threading.CancellationToken)
  nameWithType: Secio1Stream.ReadAsync(Byte[], Int32, Int32, CancellationToken)
  nameWithType.vb: Secio1Stream.ReadAsync(Byte(), Int32, Int32, CancellationToken)
- uid: PeerTalk.SecureCommunication.Secio1Stream.ReadAsync*
  name: ReadAsync
  href: api/PeerTalk.SecureCommunication.Secio1Stream.html#PeerTalk_SecureCommunication_Secio1Stream_ReadAsync_
  commentId: Overload:PeerTalk.SecureCommunication.Secio1Stream.ReadAsync
  isSpec: "True"
  fullName: PeerTalk.SecureCommunication.Secio1Stream.ReadAsync
  nameWithType: Secio1Stream.ReadAsync
- uid: PeerTalk.SecureCommunication.Secio1Stream.Seek(System.Int64,System.IO.SeekOrigin)
  name: Seek(Int64, SeekOrigin)
  href: api/PeerTalk.SecureCommunication.Secio1Stream.html#PeerTalk_SecureCommunication_Secio1Stream_Seek_System_Int64_System_IO_SeekOrigin_
  commentId: M:PeerTalk.SecureCommunication.Secio1Stream.Seek(System.Int64,System.IO.SeekOrigin)
  fullName: PeerTalk.SecureCommunication.Secio1Stream.Seek(System.Int64, System.IO.SeekOrigin)
  nameWithType: Secio1Stream.Seek(Int64, SeekOrigin)
- uid: PeerTalk.SecureCommunication.Secio1Stream.Seek*
  name: Seek
  href: api/PeerTalk.SecureCommunication.Secio1Stream.html#PeerTalk_SecureCommunication_Secio1Stream_Seek_
  commentId: Overload:PeerTalk.SecureCommunication.Secio1Stream.Seek
  isSpec: "True"
  fullName: PeerTalk.SecureCommunication.Secio1Stream.Seek
  nameWithType: Secio1Stream.Seek
- uid: PeerTalk.SecureCommunication.Secio1Stream.SetLength(System.Int64)
  name: SetLength(Int64)
  href: api/PeerTalk.SecureCommunication.Secio1Stream.html#PeerTalk_SecureCommunication_Secio1Stream_SetLength_System_Int64_
  commentId: M:PeerTalk.SecureCommunication.Secio1Stream.SetLength(System.Int64)
  fullName: PeerTalk.SecureCommunication.Secio1Stream.SetLength(System.Int64)
  nameWithType: Secio1Stream.SetLength(Int64)
- uid: PeerTalk.SecureCommunication.Secio1Stream.SetLength*
  name: SetLength
  href: api/PeerTalk.SecureCommunication.Secio1Stream.html#PeerTalk_SecureCommunication_Secio1Stream_SetLength_
  commentId: Overload:PeerTalk.SecureCommunication.Secio1Stream.SetLength
  isSpec: "True"
  fullName: PeerTalk.SecureCommunication.Secio1Stream.SetLength
  nameWithType: Secio1Stream.SetLength
- uid: PeerTalk.SecureCommunication.Secio1Stream.Write(System.Byte[],System.Int32,System.Int32)
  name: Write(Byte[], Int32, Int32)
  href: api/PeerTalk.SecureCommunication.Secio1Stream.html#PeerTalk_SecureCommunication_Secio1Stream_Write_System_Byte___System_Int32_System_Int32_
  commentId: M:PeerTalk.SecureCommunication.Secio1Stream.Write(System.Byte[],System.Int32,System.Int32)
  name.vb: Write(Byte(), Int32, Int32)
  fullName: PeerTalk.SecureCommunication.Secio1Stream.Write(System.Byte[], System.Int32, System.Int32)
  fullName.vb: PeerTalk.SecureCommunication.Secio1Stream.Write(System.Byte(), System.Int32, System.Int32)
  nameWithType: Secio1Stream.Write(Byte[], Int32, Int32)
  nameWithType.vb: Secio1Stream.Write(Byte(), Int32, Int32)
- uid: PeerTalk.SecureCommunication.Secio1Stream.Write*
  name: Write
  href: api/PeerTalk.SecureCommunication.Secio1Stream.html#PeerTalk_SecureCommunication_Secio1Stream_Write_
  commentId: Overload:PeerTalk.SecureCommunication.Secio1Stream.Write
  isSpec: "True"
  fullName: PeerTalk.SecureCommunication.Secio1Stream.Write
  nameWithType: Secio1Stream.Write
- uid: PeerTalk.SecureCommunication.Secio1Stream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  name: WriteAsync(Byte[], Int32, Int32, CancellationToken)
  href: api/PeerTalk.SecureCommunication.Secio1Stream.html#PeerTalk_SecureCommunication_Secio1Stream_WriteAsync_System_Byte___System_Int32_System_Int32_System_Threading_CancellationToken_
  commentId: M:PeerTalk.SecureCommunication.Secio1Stream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  name.vb: WriteAsync(Byte(), Int32, Int32, CancellationToken)
  fullName: PeerTalk.SecureCommunication.Secio1Stream.WriteAsync(System.Byte[], System.Int32, System.Int32, System.Threading.CancellationToken)
  fullName.vb: PeerTalk.SecureCommunication.Secio1Stream.WriteAsync(System.Byte(), System.Int32, System.Int32, System.Threading.CancellationToken)
  nameWithType: Secio1Stream.WriteAsync(Byte[], Int32, Int32, CancellationToken)
  nameWithType.vb: Secio1Stream.WriteAsync(Byte(), Int32, Int32, CancellationToken)
- uid: PeerTalk.SecureCommunication.Secio1Stream.WriteAsync*
  name: WriteAsync
  href: api/PeerTalk.SecureCommunication.Secio1Stream.html#PeerTalk_SecureCommunication_Secio1Stream_WriteAsync_
  commentId: Overload:PeerTalk.SecureCommunication.Secio1Stream.WriteAsync
  isSpec: "True"
  fullName: PeerTalk.SecureCommunication.Secio1Stream.WriteAsync
  nameWithType: Secio1Stream.WriteAsync
- uid: PeerTalk.SecureCommunication.Secio1Stream.WriteByte(System.Byte)
  name: WriteByte(Byte)
  href: api/PeerTalk.SecureCommunication.Secio1Stream.html#PeerTalk_SecureCommunication_Secio1Stream_WriteByte_System_Byte_
  commentId: M:PeerTalk.SecureCommunication.Secio1Stream.WriteByte(System.Byte)
  fullName: PeerTalk.SecureCommunication.Secio1Stream.WriteByte(System.Byte)
  nameWithType: Secio1Stream.WriteByte(Byte)
- uid: PeerTalk.SecureCommunication.Secio1Stream.WriteByte*
  name: WriteByte
  href: api/PeerTalk.SecureCommunication.Secio1Stream.html#PeerTalk_SecureCommunication_Secio1Stream_WriteByte_
  commentId: Overload:PeerTalk.SecureCommunication.Secio1Stream.WriteByte
  isSpec: "True"
  fullName: PeerTalk.SecureCommunication.Secio1Stream.WriteByte
  nameWithType: Secio1Stream.WriteByte
- uid: PeerTalk.StatsStream
  name: StatsStream
  href: api/PeerTalk.StatsStream.html
  commentId: T:PeerTalk.StatsStream
  fullName: PeerTalk.StatsStream
  nameWithType: StatsStream
- uid: PeerTalk.StatsStream.#ctor(System.IO.Stream)
  name: StatsStream(Stream)
  href: api/PeerTalk.StatsStream.html#PeerTalk_StatsStream__ctor_System_IO_Stream_
  commentId: M:PeerTalk.StatsStream.#ctor(System.IO.Stream)
  fullName: PeerTalk.StatsStream.StatsStream(System.IO.Stream)
  nameWithType: StatsStream.StatsStream(Stream)
- uid: PeerTalk.StatsStream.#ctor*
  name: StatsStream
  href: api/PeerTalk.StatsStream.html#PeerTalk_StatsStream__ctor_
  commentId: Overload:PeerTalk.StatsStream.#ctor
  isSpec: "True"
  fullName: PeerTalk.StatsStream.StatsStream
  nameWithType: StatsStream.StatsStream
- uid: PeerTalk.StatsStream.AllBandwidth
  name: AllBandwidth
  href: api/PeerTalk.StatsStream.html#PeerTalk_StatsStream_AllBandwidth
  commentId: F:PeerTalk.StatsStream.AllBandwidth
  fullName: PeerTalk.StatsStream.AllBandwidth
  nameWithType: StatsStream.AllBandwidth
- uid: PeerTalk.StatsStream.BytesRead
  name: BytesRead
  href: api/PeerTalk.StatsStream.html#PeerTalk_StatsStream_BytesRead
  commentId: P:PeerTalk.StatsStream.BytesRead
  fullName: PeerTalk.StatsStream.BytesRead
  nameWithType: StatsStream.BytesRead
- uid: PeerTalk.StatsStream.BytesRead*
  name: BytesRead
  href: api/PeerTalk.StatsStream.html#PeerTalk_StatsStream_BytesRead_
  commentId: Overload:PeerTalk.StatsStream.BytesRead
  isSpec: "True"
  fullName: PeerTalk.StatsStream.BytesRead
  nameWithType: StatsStream.BytesRead
- uid: PeerTalk.StatsStream.BytesWritten
  name: BytesWritten
  href: api/PeerTalk.StatsStream.html#PeerTalk_StatsStream_BytesWritten
  commentId: P:PeerTalk.StatsStream.BytesWritten
  fullName: PeerTalk.StatsStream.BytesWritten
  nameWithType: StatsStream.BytesWritten
- uid: PeerTalk.StatsStream.BytesWritten*
  name: BytesWritten
  href: api/PeerTalk.StatsStream.html#PeerTalk_StatsStream_BytesWritten_
  commentId: Overload:PeerTalk.StatsStream.BytesWritten
  isSpec: "True"
  fullName: PeerTalk.StatsStream.BytesWritten
  nameWithType: StatsStream.BytesWritten
- uid: PeerTalk.StatsStream.CanRead
  name: CanRead
  href: api/PeerTalk.StatsStream.html#PeerTalk_StatsStream_CanRead
  commentId: P:PeerTalk.StatsStream.CanRead
  fullName: PeerTalk.StatsStream.CanRead
  nameWithType: StatsStream.CanRead
- uid: PeerTalk.StatsStream.CanRead*
  name: CanRead
  href: api/PeerTalk.StatsStream.html#PeerTalk_StatsStream_CanRead_
  commentId: Overload:PeerTalk.StatsStream.CanRead
  isSpec: "True"
  fullName: PeerTalk.StatsStream.CanRead
  nameWithType: StatsStream.CanRead
- uid: PeerTalk.StatsStream.CanSeek
  name: CanSeek
  href: api/PeerTalk.StatsStream.html#PeerTalk_StatsStream_CanSeek
  commentId: P:PeerTalk.StatsStream.CanSeek
  fullName: PeerTalk.StatsStream.CanSeek
  nameWithType: StatsStream.CanSeek
- uid: PeerTalk.StatsStream.CanSeek*
  name: CanSeek
  href: api/PeerTalk.StatsStream.html#PeerTalk_StatsStream_CanSeek_
  commentId: Overload:PeerTalk.StatsStream.CanSeek
  isSpec: "True"
  fullName: PeerTalk.StatsStream.CanSeek
  nameWithType: StatsStream.CanSeek
- uid: PeerTalk.StatsStream.CanTimeout
  name: CanTimeout
  href: api/PeerTalk.StatsStream.html#PeerTalk_StatsStream_CanTimeout
  commentId: P:PeerTalk.StatsStream.CanTimeout
  fullName: PeerTalk.StatsStream.CanTimeout
  nameWithType: StatsStream.CanTimeout
- uid: PeerTalk.StatsStream.CanTimeout*
  name: CanTimeout
  href: api/PeerTalk.StatsStream.html#PeerTalk_StatsStream_CanTimeout_
  commentId: Overload:PeerTalk.StatsStream.CanTimeout
  isSpec: "True"
  fullName: PeerTalk.StatsStream.CanTimeout
  nameWithType: StatsStream.CanTimeout
- uid: PeerTalk.StatsStream.CanWrite
  name: CanWrite
  href: api/PeerTalk.StatsStream.html#PeerTalk_StatsStream_CanWrite
  commentId: P:PeerTalk.StatsStream.CanWrite
  fullName: PeerTalk.StatsStream.CanWrite
  nameWithType: StatsStream.CanWrite
- uid: PeerTalk.StatsStream.CanWrite*
  name: CanWrite
  href: api/PeerTalk.StatsStream.html#PeerTalk_StatsStream_CanWrite_
  commentId: Overload:PeerTalk.StatsStream.CanWrite
  isSpec: "True"
  fullName: PeerTalk.StatsStream.CanWrite
  nameWithType: StatsStream.CanWrite
- uid: PeerTalk.StatsStream.Dispose(System.Boolean)
  name: Dispose(Boolean)
  href: api/PeerTalk.StatsStream.html#PeerTalk_StatsStream_Dispose_System_Boolean_
  commentId: M:PeerTalk.StatsStream.Dispose(System.Boolean)
  fullName: PeerTalk.StatsStream.Dispose(System.Boolean)
  nameWithType: StatsStream.Dispose(Boolean)
- uid: PeerTalk.StatsStream.Dispose*
  name: Dispose
  href: api/PeerTalk.StatsStream.html#PeerTalk_StatsStream_Dispose_
  commentId: Overload:PeerTalk.StatsStream.Dispose
  isSpec: "True"
  fullName: PeerTalk.StatsStream.Dispose
  nameWithType: StatsStream.Dispose
- uid: PeerTalk.StatsStream.Flush
  name: Flush()
  href: api/PeerTalk.StatsStream.html#PeerTalk_StatsStream_Flush
  commentId: M:PeerTalk.StatsStream.Flush
  fullName: PeerTalk.StatsStream.Flush()
  nameWithType: StatsStream.Flush()
- uid: PeerTalk.StatsStream.Flush*
  name: Flush
  href: api/PeerTalk.StatsStream.html#PeerTalk_StatsStream_Flush_
  commentId: Overload:PeerTalk.StatsStream.Flush
  isSpec: "True"
  fullName: PeerTalk.StatsStream.Flush
  nameWithType: StatsStream.Flush
- uid: PeerTalk.StatsStream.FlushAsync(System.Threading.CancellationToken)
  name: FlushAsync(CancellationToken)
  href: api/PeerTalk.StatsStream.html#PeerTalk_StatsStream_FlushAsync_System_Threading_CancellationToken_
  commentId: M:PeerTalk.StatsStream.FlushAsync(System.Threading.CancellationToken)
  fullName: PeerTalk.StatsStream.FlushAsync(System.Threading.CancellationToken)
  nameWithType: StatsStream.FlushAsync(CancellationToken)
- uid: PeerTalk.StatsStream.FlushAsync*
  name: FlushAsync
  href: api/PeerTalk.StatsStream.html#PeerTalk_StatsStream_FlushAsync_
  commentId: Overload:PeerTalk.StatsStream.FlushAsync
  isSpec: "True"
  fullName: PeerTalk.StatsStream.FlushAsync
  nameWithType: StatsStream.FlushAsync
- uid: PeerTalk.StatsStream.LastUsed
  name: LastUsed
  href: api/PeerTalk.StatsStream.html#PeerTalk_StatsStream_LastUsed
  commentId: P:PeerTalk.StatsStream.LastUsed
  fullName: PeerTalk.StatsStream.LastUsed
  nameWithType: StatsStream.LastUsed
- uid: PeerTalk.StatsStream.LastUsed*
  name: LastUsed
  href: api/PeerTalk.StatsStream.html#PeerTalk_StatsStream_LastUsed_
  commentId: Overload:PeerTalk.StatsStream.LastUsed
  isSpec: "True"
  fullName: PeerTalk.StatsStream.LastUsed
  nameWithType: StatsStream.LastUsed
- uid: PeerTalk.StatsStream.Length
  name: Length
  href: api/PeerTalk.StatsStream.html#PeerTalk_StatsStream_Length
  commentId: P:PeerTalk.StatsStream.Length
  fullName: PeerTalk.StatsStream.Length
  nameWithType: StatsStream.Length
- uid: PeerTalk.StatsStream.Length*
  name: Length
  href: api/PeerTalk.StatsStream.html#PeerTalk_StatsStream_Length_
  commentId: Overload:PeerTalk.StatsStream.Length
  isSpec: "True"
  fullName: PeerTalk.StatsStream.Length
  nameWithType: StatsStream.Length
- uid: PeerTalk.StatsStream.Position
  name: Position
  href: api/PeerTalk.StatsStream.html#PeerTalk_StatsStream_Position
  commentId: P:PeerTalk.StatsStream.Position
  fullName: PeerTalk.StatsStream.Position
  nameWithType: StatsStream.Position
- uid: PeerTalk.StatsStream.Position*
  name: Position
  href: api/PeerTalk.StatsStream.html#PeerTalk_StatsStream_Position_
  commentId: Overload:PeerTalk.StatsStream.Position
  isSpec: "True"
  fullName: PeerTalk.StatsStream.Position
  nameWithType: StatsStream.Position
- uid: PeerTalk.StatsStream.Read(System.Byte[],System.Int32,System.Int32)
  name: Read(Byte[], Int32, Int32)
  href: api/PeerTalk.StatsStream.html#PeerTalk_StatsStream_Read_System_Byte___System_Int32_System_Int32_
  commentId: M:PeerTalk.StatsStream.Read(System.Byte[],System.Int32,System.Int32)
  name.vb: Read(Byte(), Int32, Int32)
  fullName: PeerTalk.StatsStream.Read(System.Byte[], System.Int32, System.Int32)
  fullName.vb: PeerTalk.StatsStream.Read(System.Byte(), System.Int32, System.Int32)
  nameWithType: StatsStream.Read(Byte[], Int32, Int32)
  nameWithType.vb: StatsStream.Read(Byte(), Int32, Int32)
- uid: PeerTalk.StatsStream.Read*
  name: Read
  href: api/PeerTalk.StatsStream.html#PeerTalk_StatsStream_Read_
  commentId: Overload:PeerTalk.StatsStream.Read
  isSpec: "True"
  fullName: PeerTalk.StatsStream.Read
  nameWithType: StatsStream.Read
- uid: PeerTalk.StatsStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  name: ReadAsync(Byte[], Int32, Int32, CancellationToken)
  href: api/PeerTalk.StatsStream.html#PeerTalk_StatsStream_ReadAsync_System_Byte___System_Int32_System_Int32_System_Threading_CancellationToken_
  commentId: M:PeerTalk.StatsStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  name.vb: ReadAsync(Byte(), Int32, Int32, CancellationToken)
  fullName: PeerTalk.StatsStream.ReadAsync(System.Byte[], System.Int32, System.Int32, System.Threading.CancellationToken)
  fullName.vb: PeerTalk.StatsStream.ReadAsync(System.Byte(), System.Int32, System.Int32, System.Threading.CancellationToken)
  nameWithType: StatsStream.ReadAsync(Byte[], Int32, Int32, CancellationToken)
  nameWithType.vb: StatsStream.ReadAsync(Byte(), Int32, Int32, CancellationToken)
- uid: PeerTalk.StatsStream.ReadAsync*
  name: ReadAsync
  href: api/PeerTalk.StatsStream.html#PeerTalk_StatsStream_ReadAsync_
  commentId: Overload:PeerTalk.StatsStream.ReadAsync
  isSpec: "True"
  fullName: PeerTalk.StatsStream.ReadAsync
  nameWithType: StatsStream.ReadAsync
- uid: PeerTalk.StatsStream.ReadByte
  name: ReadByte()
  href: api/PeerTalk.StatsStream.html#PeerTalk_StatsStream_ReadByte
  commentId: M:PeerTalk.StatsStream.ReadByte
  fullName: PeerTalk.StatsStream.ReadByte()
  nameWithType: StatsStream.ReadByte()
- uid: PeerTalk.StatsStream.ReadByte*
  name: ReadByte
  href: api/PeerTalk.StatsStream.html#PeerTalk_StatsStream_ReadByte_
  commentId: Overload:PeerTalk.StatsStream.ReadByte
  isSpec: "True"
  fullName: PeerTalk.StatsStream.ReadByte
  nameWithType: StatsStream.ReadByte
- uid: PeerTalk.StatsStream.ReadTimeout
  name: ReadTimeout
  href: api/PeerTalk.StatsStream.html#PeerTalk_StatsStream_ReadTimeout
  commentId: P:PeerTalk.StatsStream.ReadTimeout
  fullName: PeerTalk.StatsStream.ReadTimeout
  nameWithType: StatsStream.ReadTimeout
- uid: PeerTalk.StatsStream.ReadTimeout*
  name: ReadTimeout
  href: api/PeerTalk.StatsStream.html#PeerTalk_StatsStream_ReadTimeout_
  commentId: Overload:PeerTalk.StatsStream.ReadTimeout
  isSpec: "True"
  fullName: PeerTalk.StatsStream.ReadTimeout
  nameWithType: StatsStream.ReadTimeout
- uid: PeerTalk.StatsStream.Seek(System.Int64,System.IO.SeekOrigin)
  name: Seek(Int64, SeekOrigin)
  href: api/PeerTalk.StatsStream.html#PeerTalk_StatsStream_Seek_System_Int64_System_IO_SeekOrigin_
  commentId: M:PeerTalk.StatsStream.Seek(System.Int64,System.IO.SeekOrigin)
  fullName: PeerTalk.StatsStream.Seek(System.Int64, System.IO.SeekOrigin)
  nameWithType: StatsStream.Seek(Int64, SeekOrigin)
- uid: PeerTalk.StatsStream.Seek*
  name: Seek
  href: api/PeerTalk.StatsStream.html#PeerTalk_StatsStream_Seek_
  commentId: Overload:PeerTalk.StatsStream.Seek
  isSpec: "True"
  fullName: PeerTalk.StatsStream.Seek
  nameWithType: StatsStream.Seek
- uid: PeerTalk.StatsStream.SetLength(System.Int64)
  name: SetLength(Int64)
  href: api/PeerTalk.StatsStream.html#PeerTalk_StatsStream_SetLength_System_Int64_
  commentId: M:PeerTalk.StatsStream.SetLength(System.Int64)
  fullName: PeerTalk.StatsStream.SetLength(System.Int64)
  nameWithType: StatsStream.SetLength(Int64)
- uid: PeerTalk.StatsStream.SetLength*
  name: SetLength
  href: api/PeerTalk.StatsStream.html#PeerTalk_StatsStream_SetLength_
  commentId: Overload:PeerTalk.StatsStream.SetLength
  isSpec: "True"
  fullName: PeerTalk.StatsStream.SetLength
  nameWithType: StatsStream.SetLength
- uid: PeerTalk.StatsStream.Write(System.Byte[],System.Int32,System.Int32)
  name: Write(Byte[], Int32, Int32)
  href: api/PeerTalk.StatsStream.html#PeerTalk_StatsStream_Write_System_Byte___System_Int32_System_Int32_
  commentId: M:PeerTalk.StatsStream.Write(System.Byte[],System.Int32,System.Int32)
  name.vb: Write(Byte(), Int32, Int32)
  fullName: PeerTalk.StatsStream.Write(System.Byte[], System.Int32, System.Int32)
  fullName.vb: PeerTalk.StatsStream.Write(System.Byte(), System.Int32, System.Int32)
  nameWithType: StatsStream.Write(Byte[], Int32, Int32)
  nameWithType.vb: StatsStream.Write(Byte(), Int32, Int32)
- uid: PeerTalk.StatsStream.Write*
  name: Write
  href: api/PeerTalk.StatsStream.html#PeerTalk_StatsStream_Write_
  commentId: Overload:PeerTalk.StatsStream.Write
  isSpec: "True"
  fullName: PeerTalk.StatsStream.Write
  nameWithType: StatsStream.Write
- uid: PeerTalk.StatsStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  name: WriteAsync(Byte[], Int32, Int32, CancellationToken)
  href: api/PeerTalk.StatsStream.html#PeerTalk_StatsStream_WriteAsync_System_Byte___System_Int32_System_Int32_System_Threading_CancellationToken_
  commentId: M:PeerTalk.StatsStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  name.vb: WriteAsync(Byte(), Int32, Int32, CancellationToken)
  fullName: PeerTalk.StatsStream.WriteAsync(System.Byte[], System.Int32, System.Int32, System.Threading.CancellationToken)
  fullName.vb: PeerTalk.StatsStream.WriteAsync(System.Byte(), System.Int32, System.Int32, System.Threading.CancellationToken)
  nameWithType: StatsStream.WriteAsync(Byte[], Int32, Int32, CancellationToken)
  nameWithType.vb: StatsStream.WriteAsync(Byte(), Int32, Int32, CancellationToken)
- uid: PeerTalk.StatsStream.WriteAsync*
  name: WriteAsync
  href: api/PeerTalk.StatsStream.html#PeerTalk_StatsStream_WriteAsync_
  commentId: Overload:PeerTalk.StatsStream.WriteAsync
  isSpec: "True"
  fullName: PeerTalk.StatsStream.WriteAsync
  nameWithType: StatsStream.WriteAsync
- uid: PeerTalk.StatsStream.WriteByte(System.Byte)
  name: WriteByte(Byte)
  href: api/PeerTalk.StatsStream.html#PeerTalk_StatsStream_WriteByte_System_Byte_
  commentId: M:PeerTalk.StatsStream.WriteByte(System.Byte)
  fullName: PeerTalk.StatsStream.WriteByte(System.Byte)
  nameWithType: StatsStream.WriteByte(Byte)
- uid: PeerTalk.StatsStream.WriteByte*
  name: WriteByte
  href: api/PeerTalk.StatsStream.html#PeerTalk_StatsStream_WriteByte_
  commentId: Overload:PeerTalk.StatsStream.WriteByte
  isSpec: "True"
  fullName: PeerTalk.StatsStream.WriteByte
  nameWithType: StatsStream.WriteByte
- uid: PeerTalk.StatsStream.WriteTimeout
  name: WriteTimeout
  href: api/PeerTalk.StatsStream.html#PeerTalk_StatsStream_WriteTimeout
  commentId: P:PeerTalk.StatsStream.WriteTimeout
  fullName: PeerTalk.StatsStream.WriteTimeout
  nameWithType: StatsStream.WriteTimeout
- uid: PeerTalk.StatsStream.WriteTimeout*
  name: WriteTimeout
  href: api/PeerTalk.StatsStream.html#PeerTalk_StatsStream_WriteTimeout_
  commentId: Overload:PeerTalk.StatsStream.WriteTimeout
  isSpec: "True"
  fullName: PeerTalk.StatsStream.WriteTimeout
  nameWithType: StatsStream.WriteTimeout
- uid: PeerTalk.Swarm
  name: Swarm
  href: api/PeerTalk.Swarm.html
  commentId: T:PeerTalk.Swarm
  fullName: PeerTalk.Swarm
  nameWithType: Swarm
- uid: PeerTalk.Swarm.AddProtocol(PeerTalk.Protocols.IPeerProtocol)
  name: AddProtocol(IPeerProtocol)
  href: api/PeerTalk.Swarm.html#PeerTalk_Swarm_AddProtocol_PeerTalk_Protocols_IPeerProtocol_
  commentId: M:PeerTalk.Swarm.AddProtocol(PeerTalk.Protocols.IPeerProtocol)
  fullName: PeerTalk.Swarm.AddProtocol(PeerTalk.Protocols.IPeerProtocol)
  nameWithType: Swarm.AddProtocol(IPeerProtocol)
- uid: PeerTalk.Swarm.AddProtocol*
  name: AddProtocol
  href: api/PeerTalk.Swarm.html#PeerTalk_Swarm_AddProtocol_
  commentId: Overload:PeerTalk.Swarm.AddProtocol
  isSpec: "True"
  fullName: PeerTalk.Swarm.AddProtocol
  nameWithType: Swarm.AddProtocol
- uid: PeerTalk.Swarm.BlackList
  name: BlackList
  href: api/PeerTalk.Swarm.html#PeerTalk_Swarm_BlackList
  commentId: P:PeerTalk.Swarm.BlackList
  fullName: PeerTalk.Swarm.BlackList
  nameWithType: Swarm.BlackList
- uid: PeerTalk.Swarm.BlackList*
  name: BlackList
  href: api/PeerTalk.Swarm.html#PeerTalk_Swarm_BlackList_
  commentId: Overload:PeerTalk.Swarm.BlackList
  isSpec: "True"
  fullName: PeerTalk.Swarm.BlackList
  nameWithType: Swarm.BlackList
- uid: PeerTalk.Swarm.ConnectAsync(Ipfs.MultiAddress,System.Threading.CancellationToken)
  name: ConnectAsync(MultiAddress, CancellationToken)
  href: api/PeerTalk.Swarm.html#PeerTalk_Swarm_ConnectAsync_Ipfs_MultiAddress_System_Threading_CancellationToken_
  commentId: M:PeerTalk.Swarm.ConnectAsync(Ipfs.MultiAddress,System.Threading.CancellationToken)
  fullName: PeerTalk.Swarm.ConnectAsync(Ipfs.MultiAddress, System.Threading.CancellationToken)
  nameWithType: Swarm.ConnectAsync(MultiAddress, CancellationToken)
- uid: PeerTalk.Swarm.ConnectAsync(Ipfs.Peer,System.Threading.CancellationToken)
  name: ConnectAsync(Peer, CancellationToken)
  href: api/PeerTalk.Swarm.html#PeerTalk_Swarm_ConnectAsync_Ipfs_Peer_System_Threading_CancellationToken_
  commentId: M:PeerTalk.Swarm.ConnectAsync(Ipfs.Peer,System.Threading.CancellationToken)
  fullName: PeerTalk.Swarm.ConnectAsync(Ipfs.Peer, System.Threading.CancellationToken)
  nameWithType: Swarm.ConnectAsync(Peer, CancellationToken)
- uid: PeerTalk.Swarm.ConnectAsync*
  name: ConnectAsync
  href: api/PeerTalk.Swarm.html#PeerTalk_Swarm_ConnectAsync_
  commentId: Overload:PeerTalk.Swarm.ConnectAsync
  isSpec: "True"
  fullName: PeerTalk.Swarm.ConnectAsync
  nameWithType: Swarm.ConnectAsync
- uid: PeerTalk.Swarm.ConnectionEstablished
  name: ConnectionEstablished
  href: api/PeerTalk.Swarm.html#PeerTalk_Swarm_ConnectionEstablished
  commentId: E:PeerTalk.Swarm.ConnectionEstablished
  fullName: PeerTalk.Swarm.ConnectionEstablished
  nameWithType: Swarm.ConnectionEstablished
- uid: PeerTalk.Swarm.DialAsync(Ipfs.Peer,System.String,System.Threading.CancellationToken)
  name: DialAsync(Peer, String, CancellationToken)
  href: api/PeerTalk.Swarm.html#PeerTalk_Swarm_DialAsync_Ipfs_Peer_System_String_System_Threading_CancellationToken_
  commentId: M:PeerTalk.Swarm.DialAsync(Ipfs.Peer,System.String,System.Threading.CancellationToken)
  fullName: PeerTalk.Swarm.DialAsync(Ipfs.Peer, System.String, System.Threading.CancellationToken)
  nameWithType: Swarm.DialAsync(Peer, String, CancellationToken)
- uid: PeerTalk.Swarm.DialAsync*
  name: DialAsync
  href: api/PeerTalk.Swarm.html#PeerTalk_Swarm_DialAsync_
  commentId: Overload:PeerTalk.Swarm.DialAsync
  isSpec: "True"
  fullName: PeerTalk.Swarm.DialAsync
  nameWithType: Swarm.DialAsync
- uid: PeerTalk.Swarm.DisconnectAsync(Ipfs.MultiAddress,System.Threading.CancellationToken)
  name: DisconnectAsync(MultiAddress, CancellationToken)
  href: api/PeerTalk.Swarm.html#PeerTalk_Swarm_DisconnectAsync_Ipfs_MultiAddress_System_Threading_CancellationToken_
  commentId: M:PeerTalk.Swarm.DisconnectAsync(Ipfs.MultiAddress,System.Threading.CancellationToken)
  fullName: PeerTalk.Swarm.DisconnectAsync(Ipfs.MultiAddress, System.Threading.CancellationToken)
  nameWithType: Swarm.DisconnectAsync(MultiAddress, CancellationToken)
- uid: PeerTalk.Swarm.DisconnectAsync*
  name: DisconnectAsync
  href: api/PeerTalk.Swarm.html#PeerTalk_Swarm_DisconnectAsync_
  commentId: Overload:PeerTalk.Swarm.DisconnectAsync
  isSpec: "True"
  fullName: PeerTalk.Swarm.DisconnectAsync
  nameWithType: Swarm.DisconnectAsync
- uid: PeerTalk.Swarm.IsAllowedAsync(Ipfs.MultiAddress,System.Threading.CancellationToken)
  name: IsAllowedAsync(MultiAddress, CancellationToken)
  href: api/PeerTalk.Swarm.html#PeerTalk_Swarm_IsAllowedAsync_Ipfs_MultiAddress_System_Threading_CancellationToken_
  commentId: M:PeerTalk.Swarm.IsAllowedAsync(Ipfs.MultiAddress,System.Threading.CancellationToken)
  fullName: PeerTalk.Swarm.IsAllowedAsync(Ipfs.MultiAddress, System.Threading.CancellationToken)
  nameWithType: Swarm.IsAllowedAsync(MultiAddress, CancellationToken)
- uid: PeerTalk.Swarm.IsAllowedAsync*
  name: IsAllowedAsync
  href: api/PeerTalk.Swarm.html#PeerTalk_Swarm_IsAllowedAsync_
  commentId: Overload:PeerTalk.Swarm.IsAllowedAsync
  isSpec: "True"
  fullName: PeerTalk.Swarm.IsAllowedAsync
  nameWithType: Swarm.IsAllowedAsync
- uid: PeerTalk.Swarm.IsNotAllowedAsync(Ipfs.MultiAddress,System.Threading.CancellationToken)
  name: IsNotAllowedAsync(MultiAddress, CancellationToken)
  href: api/PeerTalk.Swarm.html#PeerTalk_Swarm_IsNotAllowedAsync_Ipfs_MultiAddress_System_Threading_CancellationToken_
  commentId: M:PeerTalk.Swarm.IsNotAllowedAsync(Ipfs.MultiAddress,System.Threading.CancellationToken)
  fullName: PeerTalk.Swarm.IsNotAllowedAsync(Ipfs.MultiAddress, System.Threading.CancellationToken)
  nameWithType: Swarm.IsNotAllowedAsync(MultiAddress, CancellationToken)
- uid: PeerTalk.Swarm.IsNotAllowedAsync*
  name: IsNotAllowedAsync
  href: api/PeerTalk.Swarm.html#PeerTalk_Swarm_IsNotAllowedAsync_
  commentId: Overload:PeerTalk.Swarm.IsNotAllowedAsync
  isSpec: "True"
  fullName: PeerTalk.Swarm.IsNotAllowedAsync
  nameWithType: Swarm.IsNotAllowedAsync
- uid: PeerTalk.Swarm.KnownPeerAddresses
  name: KnownPeerAddresses
  href: api/PeerTalk.Swarm.html#PeerTalk_Swarm_KnownPeerAddresses
  commentId: P:PeerTalk.Swarm.KnownPeerAddresses
  fullName: PeerTalk.Swarm.KnownPeerAddresses
  nameWithType: Swarm.KnownPeerAddresses
- uid: PeerTalk.Swarm.KnownPeerAddresses*
  name: KnownPeerAddresses
  href: api/PeerTalk.Swarm.html#PeerTalk_Swarm_KnownPeerAddresses_
  commentId: Overload:PeerTalk.Swarm.KnownPeerAddresses
  isSpec: "True"
  fullName: PeerTalk.Swarm.KnownPeerAddresses
  nameWithType: Swarm.KnownPeerAddresses
- uid: PeerTalk.Swarm.KnownPeers
  name: KnownPeers
  href: api/PeerTalk.Swarm.html#PeerTalk_Swarm_KnownPeers
  commentId: P:PeerTalk.Swarm.KnownPeers
  fullName: PeerTalk.Swarm.KnownPeers
  nameWithType: Swarm.KnownPeers
- uid: PeerTalk.Swarm.KnownPeers*
  name: KnownPeers
  href: api/PeerTalk.Swarm.html#PeerTalk_Swarm_KnownPeers_
  commentId: Overload:PeerTalk.Swarm.KnownPeers
  isSpec: "True"
  fullName: PeerTalk.Swarm.KnownPeers
  nameWithType: Swarm.KnownPeers
- uid: PeerTalk.Swarm.ListenerEstablished
  name: ListenerEstablished
  href: api/PeerTalk.Swarm.html#PeerTalk_Swarm_ListenerEstablished
  commentId: E:PeerTalk.Swarm.ListenerEstablished
  fullName: PeerTalk.Swarm.ListenerEstablished
  nameWithType: Swarm.ListenerEstablished
- uid: PeerTalk.Swarm.LocalPeer
  name: LocalPeer
  href: api/PeerTalk.Swarm.html#PeerTalk_Swarm_LocalPeer
  commentId: P:PeerTalk.Swarm.LocalPeer
  fullName: PeerTalk.Swarm.LocalPeer
  nameWithType: Swarm.LocalPeer
- uid: PeerTalk.Swarm.LocalPeer*
  name: LocalPeer
  href: api/PeerTalk.Swarm.html#PeerTalk_Swarm_LocalPeer_
  commentId: Overload:PeerTalk.Swarm.LocalPeer
  isSpec: "True"
  fullName: PeerTalk.Swarm.LocalPeer
  nameWithType: Swarm.LocalPeer
- uid: PeerTalk.Swarm.LocalPeerKey
  name: LocalPeerKey
  href: api/PeerTalk.Swarm.html#PeerTalk_Swarm_LocalPeerKey
  commentId: P:PeerTalk.Swarm.LocalPeerKey
  fullName: PeerTalk.Swarm.LocalPeerKey
  nameWithType: Swarm.LocalPeerKey
- uid: PeerTalk.Swarm.LocalPeerKey*
  name: LocalPeerKey
  href: api/PeerTalk.Swarm.html#PeerTalk_Swarm_LocalPeerKey_
  commentId: Overload:PeerTalk.Swarm.LocalPeerKey
  isSpec: "True"
  fullName: PeerTalk.Swarm.LocalPeerKey
  nameWithType: Swarm.LocalPeerKey
- uid: PeerTalk.Swarm.Manager
  name: Manager
  href: api/PeerTalk.Swarm.html#PeerTalk_Swarm_Manager
  commentId: F:PeerTalk.Swarm.Manager
  fullName: PeerTalk.Swarm.Manager
  nameWithType: Swarm.Manager
- uid: PeerTalk.Swarm.PeerDiscovered
  name: PeerDiscovered
  href: api/PeerTalk.Swarm.html#PeerTalk_Swarm_PeerDiscovered
  commentId: E:PeerTalk.Swarm.PeerDiscovered
  fullName: PeerTalk.Swarm.PeerDiscovered
  nameWithType: Swarm.PeerDiscovered
- uid: PeerTalk.Swarm.RegisterPeer(Ipfs.Peer)
  name: RegisterPeer(Peer)
  href: api/PeerTalk.Swarm.html#PeerTalk_Swarm_RegisterPeer_Ipfs_Peer_
  commentId: M:PeerTalk.Swarm.RegisterPeer(Ipfs.Peer)
  fullName: PeerTalk.Swarm.RegisterPeer(Ipfs.Peer)
  nameWithType: Swarm.RegisterPeer(Peer)
- uid: PeerTalk.Swarm.RegisterPeer*
  name: RegisterPeer
  href: api/PeerTalk.Swarm.html#PeerTalk_Swarm_RegisterPeer_
  commentId: Overload:PeerTalk.Swarm.RegisterPeer
  isSpec: "True"
  fullName: PeerTalk.Swarm.RegisterPeer
  nameWithType: Swarm.RegisterPeer
- uid: PeerTalk.Swarm.RegisterPeerAsync(Ipfs.MultiAddress,System.Threading.CancellationToken)
  name: RegisterPeerAsync(MultiAddress, CancellationToken)
  href: api/PeerTalk.Swarm.html#PeerTalk_Swarm_RegisterPeerAsync_Ipfs_MultiAddress_System_Threading_CancellationToken_
  commentId: M:PeerTalk.Swarm.RegisterPeerAsync(Ipfs.MultiAddress,System.Threading.CancellationToken)
  fullName: PeerTalk.Swarm.RegisterPeerAsync(Ipfs.MultiAddress, System.Threading.CancellationToken)
  nameWithType: Swarm.RegisterPeerAsync(MultiAddress, CancellationToken)
- uid: PeerTalk.Swarm.RegisterPeerAsync*
  name: RegisterPeerAsync
  href: api/PeerTalk.Swarm.html#PeerTalk_Swarm_RegisterPeerAsync_
  commentId: Overload:PeerTalk.Swarm.RegisterPeerAsync
  isSpec: "True"
  fullName: PeerTalk.Swarm.RegisterPeerAsync
  nameWithType: Swarm.RegisterPeerAsync
- uid: PeerTalk.Swarm.RemoveProtocol(PeerTalk.Protocols.IPeerProtocol)
  name: RemoveProtocol(IPeerProtocol)
  href: api/PeerTalk.Swarm.html#PeerTalk_Swarm_RemoveProtocol_PeerTalk_Protocols_IPeerProtocol_
  commentId: M:PeerTalk.Swarm.RemoveProtocol(PeerTalk.Protocols.IPeerProtocol)
  fullName: PeerTalk.Swarm.RemoveProtocol(PeerTalk.Protocols.IPeerProtocol)
  nameWithType: Swarm.RemoveProtocol(IPeerProtocol)
- uid: PeerTalk.Swarm.RemoveProtocol*
  name: RemoveProtocol
  href: api/PeerTalk.Swarm.html#PeerTalk_Swarm_RemoveProtocol_
  commentId: Overload:PeerTalk.Swarm.RemoveProtocol
  isSpec: "True"
  fullName: PeerTalk.Swarm.RemoveProtocol
  nameWithType: Swarm.RemoveProtocol
- uid: PeerTalk.Swarm.Router
  name: Router
  href: api/PeerTalk.Swarm.html#PeerTalk_Swarm_Router
  commentId: P:PeerTalk.Swarm.Router
  fullName: PeerTalk.Swarm.Router
  nameWithType: Swarm.Router
- uid: PeerTalk.Swarm.Router*
  name: Router
  href: api/PeerTalk.Swarm.html#PeerTalk_Swarm_Router_
  commentId: Overload:PeerTalk.Swarm.Router
  isSpec: "True"
  fullName: PeerTalk.Swarm.Router
  nameWithType: Swarm.Router
- uid: PeerTalk.Swarm.StartAsync
  name: StartAsync()
  href: api/PeerTalk.Swarm.html#PeerTalk_Swarm_StartAsync
  commentId: M:PeerTalk.Swarm.StartAsync
  fullName: PeerTalk.Swarm.StartAsync()
  nameWithType: Swarm.StartAsync()
- uid: PeerTalk.Swarm.StartAsync*
  name: StartAsync
  href: api/PeerTalk.Swarm.html#PeerTalk_Swarm_StartAsync_
  commentId: Overload:PeerTalk.Swarm.StartAsync
  isSpec: "True"
  fullName: PeerTalk.Swarm.StartAsync
  nameWithType: Swarm.StartAsync
- uid: PeerTalk.Swarm.StartListeningAsync(Ipfs.MultiAddress)
  name: StartListeningAsync(MultiAddress)
  href: api/PeerTalk.Swarm.html#PeerTalk_Swarm_StartListeningAsync_Ipfs_MultiAddress_
  commentId: M:PeerTalk.Swarm.StartListeningAsync(Ipfs.MultiAddress)
  fullName: PeerTalk.Swarm.StartListeningAsync(Ipfs.MultiAddress)
  nameWithType: Swarm.StartListeningAsync(MultiAddress)
- uid: PeerTalk.Swarm.StartListeningAsync*
  name: StartListeningAsync
  href: api/PeerTalk.Swarm.html#PeerTalk_Swarm_StartListeningAsync_
  commentId: Overload:PeerTalk.Swarm.StartListeningAsync
  isSpec: "True"
  fullName: PeerTalk.Swarm.StartListeningAsync
  nameWithType: Swarm.StartListeningAsync
- uid: PeerTalk.Swarm.StopAsync
  name: StopAsync()
  href: api/PeerTalk.Swarm.html#PeerTalk_Swarm_StopAsync
  commentId: M:PeerTalk.Swarm.StopAsync
  fullName: PeerTalk.Swarm.StopAsync()
  nameWithType: Swarm.StopAsync()
- uid: PeerTalk.Swarm.StopAsync*
  name: StopAsync
  href: api/PeerTalk.Swarm.html#PeerTalk_Swarm_StopAsync_
  commentId: Overload:PeerTalk.Swarm.StopAsync
  isSpec: "True"
  fullName: PeerTalk.Swarm.StopAsync
  nameWithType: Swarm.StopAsync
- uid: PeerTalk.Swarm.StopListeningAsync(Ipfs.MultiAddress)
  name: StopListeningAsync(MultiAddress)
  href: api/PeerTalk.Swarm.html#PeerTalk_Swarm_StopListeningAsync_Ipfs_MultiAddress_
  commentId: M:PeerTalk.Swarm.StopListeningAsync(Ipfs.MultiAddress)
  fullName: PeerTalk.Swarm.StopListeningAsync(Ipfs.MultiAddress)
  nameWithType: Swarm.StopListeningAsync(MultiAddress)
- uid: PeerTalk.Swarm.StopListeningAsync*
  name: StopListeningAsync
  href: api/PeerTalk.Swarm.html#PeerTalk_Swarm_StopListeningAsync_
  commentId: Overload:PeerTalk.Swarm.StopListeningAsync
  isSpec: "True"
  fullName: PeerTalk.Swarm.StopListeningAsync
  nameWithType: Swarm.StopListeningAsync
- uid: PeerTalk.Swarm.WhiteList
  name: WhiteList
  href: api/PeerTalk.Swarm.html#PeerTalk_Swarm_WhiteList
  commentId: P:PeerTalk.Swarm.WhiteList
  fullName: PeerTalk.Swarm.WhiteList
  nameWithType: Swarm.WhiteList
- uid: PeerTalk.Swarm.WhiteList*
  name: WhiteList
  href: api/PeerTalk.Swarm.html#PeerTalk_Swarm_WhiteList_
  commentId: Overload:PeerTalk.Swarm.WhiteList
  isSpec: "True"
  fullName: PeerTalk.Swarm.WhiteList
  nameWithType: Swarm.WhiteList
- uid: PeerTalk.TaskHelper
  name: TaskHelper
  href: api/PeerTalk.TaskHelper.html
  commentId: T:PeerTalk.TaskHelper
  fullName: PeerTalk.TaskHelper
  nameWithType: TaskHelper
- uid: PeerTalk.TaskHelper.WhenAnyResult*
  name: WhenAnyResult
  href: api/PeerTalk.TaskHelper.html#PeerTalk_TaskHelper_WhenAnyResult_
  commentId: Overload:PeerTalk.TaskHelper.WhenAnyResult
  isSpec: "True"
  fullName: PeerTalk.TaskHelper.WhenAnyResult
  nameWithType: TaskHelper.WhenAnyResult
- uid: PeerTalk.TaskHelper.WhenAnyResult``1(System.Collections.Generic.IEnumerable{System.Threading.Tasks.Task{``0}},System.Threading.CancellationToken)
  name: WhenAnyResult<T>(IEnumerable<Task<T>>, CancellationToken)
  href: api/PeerTalk.TaskHelper.html#PeerTalk_TaskHelper_WhenAnyResult__1_System_Collections_Generic_IEnumerable_System_Threading_Tasks_Task___0___System_Threading_CancellationToken_
  commentId: M:PeerTalk.TaskHelper.WhenAnyResult``1(System.Collections.Generic.IEnumerable{System.Threading.Tasks.Task{``0}},System.Threading.CancellationToken)
  name.vb: WhenAnyResult(Of T)(IEnumerable(Of Task(Of T)), CancellationToken)
  fullName: PeerTalk.TaskHelper.WhenAnyResult<T>(System.Collections.Generic.IEnumerable<System.Threading.Tasks.Task<T>>, System.Threading.CancellationToken)
  fullName.vb: PeerTalk.TaskHelper.WhenAnyResult(Of T)(System.Collections.Generic.IEnumerable(Of System.Threading.Tasks.Task(Of T)), System.Threading.CancellationToken)
  nameWithType: TaskHelper.WhenAnyResult<T>(IEnumerable<Task<T>>, CancellationToken)
  nameWithType.vb: TaskHelper.WhenAnyResult(Of T)(IEnumerable(Of Task(Of T)), CancellationToken)
- uid: PeerTalk.Transports
  name: PeerTalk.Transports
  href: api/PeerTalk.Transports.html
  commentId: N:PeerTalk.Transports
  fullName: PeerTalk.Transports
  nameWithType: PeerTalk.Transports
- uid: PeerTalk.Transports.IPeerTransport
  name: IPeerTransport
  href: api/PeerTalk.Transports.IPeerTransport.html
  commentId: T:PeerTalk.Transports.IPeerTransport
  fullName: PeerTalk.Transports.IPeerTransport
  nameWithType: IPeerTransport
- uid: PeerTalk.Transports.IPeerTransport.ConnectAsync(Ipfs.MultiAddress,System.Threading.CancellationToken)
  name: ConnectAsync(MultiAddress, CancellationToken)
  href: api/PeerTalk.Transports.IPeerTransport.html#PeerTalk_Transports_IPeerTransport_ConnectAsync_Ipfs_MultiAddress_System_Threading_CancellationToken_
  commentId: M:PeerTalk.Transports.IPeerTransport.ConnectAsync(Ipfs.MultiAddress,System.Threading.CancellationToken)
  fullName: PeerTalk.Transports.IPeerTransport.ConnectAsync(Ipfs.MultiAddress, System.Threading.CancellationToken)
  nameWithType: IPeerTransport.ConnectAsync(MultiAddress, CancellationToken)
- uid: PeerTalk.Transports.IPeerTransport.ConnectAsync*
  name: ConnectAsync
  href: api/PeerTalk.Transports.IPeerTransport.html#PeerTalk_Transports_IPeerTransport_ConnectAsync_
  commentId: Overload:PeerTalk.Transports.IPeerTransport.ConnectAsync
  isSpec: "True"
  fullName: PeerTalk.Transports.IPeerTransport.ConnectAsync
  nameWithType: IPeerTransport.ConnectAsync
- uid: PeerTalk.Transports.IPeerTransport.Listen(Ipfs.MultiAddress,System.Action{System.IO.Stream,Ipfs.MultiAddress,Ipfs.MultiAddress},System.Threading.CancellationToken)
  name: Listen(MultiAddress, Action<Stream, MultiAddress, MultiAddress>, CancellationToken)
  href: api/PeerTalk.Transports.IPeerTransport.html#PeerTalk_Transports_IPeerTransport_Listen_Ipfs_MultiAddress_System_Action_System_IO_Stream_Ipfs_MultiAddress_Ipfs_MultiAddress__System_Threading_CancellationToken_
  commentId: M:PeerTalk.Transports.IPeerTransport.Listen(Ipfs.MultiAddress,System.Action{System.IO.Stream,Ipfs.MultiAddress,Ipfs.MultiAddress},System.Threading.CancellationToken)
  name.vb: Listen(MultiAddress, Action(Of Stream, MultiAddress, MultiAddress), CancellationToken)
  fullName: PeerTalk.Transports.IPeerTransport.Listen(Ipfs.MultiAddress, System.Action<System.IO.Stream, Ipfs.MultiAddress, Ipfs.MultiAddress>, System.Threading.CancellationToken)
  fullName.vb: PeerTalk.Transports.IPeerTransport.Listen(Ipfs.MultiAddress, System.Action(Of System.IO.Stream, Ipfs.MultiAddress, Ipfs.MultiAddress), System.Threading.CancellationToken)
  nameWithType: IPeerTransport.Listen(MultiAddress, Action<Stream, MultiAddress, MultiAddress>, CancellationToken)
  nameWithType.vb: IPeerTransport.Listen(MultiAddress, Action(Of Stream, MultiAddress, MultiAddress), CancellationToken)
- uid: PeerTalk.Transports.IPeerTransport.Listen*
  name: Listen
  href: api/PeerTalk.Transports.IPeerTransport.html#PeerTalk_Transports_IPeerTransport_Listen_
  commentId: Overload:PeerTalk.Transports.IPeerTransport.Listen
  isSpec: "True"
  fullName: PeerTalk.Transports.IPeerTransport.Listen
  nameWithType: IPeerTransport.Listen
- uid: PeerTalk.Transports.Tcp
  name: Tcp
  href: api/PeerTalk.Transports.Tcp.html
  commentId: T:PeerTalk.Transports.Tcp
  fullName: PeerTalk.Transports.Tcp
  nameWithType: Tcp
- uid: PeerTalk.Transports.Tcp.ConnectAsync(Ipfs.MultiAddress,System.Threading.CancellationToken)
  name: ConnectAsync(MultiAddress, CancellationToken)
  href: api/PeerTalk.Transports.Tcp.html#PeerTalk_Transports_Tcp_ConnectAsync_Ipfs_MultiAddress_System_Threading_CancellationToken_
  commentId: M:PeerTalk.Transports.Tcp.ConnectAsync(Ipfs.MultiAddress,System.Threading.CancellationToken)
  fullName: PeerTalk.Transports.Tcp.ConnectAsync(Ipfs.MultiAddress, System.Threading.CancellationToken)
  nameWithType: Tcp.ConnectAsync(MultiAddress, CancellationToken)
- uid: PeerTalk.Transports.Tcp.ConnectAsync*
  name: ConnectAsync
  href: api/PeerTalk.Transports.Tcp.html#PeerTalk_Transports_Tcp_ConnectAsync_
  commentId: Overload:PeerTalk.Transports.Tcp.ConnectAsync
  isSpec: "True"
  fullName: PeerTalk.Transports.Tcp.ConnectAsync
  nameWithType: Tcp.ConnectAsync
- uid: PeerTalk.Transports.Tcp.Listen(Ipfs.MultiAddress,System.Action{System.IO.Stream,Ipfs.MultiAddress,Ipfs.MultiAddress},System.Threading.CancellationToken)
  name: Listen(MultiAddress, Action<Stream, MultiAddress, MultiAddress>, CancellationToken)
  href: api/PeerTalk.Transports.Tcp.html#PeerTalk_Transports_Tcp_Listen_Ipfs_MultiAddress_System_Action_System_IO_Stream_Ipfs_MultiAddress_Ipfs_MultiAddress__System_Threading_CancellationToken_
  commentId: M:PeerTalk.Transports.Tcp.Listen(Ipfs.MultiAddress,System.Action{System.IO.Stream,Ipfs.MultiAddress,Ipfs.MultiAddress},System.Threading.CancellationToken)
  name.vb: Listen(MultiAddress, Action(Of Stream, MultiAddress, MultiAddress), CancellationToken)
  fullName: PeerTalk.Transports.Tcp.Listen(Ipfs.MultiAddress, System.Action<System.IO.Stream, Ipfs.MultiAddress, Ipfs.MultiAddress>, System.Threading.CancellationToken)
  fullName.vb: PeerTalk.Transports.Tcp.Listen(Ipfs.MultiAddress, System.Action(Of System.IO.Stream, Ipfs.MultiAddress, Ipfs.MultiAddress), System.Threading.CancellationToken)
  nameWithType: Tcp.Listen(MultiAddress, Action<Stream, MultiAddress, MultiAddress>, CancellationToken)
  nameWithType.vb: Tcp.Listen(MultiAddress, Action(Of Stream, MultiAddress, MultiAddress), CancellationToken)
- uid: PeerTalk.Transports.Tcp.Listen*
  name: Listen
  href: api/PeerTalk.Transports.Tcp.html#PeerTalk_Transports_Tcp_Listen_
  commentId: Overload:PeerTalk.Transports.Tcp.Listen
  isSpec: "True"
  fullName: PeerTalk.Transports.Tcp.Listen
  nameWithType: Tcp.Listen
- uid: PeerTalk.Transports.Tcp.MinReadTimeout
  name: MinReadTimeout
  href: api/PeerTalk.Transports.Tcp.html#PeerTalk_Transports_Tcp_MinReadTimeout
  commentId: F:PeerTalk.Transports.Tcp.MinReadTimeout
  fullName: PeerTalk.Transports.Tcp.MinReadTimeout
  nameWithType: Tcp.MinReadTimeout
- uid: PeerTalk.Transports.Udp
  name: Udp
  href: api/PeerTalk.Transports.Udp.html
  commentId: T:PeerTalk.Transports.Udp
  fullName: PeerTalk.Transports.Udp
  nameWithType: Udp
- uid: PeerTalk.Transports.Udp.ConnectAsync(Ipfs.MultiAddress,System.Threading.CancellationToken)
  name: ConnectAsync(MultiAddress, CancellationToken)
  href: api/PeerTalk.Transports.Udp.html#PeerTalk_Transports_Udp_ConnectAsync_Ipfs_MultiAddress_System_Threading_CancellationToken_
  commentId: M:PeerTalk.Transports.Udp.ConnectAsync(Ipfs.MultiAddress,System.Threading.CancellationToken)
  fullName: PeerTalk.Transports.Udp.ConnectAsync(Ipfs.MultiAddress, System.Threading.CancellationToken)
  nameWithType: Udp.ConnectAsync(MultiAddress, CancellationToken)
- uid: PeerTalk.Transports.Udp.ConnectAsync*
  name: ConnectAsync
  href: api/PeerTalk.Transports.Udp.html#PeerTalk_Transports_Udp_ConnectAsync_
  commentId: Overload:PeerTalk.Transports.Udp.ConnectAsync
  isSpec: "True"
  fullName: PeerTalk.Transports.Udp.ConnectAsync
  nameWithType: Udp.ConnectAsync
- uid: PeerTalk.Transports.Udp.Listen(Ipfs.MultiAddress,System.Action{System.IO.Stream,Ipfs.MultiAddress,Ipfs.MultiAddress},System.Threading.CancellationToken)
  name: Listen(MultiAddress, Action<Stream, MultiAddress, MultiAddress>, CancellationToken)
  href: api/PeerTalk.Transports.Udp.html#PeerTalk_Transports_Udp_Listen_Ipfs_MultiAddress_System_Action_System_IO_Stream_Ipfs_MultiAddress_Ipfs_MultiAddress__System_Threading_CancellationToken_
  commentId: M:PeerTalk.Transports.Udp.Listen(Ipfs.MultiAddress,System.Action{System.IO.Stream,Ipfs.MultiAddress,Ipfs.MultiAddress},System.Threading.CancellationToken)
  name.vb: Listen(MultiAddress, Action(Of Stream, MultiAddress, MultiAddress), CancellationToken)
  fullName: PeerTalk.Transports.Udp.Listen(Ipfs.MultiAddress, System.Action<System.IO.Stream, Ipfs.MultiAddress, Ipfs.MultiAddress>, System.Threading.CancellationToken)
  fullName.vb: PeerTalk.Transports.Udp.Listen(Ipfs.MultiAddress, System.Action(Of System.IO.Stream, Ipfs.MultiAddress, Ipfs.MultiAddress), System.Threading.CancellationToken)
  nameWithType: Udp.Listen(MultiAddress, Action<Stream, MultiAddress, MultiAddress>, CancellationToken)
  nameWithType.vb: Udp.Listen(MultiAddress, Action(Of Stream, MultiAddress, MultiAddress), CancellationToken)
- uid: PeerTalk.Transports.Udp.Listen*
  name: Listen
  href: api/PeerTalk.Transports.Udp.html#PeerTalk_Transports_Udp_Listen_
  commentId: Overload:PeerTalk.Transports.Udp.Listen
  isSpec: "True"
  fullName: PeerTalk.Transports.Udp.Listen
  nameWithType: Udp.Listen
- uid: PeerTalk.WhiteList`1
  name: WhiteList<T>
  href: api/PeerTalk.WhiteList-1.html
  commentId: T:PeerTalk.WhiteList`1
  name.vb: WhiteList(Of T)
  fullName: PeerTalk.WhiteList<T>
  fullName.vb: PeerTalk.WhiteList(Of T)
  nameWithType: WhiteList<T>
  nameWithType.vb: WhiteList(Of T)
- uid: PeerTalk.WhiteList`1.IsAllowedAsync(`0,System.Threading.CancellationToken)
  name: IsAllowedAsync(T, CancellationToken)
  href: api/PeerTalk.WhiteList-1.html#PeerTalk_WhiteList_1_IsAllowedAsync__0_System_Threading_CancellationToken_
  commentId: M:PeerTalk.WhiteList`1.IsAllowedAsync(`0,System.Threading.CancellationToken)
  fullName: PeerTalk.WhiteList<T>.IsAllowedAsync(T, System.Threading.CancellationToken)
  fullName.vb: PeerTalk.WhiteList(Of T).IsAllowedAsync(T, System.Threading.CancellationToken)
  nameWithType: WhiteList<T>.IsAllowedAsync(T, CancellationToken)
  nameWithType.vb: WhiteList(Of T).IsAllowedAsync(T, CancellationToken)
- uid: PeerTalk.WhiteList`1.IsAllowedAsync*
  name: IsAllowedAsync
  href: api/PeerTalk.WhiteList-1.html#PeerTalk_WhiteList_1_IsAllowedAsync_
  commentId: Overload:PeerTalk.WhiteList`1.IsAllowedAsync
  isSpec: "True"
  fullName: PeerTalk.WhiteList<T>.IsAllowedAsync
  fullName.vb: PeerTalk.WhiteList(Of T).IsAllowedAsync
  nameWithType: WhiteList<T>.IsAllowedAsync
  nameWithType.vb: WhiteList(Of T).IsAllowedAsync
- uid: PeerTalk.WhiteList`1.IsNotAllowedAsync(`0,System.Threading.CancellationToken)
  name: IsNotAllowedAsync(T, CancellationToken)
  href: api/PeerTalk.WhiteList-1.html#PeerTalk_WhiteList_1_IsNotAllowedAsync__0_System_Threading_CancellationToken_
  commentId: M:PeerTalk.WhiteList`1.IsNotAllowedAsync(`0,System.Threading.CancellationToken)
  fullName: PeerTalk.WhiteList<T>.IsNotAllowedAsync(T, System.Threading.CancellationToken)
  fullName.vb: PeerTalk.WhiteList(Of T).IsNotAllowedAsync(T, System.Threading.CancellationToken)
  nameWithType: WhiteList<T>.IsNotAllowedAsync(T, CancellationToken)
  nameWithType.vb: WhiteList(Of T).IsNotAllowedAsync(T, CancellationToken)
- uid: PeerTalk.WhiteList`1.IsNotAllowedAsync*
  name: IsNotAllowedAsync
  href: api/PeerTalk.WhiteList-1.html#PeerTalk_WhiteList_1_IsNotAllowedAsync_
  commentId: Overload:PeerTalk.WhiteList`1.IsNotAllowedAsync
  isSpec: "True"
  fullName: PeerTalk.WhiteList<T>.IsNotAllowedAsync
  fullName.vb: PeerTalk.WhiteList(Of T).IsNotAllowedAsync
  nameWithType: WhiteList<T>.IsNotAllowedAsync
  nameWithType.vb: WhiteList(Of T).IsNotAllowedAsync
